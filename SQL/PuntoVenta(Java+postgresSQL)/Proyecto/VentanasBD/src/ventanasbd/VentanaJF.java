/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ventanasbd;


import java.awt.Container;
import java.awt.FlowLayout;
import java.beans.Statement;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author estebannoguerapenaranda
 */

public class VentanaJF extends javax.swing.JFrame {
    
    private db_conect sql_conexion = new db_conect();
    
    
   String nombreCompleto = "";

//    private JPanel jpanel1;
// 
//    private Container contenedor;
//    
//    private FlowLayout esquema;
    
//    String passw = "4321";
//    
//    String nombre = "Esteban";
//      
//    String nombre1 = "Rafa";
//    
//    String nombre2 = "Juan";
//    
//    private Connection connection;
//    
//    private String colummName;
    
    /**
     * Creates new form VentanaJF
     */
    
    
    public VentanaJF() {
        
        
        initComponents();
        
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     * @param username
     * @param password
     * @param database
     * @param table
     */
//    public void conexion() throws SQLException{
//
//    Connection c = null;
//      try {
//         Class.forName("org.postgresql.Driver");
//         connection = DriverManager.getConnection("jdbc:postgresql://localhost/Proyecto_Punto_de_venta?"+"user=postgres&password=rafa02661234");
//      } catch (ClassNotFoundException e) {
//         System.err.println(e.getClass().getName()+": "+e.getMessage());
//         System.exit(0);
//      } catch (SQLException e) {
//          System.err.println(e.getClass().getName()+": "+e.getMessage());
//          System.exit(0);
//        }
//      //System.out.println("Opened database successfully");
//      
//    }//fin de conexion
//    
    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        password = new javax.swing.JPasswordField();
        usuario = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Base de Datos I");
        setBackground(new java.awt.Color(204, 255, 204));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(204, 255, 153));

        jPanel2.setBackground(new java.awt.Color(255, 0, 102));

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel1.setText("Usuario");

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel2.setText("Password");

        password.setPreferredSize(new java.awt.Dimension(100, 20));

        usuario.setPreferredSize(new java.awt.Dimension(100, 20));

        jButton1.setText("Aceptar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Cancelar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel2Layout = new org.jdesktop.layout.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .add(111, 111, 111)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabel2)
                            .add(jLabel1))
                        .add(50, 50, 50)
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(password, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(usuario, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(jButton1)
                        .add(54, 54, 54)
                        .add(jButton2)))
                .addContainerGap(134, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .add(91, 91, 91)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel1)
                    .add(usuario, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 33, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(54, 54, 54)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel2)
                    .add(password, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 33, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 69, Short.MAX_VALUE)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jButton1)
                    .add(jButton2))
                .add(67, 67, 67))
        );

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(348, 348, 348)
                .add(jPanel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(390, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(236, 236, 236)
                .add(jPanel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(272, Short.MAX_VALUE))
        );

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .add(0, 0, Short.MAX_VALUE)
                .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setSize(new java.awt.Dimension(1193, 905));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
                                               
            try {                                         
                
                try {
                    // TODO add your handling code here:
                    
                    //String username, String password, String database, String table
                    this.sql_conexion.conexion();
                } catch (SQLException ex) {
                    Logger.getLogger(VentanaJF.class.getName()).log(Level.SEVERE, null, ex);
                }
                String pass = new String(this.password.getPassword());
                String nom = this.usuario.getText();
                if((!nom.equals("")) && !pass.equals("")){
                
                
                this.usuario.setText("");

                this.password.setText("");
                
                
                String nombre1, apellido1, apellido2;
                nombre1 = apellido1 = apellido2  = null;
               
                String[] split = nom.split(" ");
                
                nombreCompleto = nom;

                if(split.length == 3){
                
                    nombre1 = split[0];
                    apellido1 = split[1];
                    apellido2 = split[2];
                }
                else if(split.length != 3){
                    JOptionPane.showMessageDialog(null, "Número incorrecto de palabras en el usuario");
                    return;
                }
                
                
                 
                String valorRetorno; 
                
                valorRetorno = sql_conexion.ejecutarRetornando("select verificaUsuario('"+nombre1+"','"+apellido1+"','"+apellido2+"',"+pass+")");
               
                
        if( valorRetorno.charAt(0) == 'C' ){
        
            new Vendedor(nom, pass).setVisible(true);
            
            this.setVisible(false);
            
        }//fin de if
        
        else if( valorRetorno.charAt(0) == 'A'){
            
            new VentanaAdministrador(nombreCompleto, pass).setVisible(true);
            
            this.setVisible(false);
            
        }//fin de if
        
          else if( valorRetorno.charAt(0) == 'B' ){

            
            new Bodeguero(nom).setVisible(true);
            
            this.setVisible(false);
            
        }//fin de if
        
          else if ( valorRetorno.charAt(0) == 'N' ){
                
                JOptionPane.showMessageDialog(null, "el valor de nombre o contrasena es incorrecto");
            
        }//fin de else

                }//end if
                else{
                    JOptionPane.showMessageDialog(null, "el valor de nombre o contrasena es incorrecto");
                }
                
            } catch (SQLException ex) {
                Logger.getLogger(VentanaJF.class.getName()).log(Level.SEVERE, null, ex);
            }
            

        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        
        int resp=JOptionPane.showConfirmDialog(null,"¿Está seguro de abandonar esta ventana?");
        if (JOptionPane.OK_OPTION == resp){
            //JOptionPane.showMessageDialog(null,"Selecciona opción Afirmativa");
            System.exit(0);
        }
        else{
            //JOptionPane.showMessageDialog(null,"No selecciona una opción afirmativa");
        }                          
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        
        int resp=JOptionPane.showConfirmDialog(null,"¿Está seguro de abandonar esta ventana?");
        if (JOptionPane.OK_OPTION == resp){
            //JOptionPane.showMessageDialog(null,"Selecciona opción Afirmativa");
            System.exit(0);
        }
        else{
            //JOptionPane.showMessageDialog(null,"No selecciona una opción afirmativa");
        }                           
        
    }//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaJF.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaJF.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaJF.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaJF.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        
//        final CalendarService myService = new CalendarService("ejemplo calendario");
//        try {
//            myService.setUserCredentials("noguera.esteban@gmail.com", "1770estebanjosue");
//            
//        } catch (AuthenticationException ex) {
//            Logger.getLogger(VentanaJF.class.getName()).log(Level.SEVERE, null, ex);
//        }

//        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
//
                    new VentanaJF().setVisible(true);
                    //new Bodeguero("Esteban").setVisible(true);
//                    //DocsService s = new DocsService("Doc List Demo");
//                // Create the calendar
//
//                    URL postUrl = null;
//                try {
//                    postUrl = new URL("https://www.google.com/calendar/feeds/noguera.esteban@gmail.com/private/full");
//                } catch (MalformedURLException ex) {
//                    Logger.getLogger(VentanaJF.class.getName()).log(Level.SEVERE, null, ex);
//                }
//CalendarEventEntry myEntry = new CalendarEventEntry();
//
//myEntry.setTitle(new PlainTextConstruct("llamar a rafa"));
//myEntry.setContent(new PlainTextConstruct("recordarle la tarea de Bases I"));
//
//
//DateTime startTime = DateTime.parseDateTime("2014-04-17T15:00:00-08:00");
//DateTime endTime = DateTime.parseDateTime("2014-04-17T17:00:00-08:00");
//When eventTimes = new When();
//eventTimes.setStartTime(startTime);
//eventTimes.setEndTime(endTime);
//myEntry.addTime(eventTimes);

//                try {
//                    // Send the request and receive the response:
//                    CalendarEventEntry insertedEntry = myService.insert(postUrl, myEntry);
//                } catch (IOException ex) {
//                    Logger.getLogger(VentanaJF.class.getName()).log(Level.SEVERE, null, ex);
//                } catch (ServiceException ex) {
//                    Logger.getLogger(VentanaJF.class.getName()).log(Level.SEVERE, null, ex);
//                }
                
            }//fin de run            

        });
    }//fin de main
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPasswordField password;
    private javax.swing.JTextField usuario;
    // End of variables declaration//GEN-END:variables
}
