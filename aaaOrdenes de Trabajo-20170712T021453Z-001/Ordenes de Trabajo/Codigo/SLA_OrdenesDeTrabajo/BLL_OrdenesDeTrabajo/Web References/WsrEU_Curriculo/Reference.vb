'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.34209
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Data
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.34209.
'
Namespace WsrEU_Curriculo
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="wsEU_CurriculoSoap", [Namespace]:="http://eu.ucr.ac.cr/EU_Curriculo")>  _
    Partial Public Class wsEU_Curriculo
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private EmpReconocimientos_ListarRegistrosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EmpReconocimientos_ListarRegistrosListaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EmpReconocimientos_ObtenerRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EmpReconocimientos_InsertarRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EmpReconocimientos_BorrarRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EmpReconocimientos_ModificarRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EmpReconocimientos_Rpt_CurriculoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EntEU_SINCRO_SIRH_InsertarRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EU_SINCRO_SIRH_BorrarRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EU_SINCRO_SIRH_ModificarRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EU_SINCRO_SIRH_ListarRegistrosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EU_SINCRO_SIRH_ListarRegistrosListaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EU_SINCRO_SIRH_ObtenerRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EU_SINCRO_SIRH_SincronizarRevisionAtestadosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EU_SINCRO_SIRH_SincronizarCatalogosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EU_SINCRO_SIRH_SincronizarOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EU_IMAGEN_CARNE_ReimprimirCarneOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Eu_Imagen_Carne_ListarRegistroReporteTomaCarnetsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Eu_Imagen_Carne_ObtenerRegistroBasicoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerGradoAcademicoFuncionarioOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Provincia_ObtenerRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Canton_ListarRegistrosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Canton_ListarRegistrosListaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Canton_ObtenerRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Distrito_ListarRegistrosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Distrito_ListarRegistrosListaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Distrito_ObtenerRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EmpleadoEstado_ListarRegistrosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EmpleadoEstado_ListarRegistrosListaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EmpleadoEstado_ObtenerRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EmpleadoEstado_InsertarRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EmpleadoEstado_BorrarRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EmpleadoEstado_ModificarRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Gbl_Tipo_Telefono_ListarRegistrosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Gbl_Tipo_Telefono_ListarRegistrosListaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Gbl_Tipo_Telefono_ObtenerRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EU_EMP_TIPO_ListarRegistrosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EU_EMP_TIPO_ListarRegistrosListaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EU_EMP_TIPO_ObtenerRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Gbl_Tipo_Identificacion_ListarRegistrosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Gbl_Tipo_Identificacion_ListarRegistrosListaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Gbl_Tipo_Identificacion_ObtenerRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Gbl_Tipo_Licencia_ListarRegistrosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Gbl_Tipo_Licencia_ListarRegistrosListaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Gbl_Tipo_Licencia_ObtenerRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Gbl_Estado_Civil_ListarRegistrosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Gbl_Estado_Civil_ListarRegistrosListaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Gbl_Estado_Civil_ObtenerRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Gbl_Idiomas_ListarRegistrosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Gbl_Idiomas_ListarRegistrosListaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Gbl_Idiomas_ObtenerRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Produccion_ListarRegistrosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Produccion_ListarRegistrosListaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Produccion_ObtenerRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Produccion_InsertarRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Produccion_BorrarRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Produccion_ModificarRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Medio_ListarRegistrosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Medio_ListarRegistrosListaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Medio_ObtenerRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Medio_InsertarRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Medio_BorrarRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Medio_ModificarRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Estado_ListarRegistrosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Estado_ListarRegistrosListaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Estado_ObtenerRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EU_EMP_PRODUC_EMPLEADO_ListarAutoresInternosExternosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EmpProducciones_ListarRegistrosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EmpProducciones_ListarRegistrosListaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EmpProducciones_ObtenerRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EmpProducciones_InsertarRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EmpProducciones_BorrarRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EmpProducciones_ModificarRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EmpProducciones_ListarRegistrosCantidadOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EmpProducciones_Rpt_CurriculoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EU_AUTOR_EXTERNO_InsertarRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EU_AUTOR_EXTERNO_BorrarRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EU_AUTOR_EXTERNO_ModificarRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EU_AUTOR_EXTERNO_ListarRegistrosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EU_AUTOR_EXTERNO_ListarRegistrosListaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EU_AUTOR_EXTERNO_ObtenerRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EU_EMP_PRODUC_EMPLEADO_InsertarRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EU_EMP_PRODUC_EMPLEADO_BorrarRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EU_EMP_PRODUC_EMPLEADO_ModificarRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EU_EMP_PRODUC_EMPLEADO_ListarRegistrosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EU_EMP_PRODUC_EMPLEADO_ListarRegistrosListaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EU_EMP_PRODUC_EMPLEADO_ObtenerRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EU_PRODUC_AUTOR_EXTERNO_InsertarRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EU_PRODUC_AUTOR_EXTERNO_BorrarRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EU_PRODUC_AUTOR_EXTERNO_ModificarRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EU_PRODUC_AUTOR_EXTERNO_ListarRegistrosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EU_PRODUC_AUTOR_EXTERNO_ListarRegistrosListaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EU_PRODUC_AUTOR_EXTERNO_ObtenerRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EU_TIPO_VEHICULO_PRODUC_InsertarRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EU_TIPO_VEHICULO_PRODUC_BorrarRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EU_TIPO_VEHICULO_PRODUC_ModificarRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EU_TIPO_VEHICULO_PRODUC_ListarRegistrosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EU_TIPO_VEHICULO_PRODUC_ListarRegistrosListaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EU_TIPO_VEHICULO_PRODUC_ObtenerRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Reconocimientos_ListarRegistrosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Reconocimientos_ListarRegistrosListaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Reconocimientos_ObtenerRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Reconocimientos_InsertarRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Reconocimientos_BorrarRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Reconocimientos_ModificarRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EmpCursos_BorrarRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EmpCursos_ModificarRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EmpCursos_ModificarTituloOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EmpCursos_ObtenerTituloOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EmpCursos_Rpt_CurriculoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EmpCursosAut_ListarRegistrosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EmpCursosAut_ListarRegistrosListaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EmpCursosAut_ObtenerRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EmpCursosAut_InsertarRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EmpCursosAut_BorrarRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EmpCursosAut_ModificarRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EmpCertificaciones_ListarRegistrosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EmpCertificaciones_ListarRegistrosListaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EmpCertificaciones_ObtenerRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EmpCertificaciones_InsertarRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EmpCertificaciones_BorrarRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EmpCertificaciones_ModificarRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EmpCertificaciones_ModificarTituloOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EmpCertificaciones_ObtenerTituloOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EmpCertificaciones_Rpt_CurriculoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EmpCertificacionesAut_ListarRegistrosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EmpCertificacionesAut_ListarRegistrosListaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EmpCertificacionesAut_ObtenerRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EmpCertificacionesAut_InsertarRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EmpCertificacionesAut_BorrarRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EmpCertificacionesAut_ModificarRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Empleados_ObtenerFotografiaYCarneOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Empleados_ListarRegistrosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Empleados_ListarRegistrosListaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Empleados_ObtenerRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Empleados_InsertarRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Empleados_BorrarRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Empleados_ModificarRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Empleados_ModificarRegistroImagenOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Empleados_ModificarFotoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Empleados_ObtenerFotoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Empleados_Rpt_CurriculoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Empleados_Actualizacion_SIRH_EU_DatosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Empleados_Actualizacion_SIRH_EU_TipoEmpleadoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Empleados_Actualizacion_SIRH_EU_EmpleadoNuevoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Empleados_Actualizacion_SIRH_EU_EmpleadoCorreoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Empleados_Actualizacion_SIRH_EU_EmpleadoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Empleados_SincronizarEuSirhOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Empleados_SincronizarEuSirh_EmpleadosNuevosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Empleados_SincronizarEuSirh_CambioDatosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Empleados_SincronizarEuSirh_TipoEmpleadoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Empleados_SincronizarEuSirh_CorreoEmpleadoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Empleados_Actualizacion_SIRH_EU_EmpleadoJubiladoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Empleados_ListarEmpleadosPorRoleOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Funcionarios_ListarRegistrosListaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Funcionarios_ObtenerRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Emp_Parientes_InsertarRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Emp_Parientes_BorrarRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Emp_Parientes_ModificarRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Emp_Parientes_ListarRegistrosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Emp_Parientes_ListarRegistrosListaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Emp_Parientes_ObtenerRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Parentesco_BorrarRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Parentesco_ModificarRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Parentesco_InsertarRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Parentesco_ListarRegistrosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Parentesco_ListarRegistrosListaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Parentesco_ObtenerRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Requisitos_BorrarRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Requisitos_ModificarRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Requisitos_InsertarRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Requisitos_ListarRegistrosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Requisitos_ListarRegistrosListaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Requisitos_ObtenerRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Emp_Requisitos_InsertarRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Emp_Requisitos_BorrarRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Emp_Requisitos_ModificarRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Emp_Requisitos_ListarRegistrosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Emp_Requisitos_ListarRegistrosListaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Emp_Requisitos_ObtenerRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Emp_Requisitos_Rpt_CurriculoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Emp_Licencia_Conducir_ListarRegistrosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Emp_Licencia_Conducir_ListarRegistrosListaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Emp_Licencia_Conducir_ObtenerRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Emp_Licencia_Conducir_InsertarRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Emp_Licencia_Conducir_BorrarRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Emp_Licencia_Conducir_ModificarRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Licencia_Conducir_Rpt_CurriculoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Provincia_ListarRegistrosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Provincia_ListarRegistrosListaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EU_UNIDAD_InsertarRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EU_UNIDAD_BorrarRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EU_UNIDAD_ModificarRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EU_UNIDAD_ListarRegistrosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EU_UNIDAD_ListarRegistrosListaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EU_UNIDAD_ObtenerRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Carreras_ListarRegistrosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Carreras_ListarRegistrosListaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Carreras_ObtenerRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Carreras_InsertarRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Carreras_BorrarRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Carreras_ModificarRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private NivelEducativo_ListarRegistrosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private NivelEducativo_ListarRegistrosListaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private NivelEducativo_ObtenerRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private NivelEducativo_InsertarRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private NivelEducativo_BorrarRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private NivelEducativo_ModificarRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Telefonos_ListarRegistrosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Telefonos_ListarRegistrosListaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Telefonos_ObtenerRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Telefonos_InsertarRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Telefonos_BorrarRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Telefonos_ModificarRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Telefonos_Rpt_CurriculoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ExpLaboral_ListarRegistrosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ExpLaboral_ListarRegistrosListaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ExpLaboral_ObtenerRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ExpLaboral_InsertarRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ExpLaboral_BorrarRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ExpLaboral_ModificarRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ExpLaboral_Rpt_CurriculoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EmpEstFormales_ListarRegistrosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EmpEstFormales_ListarRegistrosListaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EmpEstFormales_ObtenerRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EmpEstFormales_InsertarRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EmpEstFormales_BorrarRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EmpEstFormales_ModificarRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EmpEstFormales_ModificarTituloOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EmpEstFormales_ObtenerTituloOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EmpEstFormales_Rpt_CurriculoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EmpEstFormalesAut_ListarRegistrosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EmpEstFormalesAut_ListarRegistrosListaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EmpEstFormalesAut_ObtenerRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EmpEstFormalesAut_InsertarRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EmpEstFormalesAut_BorrarRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EmpEstFormalesAut_ModificarRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Idiomas_ListarRegistrosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Idiomas_ListarRegistrosListaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Idiomas_ObtenerRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EmpIdiomas_ListarRegistrosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EmpIdiomas_ListarRegistrosListaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EmpIdiomas_ObtenerRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EmpIdiomas_InsertarRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EmpIdiomas_BorrarRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EmpIdiomas_ModificarRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EmpIdiomas_Rpt_CurriculoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EmpIdiomaTitulos_ListarRegistrosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EmpIdiomaTitulos_ListarRegistrosListaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EmpIdiomaTitulos_ObtenerRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EmpIdiomaTitulos_InsertarRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EmpIdiomaTitulos_BorrarRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EmpIdiomaTitulos_ModificarRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EmpIdiomaTitulos_ModificarTituloOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EmpIdiomaTitulos_ObtenerTituloOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EmpIdiomaTitulosAut_ListarRegistrosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EmpIdiomaTitulosAut_ListarRegistrosListaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EmpIdiomaTitulosAut_ObtenerRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EmpIdiomaTitulosAut_InsertarRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EmpIdiomaTitulosAut_BorrarRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EmpIdiomaTitulosAut_ModificarRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Nacion_ListarRegistrosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Nacion_ListarRegistrosListaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Nacion_ObtenerRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Cursos_ListarRegistrosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Cursos_ListarRegistrosListaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Cursos_ObtenerRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Cursos_InsertarRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Cursos_BorrarRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Cursos_ModificarRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EmpCursos_ListarRegistrosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EmpCursos_ListarRegistrosListaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EmpCursos_ObtenerRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EmpCursos_InsertarRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.My.MySettings.Default.BLL_OrdenesDeTrabajo_WsrEU_Curriculo_wsEU_Curriculo
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event EmpReconocimientos_ListarRegistrosCompleted As EmpReconocimientos_ListarRegistrosCompletedEventHandler
        
        '''<remarks/>
        Public Event EmpReconocimientos_ListarRegistrosListaCompleted As EmpReconocimientos_ListarRegistrosListaCompletedEventHandler
        
        '''<remarks/>
        Public Event EmpReconocimientos_ObtenerRegistroCompleted As EmpReconocimientos_ObtenerRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event EmpReconocimientos_InsertarRegistroCompleted As EmpReconocimientos_InsertarRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event EmpReconocimientos_BorrarRegistroCompleted As EmpReconocimientos_BorrarRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event EmpReconocimientos_ModificarRegistroCompleted As EmpReconocimientos_ModificarRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event EmpReconocimientos_Rpt_CurriculoCompleted As EmpReconocimientos_Rpt_CurriculoCompletedEventHandler
        
        '''<remarks/>
        Public Event EntEU_SINCRO_SIRH_InsertarRegistroCompleted As EntEU_SINCRO_SIRH_InsertarRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event EU_SINCRO_SIRH_BorrarRegistroCompleted As EU_SINCRO_SIRH_BorrarRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event EU_SINCRO_SIRH_ModificarRegistroCompleted As EU_SINCRO_SIRH_ModificarRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event EU_SINCRO_SIRH_ListarRegistrosCompleted As EU_SINCRO_SIRH_ListarRegistrosCompletedEventHandler
        
        '''<remarks/>
        Public Event EU_SINCRO_SIRH_ListarRegistrosListaCompleted As EU_SINCRO_SIRH_ListarRegistrosListaCompletedEventHandler
        
        '''<remarks/>
        Public Event EU_SINCRO_SIRH_ObtenerRegistroCompleted As EU_SINCRO_SIRH_ObtenerRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event EU_SINCRO_SIRH_SincronizarRevisionAtestadosCompleted As EU_SINCRO_SIRH_SincronizarRevisionAtestadosCompletedEventHandler
        
        '''<remarks/>
        Public Event EU_SINCRO_SIRH_SincronizarCatalogosCompleted As EU_SINCRO_SIRH_SincronizarCatalogosCompletedEventHandler
        
        '''<remarks/>
        Public Event EU_SINCRO_SIRH_SincronizarCompleted As EU_SINCRO_SIRH_SincronizarCompletedEventHandler
        
        '''<remarks/>
        Public Event EU_IMAGEN_CARNE_ReimprimirCarneCompleted As EU_IMAGEN_CARNE_ReimprimirCarneCompletedEventHandler
        
        '''<remarks/>
        Public Event Eu_Imagen_Carne_ListarRegistroReporteTomaCarnetsCompleted As Eu_Imagen_Carne_ListarRegistroReporteTomaCarnetsCompletedEventHandler
        
        '''<remarks/>
        Public Event Eu_Imagen_Carne_ObtenerRegistroBasicoCompleted As Eu_Imagen_Carne_ObtenerRegistroBasicoCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerGradoAcademicoFuncionarioCompleted As ObtenerGradoAcademicoFuncionarioCompletedEventHandler
        
        '''<remarks/>
        Public Event Provincia_ObtenerRegistroCompleted As Provincia_ObtenerRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event Canton_ListarRegistrosCompleted As Canton_ListarRegistrosCompletedEventHandler
        
        '''<remarks/>
        Public Event Canton_ListarRegistrosListaCompleted As Canton_ListarRegistrosListaCompletedEventHandler
        
        '''<remarks/>
        Public Event Canton_ObtenerRegistroCompleted As Canton_ObtenerRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event Distrito_ListarRegistrosCompleted As Distrito_ListarRegistrosCompletedEventHandler
        
        '''<remarks/>
        Public Event Distrito_ListarRegistrosListaCompleted As Distrito_ListarRegistrosListaCompletedEventHandler
        
        '''<remarks/>
        Public Event Distrito_ObtenerRegistroCompleted As Distrito_ObtenerRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event EmpleadoEstado_ListarRegistrosCompleted As EmpleadoEstado_ListarRegistrosCompletedEventHandler
        
        '''<remarks/>
        Public Event EmpleadoEstado_ListarRegistrosListaCompleted As EmpleadoEstado_ListarRegistrosListaCompletedEventHandler
        
        '''<remarks/>
        Public Event EmpleadoEstado_ObtenerRegistroCompleted As EmpleadoEstado_ObtenerRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event EmpleadoEstado_InsertarRegistroCompleted As EmpleadoEstado_InsertarRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event EmpleadoEstado_BorrarRegistroCompleted As EmpleadoEstado_BorrarRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event EmpleadoEstado_ModificarRegistroCompleted As EmpleadoEstado_ModificarRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event Gbl_Tipo_Telefono_ListarRegistrosCompleted As Gbl_Tipo_Telefono_ListarRegistrosCompletedEventHandler
        
        '''<remarks/>
        Public Event Gbl_Tipo_Telefono_ListarRegistrosListaCompleted As Gbl_Tipo_Telefono_ListarRegistrosListaCompletedEventHandler
        
        '''<remarks/>
        Public Event Gbl_Tipo_Telefono_ObtenerRegistroCompleted As Gbl_Tipo_Telefono_ObtenerRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event EU_EMP_TIPO_ListarRegistrosCompleted As EU_EMP_TIPO_ListarRegistrosCompletedEventHandler
        
        '''<remarks/>
        Public Event EU_EMP_TIPO_ListarRegistrosListaCompleted As EU_EMP_TIPO_ListarRegistrosListaCompletedEventHandler
        
        '''<remarks/>
        Public Event EU_EMP_TIPO_ObtenerRegistroCompleted As EU_EMP_TIPO_ObtenerRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event Gbl_Tipo_Identificacion_ListarRegistrosCompleted As Gbl_Tipo_Identificacion_ListarRegistrosCompletedEventHandler
        
        '''<remarks/>
        Public Event Gbl_Tipo_Identificacion_ListarRegistrosListaCompleted As Gbl_Tipo_Identificacion_ListarRegistrosListaCompletedEventHandler
        
        '''<remarks/>
        Public Event Gbl_Tipo_Identificacion_ObtenerRegistroCompleted As Gbl_Tipo_Identificacion_ObtenerRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event Gbl_Tipo_Licencia_ListarRegistrosCompleted As Gbl_Tipo_Licencia_ListarRegistrosCompletedEventHandler
        
        '''<remarks/>
        Public Event Gbl_Tipo_Licencia_ListarRegistrosListaCompleted As Gbl_Tipo_Licencia_ListarRegistrosListaCompletedEventHandler
        
        '''<remarks/>
        Public Event Gbl_Tipo_Licencia_ObtenerRegistroCompleted As Gbl_Tipo_Licencia_ObtenerRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event Gbl_Estado_Civil_ListarRegistrosCompleted As Gbl_Estado_Civil_ListarRegistrosCompletedEventHandler
        
        '''<remarks/>
        Public Event Gbl_Estado_Civil_ListarRegistrosListaCompleted As Gbl_Estado_Civil_ListarRegistrosListaCompletedEventHandler
        
        '''<remarks/>
        Public Event Gbl_Estado_Civil_ObtenerRegistroCompleted As Gbl_Estado_Civil_ObtenerRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event Gbl_Idiomas_ListarRegistrosCompleted As Gbl_Idiomas_ListarRegistrosCompletedEventHandler
        
        '''<remarks/>
        Public Event Gbl_Idiomas_ListarRegistrosListaCompleted As Gbl_Idiomas_ListarRegistrosListaCompletedEventHandler
        
        '''<remarks/>
        Public Event Gbl_Idiomas_ObtenerRegistroCompleted As Gbl_Idiomas_ObtenerRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event Produccion_ListarRegistrosCompleted As Produccion_ListarRegistrosCompletedEventHandler
        
        '''<remarks/>
        Public Event Produccion_ListarRegistrosListaCompleted As Produccion_ListarRegistrosListaCompletedEventHandler
        
        '''<remarks/>
        Public Event Produccion_ObtenerRegistroCompleted As Produccion_ObtenerRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event Produccion_InsertarRegistroCompleted As Produccion_InsertarRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event Produccion_BorrarRegistroCompleted As Produccion_BorrarRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event Produccion_ModificarRegistroCompleted As Produccion_ModificarRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event Medio_ListarRegistrosCompleted As Medio_ListarRegistrosCompletedEventHandler
        
        '''<remarks/>
        Public Event Medio_ListarRegistrosListaCompleted As Medio_ListarRegistrosListaCompletedEventHandler
        
        '''<remarks/>
        Public Event Medio_ObtenerRegistroCompleted As Medio_ObtenerRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event Medio_InsertarRegistroCompleted As Medio_InsertarRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event Medio_BorrarRegistroCompleted As Medio_BorrarRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event Medio_ModificarRegistroCompleted As Medio_ModificarRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event Estado_ListarRegistrosCompleted As Estado_ListarRegistrosCompletedEventHandler
        
        '''<remarks/>
        Public Event Estado_ListarRegistrosListaCompleted As Estado_ListarRegistrosListaCompletedEventHandler
        
        '''<remarks/>
        Public Event Estado_ObtenerRegistroCompleted As Estado_ObtenerRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event EU_EMP_PRODUC_EMPLEADO_ListarAutoresInternosExternosCompleted As EU_EMP_PRODUC_EMPLEADO_ListarAutoresInternosExternosCompletedEventHandler
        
        '''<remarks/>
        Public Event EmpProducciones_ListarRegistrosCompleted As EmpProducciones_ListarRegistrosCompletedEventHandler
        
        '''<remarks/>
        Public Event EmpProducciones_ListarRegistrosListaCompleted As EmpProducciones_ListarRegistrosListaCompletedEventHandler
        
        '''<remarks/>
        Public Event EmpProducciones_ObtenerRegistroCompleted As EmpProducciones_ObtenerRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event EmpProducciones_InsertarRegistroCompleted As EmpProducciones_InsertarRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event EmpProducciones_BorrarRegistroCompleted As EmpProducciones_BorrarRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event EmpProducciones_ModificarRegistroCompleted As EmpProducciones_ModificarRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event EmpProducciones_ListarRegistrosCantidadCompleted As EmpProducciones_ListarRegistrosCantidadCompletedEventHandler
        
        '''<remarks/>
        Public Event EmpProducciones_Rpt_CurriculoCompleted As EmpProducciones_Rpt_CurriculoCompletedEventHandler
        
        '''<remarks/>
        Public Event EU_AUTOR_EXTERNO_InsertarRegistroCompleted As EU_AUTOR_EXTERNO_InsertarRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event EU_AUTOR_EXTERNO_BorrarRegistroCompleted As EU_AUTOR_EXTERNO_BorrarRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event EU_AUTOR_EXTERNO_ModificarRegistroCompleted As EU_AUTOR_EXTERNO_ModificarRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event EU_AUTOR_EXTERNO_ListarRegistrosCompleted As EU_AUTOR_EXTERNO_ListarRegistrosCompletedEventHandler
        
        '''<remarks/>
        Public Event EU_AUTOR_EXTERNO_ListarRegistrosListaCompleted As EU_AUTOR_EXTERNO_ListarRegistrosListaCompletedEventHandler
        
        '''<remarks/>
        Public Event EU_AUTOR_EXTERNO_ObtenerRegistroCompleted As EU_AUTOR_EXTERNO_ObtenerRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event EU_EMP_PRODUC_EMPLEADO_InsertarRegistroCompleted As EU_EMP_PRODUC_EMPLEADO_InsertarRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event EU_EMP_PRODUC_EMPLEADO_BorrarRegistroCompleted As EU_EMP_PRODUC_EMPLEADO_BorrarRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event EU_EMP_PRODUC_EMPLEADO_ModificarRegistroCompleted As EU_EMP_PRODUC_EMPLEADO_ModificarRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event EU_EMP_PRODUC_EMPLEADO_ListarRegistrosCompleted As EU_EMP_PRODUC_EMPLEADO_ListarRegistrosCompletedEventHandler
        
        '''<remarks/>
        Public Event EU_EMP_PRODUC_EMPLEADO_ListarRegistrosListaCompleted As EU_EMP_PRODUC_EMPLEADO_ListarRegistrosListaCompletedEventHandler
        
        '''<remarks/>
        Public Event EU_EMP_PRODUC_EMPLEADO_ObtenerRegistroCompleted As EU_EMP_PRODUC_EMPLEADO_ObtenerRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event EU_PRODUC_AUTOR_EXTERNO_InsertarRegistroCompleted As EU_PRODUC_AUTOR_EXTERNO_InsertarRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event EU_PRODUC_AUTOR_EXTERNO_BorrarRegistroCompleted As EU_PRODUC_AUTOR_EXTERNO_BorrarRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event EU_PRODUC_AUTOR_EXTERNO_ModificarRegistroCompleted As EU_PRODUC_AUTOR_EXTERNO_ModificarRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event EU_PRODUC_AUTOR_EXTERNO_ListarRegistrosCompleted As EU_PRODUC_AUTOR_EXTERNO_ListarRegistrosCompletedEventHandler
        
        '''<remarks/>
        Public Event EU_PRODUC_AUTOR_EXTERNO_ListarRegistrosListaCompleted As EU_PRODUC_AUTOR_EXTERNO_ListarRegistrosListaCompletedEventHandler
        
        '''<remarks/>
        Public Event EU_PRODUC_AUTOR_EXTERNO_ObtenerRegistroCompleted As EU_PRODUC_AUTOR_EXTERNO_ObtenerRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event EU_TIPO_VEHICULO_PRODUC_InsertarRegistroCompleted As EU_TIPO_VEHICULO_PRODUC_InsertarRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event EU_TIPO_VEHICULO_PRODUC_BorrarRegistroCompleted As EU_TIPO_VEHICULO_PRODUC_BorrarRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event EU_TIPO_VEHICULO_PRODUC_ModificarRegistroCompleted As EU_TIPO_VEHICULO_PRODUC_ModificarRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event EU_TIPO_VEHICULO_PRODUC_ListarRegistrosCompleted As EU_TIPO_VEHICULO_PRODUC_ListarRegistrosCompletedEventHandler
        
        '''<remarks/>
        Public Event EU_TIPO_VEHICULO_PRODUC_ListarRegistrosListaCompleted As EU_TIPO_VEHICULO_PRODUC_ListarRegistrosListaCompletedEventHandler
        
        '''<remarks/>
        Public Event EU_TIPO_VEHICULO_PRODUC_ObtenerRegistroCompleted As EU_TIPO_VEHICULO_PRODUC_ObtenerRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event Reconocimientos_ListarRegistrosCompleted As Reconocimientos_ListarRegistrosCompletedEventHandler
        
        '''<remarks/>
        Public Event Reconocimientos_ListarRegistrosListaCompleted As Reconocimientos_ListarRegistrosListaCompletedEventHandler
        
        '''<remarks/>
        Public Event Reconocimientos_ObtenerRegistroCompleted As Reconocimientos_ObtenerRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event Reconocimientos_InsertarRegistroCompleted As Reconocimientos_InsertarRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event Reconocimientos_BorrarRegistroCompleted As Reconocimientos_BorrarRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event Reconocimientos_ModificarRegistroCompleted As Reconocimientos_ModificarRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event EmpCursos_BorrarRegistroCompleted As EmpCursos_BorrarRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event EmpCursos_ModificarRegistroCompleted As EmpCursos_ModificarRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event EmpCursos_ModificarTituloCompleted As EmpCursos_ModificarTituloCompletedEventHandler
        
        '''<remarks/>
        Public Event EmpCursos_ObtenerTituloCompleted As EmpCursos_ObtenerTituloCompletedEventHandler
        
        '''<remarks/>
        Public Event EmpCursos_Rpt_CurriculoCompleted As EmpCursos_Rpt_CurriculoCompletedEventHandler
        
        '''<remarks/>
        Public Event EmpCursosAut_ListarRegistrosCompleted As EmpCursosAut_ListarRegistrosCompletedEventHandler
        
        '''<remarks/>
        Public Event EmpCursosAut_ListarRegistrosListaCompleted As EmpCursosAut_ListarRegistrosListaCompletedEventHandler
        
        '''<remarks/>
        Public Event EmpCursosAut_ObtenerRegistroCompleted As EmpCursosAut_ObtenerRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event EmpCursosAut_InsertarRegistroCompleted As EmpCursosAut_InsertarRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event EmpCursosAut_BorrarRegistroCompleted As EmpCursosAut_BorrarRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event EmpCursosAut_ModificarRegistroCompleted As EmpCursosAut_ModificarRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event EmpCertificaciones_ListarRegistrosCompleted As EmpCertificaciones_ListarRegistrosCompletedEventHandler
        
        '''<remarks/>
        Public Event EmpCertificaciones_ListarRegistrosListaCompleted As EmpCertificaciones_ListarRegistrosListaCompletedEventHandler
        
        '''<remarks/>
        Public Event EmpCertificaciones_ObtenerRegistroCompleted As EmpCertificaciones_ObtenerRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event EmpCertificaciones_InsertarRegistroCompleted As EmpCertificaciones_InsertarRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event EmpCertificaciones_BorrarRegistroCompleted As EmpCertificaciones_BorrarRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event EmpCertificaciones_ModificarRegistroCompleted As EmpCertificaciones_ModificarRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event EmpCertificaciones_ModificarTituloCompleted As EmpCertificaciones_ModificarTituloCompletedEventHandler
        
        '''<remarks/>
        Public Event EmpCertificaciones_ObtenerTituloCompleted As EmpCertificaciones_ObtenerTituloCompletedEventHandler
        
        '''<remarks/>
        Public Event EmpCertificaciones_Rpt_CurriculoCompleted As EmpCertificaciones_Rpt_CurriculoCompletedEventHandler
        
        '''<remarks/>
        Public Event EmpCertificacionesAut_ListarRegistrosCompleted As EmpCertificacionesAut_ListarRegistrosCompletedEventHandler
        
        '''<remarks/>
        Public Event EmpCertificacionesAut_ListarRegistrosListaCompleted As EmpCertificacionesAut_ListarRegistrosListaCompletedEventHandler
        
        '''<remarks/>
        Public Event EmpCertificacionesAut_ObtenerRegistroCompleted As EmpCertificacionesAut_ObtenerRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event EmpCertificacionesAut_InsertarRegistroCompleted As EmpCertificacionesAut_InsertarRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event EmpCertificacionesAut_BorrarRegistroCompleted As EmpCertificacionesAut_BorrarRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event EmpCertificacionesAut_ModificarRegistroCompleted As EmpCertificacionesAut_ModificarRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event Empleados_ObtenerFotografiaYCarneCompleted As Empleados_ObtenerFotografiaYCarneCompletedEventHandler
        
        '''<remarks/>
        Public Event Empleados_ListarRegistrosCompleted As Empleados_ListarRegistrosCompletedEventHandler
        
        '''<remarks/>
        Public Event Empleados_ListarRegistrosListaCompleted As Empleados_ListarRegistrosListaCompletedEventHandler
        
        '''<remarks/>
        Public Event Empleados_ObtenerRegistroCompleted As Empleados_ObtenerRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event Empleados_InsertarRegistroCompleted As Empleados_InsertarRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event Empleados_BorrarRegistroCompleted As Empleados_BorrarRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event Empleados_ModificarRegistroCompleted As Empleados_ModificarRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event Empleados_ModificarRegistroImagenCompleted As Empleados_ModificarRegistroImagenCompletedEventHandler
        
        '''<remarks/>
        Public Event Empleados_ModificarFotoCompleted As Empleados_ModificarFotoCompletedEventHandler
        
        '''<remarks/>
        Public Event Empleados_ObtenerFotoCompleted As Empleados_ObtenerFotoCompletedEventHandler
        
        '''<remarks/>
        Public Event Empleados_Rpt_CurriculoCompleted As Empleados_Rpt_CurriculoCompletedEventHandler
        
        '''<remarks/>
        Public Event Empleados_Actualizacion_SIRH_EU_DatosCompleted As Empleados_Actualizacion_SIRH_EU_DatosCompletedEventHandler
        
        '''<remarks/>
        Public Event Empleados_Actualizacion_SIRH_EU_TipoEmpleadoCompleted As Empleados_Actualizacion_SIRH_EU_TipoEmpleadoCompletedEventHandler
        
        '''<remarks/>
        Public Event Empleados_Actualizacion_SIRH_EU_EmpleadoNuevoCompleted As Empleados_Actualizacion_SIRH_EU_EmpleadoNuevoCompletedEventHandler
        
        '''<remarks/>
        Public Event Empleados_Actualizacion_SIRH_EU_EmpleadoCorreoCompleted As Empleados_Actualizacion_SIRH_EU_EmpleadoCorreoCompletedEventHandler
        
        '''<remarks/>
        Public Event Empleados_Actualizacion_SIRH_EU_EmpleadoCompleted As Empleados_Actualizacion_SIRH_EU_EmpleadoCompletedEventHandler
        
        '''<remarks/>
        Public Event Empleados_SincronizarEuSirhCompleted As Empleados_SincronizarEuSirhCompletedEventHandler
        
        '''<remarks/>
        Public Event Empleados_SincronizarEuSirh_EmpleadosNuevosCompleted As Empleados_SincronizarEuSirh_EmpleadosNuevosCompletedEventHandler
        
        '''<remarks/>
        Public Event Empleados_SincronizarEuSirh_CambioDatosCompleted As Empleados_SincronizarEuSirh_CambioDatosCompletedEventHandler
        
        '''<remarks/>
        Public Event Empleados_SincronizarEuSirh_TipoEmpleadoCompleted As Empleados_SincronizarEuSirh_TipoEmpleadoCompletedEventHandler
        
        '''<remarks/>
        Public Event Empleados_SincronizarEuSirh_CorreoEmpleadoCompleted As Empleados_SincronizarEuSirh_CorreoEmpleadoCompletedEventHandler
        
        '''<remarks/>
        Public Event Empleados_Actualizacion_SIRH_EU_EmpleadoJubiladoCompleted As Empleados_Actualizacion_SIRH_EU_EmpleadoJubiladoCompletedEventHandler
        
        '''<remarks/>
        Public Event Empleados_ListarEmpleadosPorRoleCompleted As Empleados_ListarEmpleadosPorRoleCompletedEventHandler
        
        '''<remarks/>
        Public Event Funcionarios_ListarRegistrosListaCompleted As Funcionarios_ListarRegistrosListaCompletedEventHandler
        
        '''<remarks/>
        Public Event Funcionarios_ObtenerRegistroCompleted As Funcionarios_ObtenerRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event Emp_Parientes_InsertarRegistroCompleted As Emp_Parientes_InsertarRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event Emp_Parientes_BorrarRegistroCompleted As Emp_Parientes_BorrarRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event Emp_Parientes_ModificarRegistroCompleted As Emp_Parientes_ModificarRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event Emp_Parientes_ListarRegistrosCompleted As Emp_Parientes_ListarRegistrosCompletedEventHandler
        
        '''<remarks/>
        Public Event Emp_Parientes_ListarRegistrosListaCompleted As Emp_Parientes_ListarRegistrosListaCompletedEventHandler
        
        '''<remarks/>
        Public Event Emp_Parientes_ObtenerRegistroCompleted As Emp_Parientes_ObtenerRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event Parentesco_BorrarRegistroCompleted As Parentesco_BorrarRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event Parentesco_ModificarRegistroCompleted As Parentesco_ModificarRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event Parentesco_InsertarRegistroCompleted As Parentesco_InsertarRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event Parentesco_ListarRegistrosCompleted As Parentesco_ListarRegistrosCompletedEventHandler
        
        '''<remarks/>
        Public Event Parentesco_ListarRegistrosListaCompleted As Parentesco_ListarRegistrosListaCompletedEventHandler
        
        '''<remarks/>
        Public Event Parentesco_ObtenerRegistroCompleted As Parentesco_ObtenerRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event Requisitos_BorrarRegistroCompleted As Requisitos_BorrarRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event Requisitos_ModificarRegistroCompleted As Requisitos_ModificarRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event Requisitos_InsertarRegistroCompleted As Requisitos_InsertarRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event Requisitos_ListarRegistrosCompleted As Requisitos_ListarRegistrosCompletedEventHandler
        
        '''<remarks/>
        Public Event Requisitos_ListarRegistrosListaCompleted As Requisitos_ListarRegistrosListaCompletedEventHandler
        
        '''<remarks/>
        Public Event Requisitos_ObtenerRegistroCompleted As Requisitos_ObtenerRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event Emp_Requisitos_InsertarRegistroCompleted As Emp_Requisitos_InsertarRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event Emp_Requisitos_BorrarRegistroCompleted As Emp_Requisitos_BorrarRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event Emp_Requisitos_ModificarRegistroCompleted As Emp_Requisitos_ModificarRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event Emp_Requisitos_ListarRegistrosCompleted As Emp_Requisitos_ListarRegistrosCompletedEventHandler
        
        '''<remarks/>
        Public Event Emp_Requisitos_ListarRegistrosListaCompleted As Emp_Requisitos_ListarRegistrosListaCompletedEventHandler
        
        '''<remarks/>
        Public Event Emp_Requisitos_ObtenerRegistroCompleted As Emp_Requisitos_ObtenerRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event Emp_Requisitos_Rpt_CurriculoCompleted As Emp_Requisitos_Rpt_CurriculoCompletedEventHandler
        
        '''<remarks/>
        Public Event Emp_Licencia_Conducir_ListarRegistrosCompleted As Emp_Licencia_Conducir_ListarRegistrosCompletedEventHandler
        
        '''<remarks/>
        Public Event Emp_Licencia_Conducir_ListarRegistrosListaCompleted As Emp_Licencia_Conducir_ListarRegistrosListaCompletedEventHandler
        
        '''<remarks/>
        Public Event Emp_Licencia_Conducir_ObtenerRegistroCompleted As Emp_Licencia_Conducir_ObtenerRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event Emp_Licencia_Conducir_InsertarRegistroCompleted As Emp_Licencia_Conducir_InsertarRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event Emp_Licencia_Conducir_BorrarRegistroCompleted As Emp_Licencia_Conducir_BorrarRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event Emp_Licencia_Conducir_ModificarRegistroCompleted As Emp_Licencia_Conducir_ModificarRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event Licencia_Conducir_Rpt_CurriculoCompleted As Licencia_Conducir_Rpt_CurriculoCompletedEventHandler
        
        '''<remarks/>
        Public Event Provincia_ListarRegistrosCompleted As Provincia_ListarRegistrosCompletedEventHandler
        
        '''<remarks/>
        Public Event Provincia_ListarRegistrosListaCompleted As Provincia_ListarRegistrosListaCompletedEventHandler
        
        '''<remarks/>
        Public Event EU_UNIDAD_InsertarRegistroCompleted As EU_UNIDAD_InsertarRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event EU_UNIDAD_BorrarRegistroCompleted As EU_UNIDAD_BorrarRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event EU_UNIDAD_ModificarRegistroCompleted As EU_UNIDAD_ModificarRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event EU_UNIDAD_ListarRegistrosCompleted As EU_UNIDAD_ListarRegistrosCompletedEventHandler
        
        '''<remarks/>
        Public Event EU_UNIDAD_ListarRegistrosListaCompleted As EU_UNIDAD_ListarRegistrosListaCompletedEventHandler
        
        '''<remarks/>
        Public Event EU_UNIDAD_ObtenerRegistroCompleted As EU_UNIDAD_ObtenerRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event Carreras_ListarRegistrosCompleted As Carreras_ListarRegistrosCompletedEventHandler
        
        '''<remarks/>
        Public Event Carreras_ListarRegistrosListaCompleted As Carreras_ListarRegistrosListaCompletedEventHandler
        
        '''<remarks/>
        Public Event Carreras_ObtenerRegistroCompleted As Carreras_ObtenerRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event Carreras_InsertarRegistroCompleted As Carreras_InsertarRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event Carreras_BorrarRegistroCompleted As Carreras_BorrarRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event Carreras_ModificarRegistroCompleted As Carreras_ModificarRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event NivelEducativo_ListarRegistrosCompleted As NivelEducativo_ListarRegistrosCompletedEventHandler
        
        '''<remarks/>
        Public Event NivelEducativo_ListarRegistrosListaCompleted As NivelEducativo_ListarRegistrosListaCompletedEventHandler
        
        '''<remarks/>
        Public Event NivelEducativo_ObtenerRegistroCompleted As NivelEducativo_ObtenerRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event NivelEducativo_InsertarRegistroCompleted As NivelEducativo_InsertarRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event NivelEducativo_BorrarRegistroCompleted As NivelEducativo_BorrarRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event NivelEducativo_ModificarRegistroCompleted As NivelEducativo_ModificarRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event Telefonos_ListarRegistrosCompleted As Telefonos_ListarRegistrosCompletedEventHandler
        
        '''<remarks/>
        Public Event Telefonos_ListarRegistrosListaCompleted As Telefonos_ListarRegistrosListaCompletedEventHandler
        
        '''<remarks/>
        Public Event Telefonos_ObtenerRegistroCompleted As Telefonos_ObtenerRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event Telefonos_InsertarRegistroCompleted As Telefonos_InsertarRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event Telefonos_BorrarRegistroCompleted As Telefonos_BorrarRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event Telefonos_ModificarRegistroCompleted As Telefonos_ModificarRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event Telefonos_Rpt_CurriculoCompleted As Telefonos_Rpt_CurriculoCompletedEventHandler
        
        '''<remarks/>
        Public Event ExpLaboral_ListarRegistrosCompleted As ExpLaboral_ListarRegistrosCompletedEventHandler
        
        '''<remarks/>
        Public Event ExpLaboral_ListarRegistrosListaCompleted As ExpLaboral_ListarRegistrosListaCompletedEventHandler
        
        '''<remarks/>
        Public Event ExpLaboral_ObtenerRegistroCompleted As ExpLaboral_ObtenerRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event ExpLaboral_InsertarRegistroCompleted As ExpLaboral_InsertarRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event ExpLaboral_BorrarRegistroCompleted As ExpLaboral_BorrarRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event ExpLaboral_ModificarRegistroCompleted As ExpLaboral_ModificarRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event ExpLaboral_Rpt_CurriculoCompleted As ExpLaboral_Rpt_CurriculoCompletedEventHandler
        
        '''<remarks/>
        Public Event EmpEstFormales_ListarRegistrosCompleted As EmpEstFormales_ListarRegistrosCompletedEventHandler
        
        '''<remarks/>
        Public Event EmpEstFormales_ListarRegistrosListaCompleted As EmpEstFormales_ListarRegistrosListaCompletedEventHandler
        
        '''<remarks/>
        Public Event EmpEstFormales_ObtenerRegistroCompleted As EmpEstFormales_ObtenerRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event EmpEstFormales_InsertarRegistroCompleted As EmpEstFormales_InsertarRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event EmpEstFormales_BorrarRegistroCompleted As EmpEstFormales_BorrarRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event EmpEstFormales_ModificarRegistroCompleted As EmpEstFormales_ModificarRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event EmpEstFormales_ModificarTituloCompleted As EmpEstFormales_ModificarTituloCompletedEventHandler
        
        '''<remarks/>
        Public Event EmpEstFormales_ObtenerTituloCompleted As EmpEstFormales_ObtenerTituloCompletedEventHandler
        
        '''<remarks/>
        Public Event EmpEstFormales_Rpt_CurriculoCompleted As EmpEstFormales_Rpt_CurriculoCompletedEventHandler
        
        '''<remarks/>
        Public Event EmpEstFormalesAut_ListarRegistrosCompleted As EmpEstFormalesAut_ListarRegistrosCompletedEventHandler
        
        '''<remarks/>
        Public Event EmpEstFormalesAut_ListarRegistrosListaCompleted As EmpEstFormalesAut_ListarRegistrosListaCompletedEventHandler
        
        '''<remarks/>
        Public Event EmpEstFormalesAut_ObtenerRegistroCompleted As EmpEstFormalesAut_ObtenerRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event EmpEstFormalesAut_InsertarRegistroCompleted As EmpEstFormalesAut_InsertarRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event EmpEstFormalesAut_BorrarRegistroCompleted As EmpEstFormalesAut_BorrarRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event EmpEstFormalesAut_ModificarRegistroCompleted As EmpEstFormalesAut_ModificarRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event Idiomas_ListarRegistrosCompleted As Idiomas_ListarRegistrosCompletedEventHandler
        
        '''<remarks/>
        Public Event Idiomas_ListarRegistrosListaCompleted As Idiomas_ListarRegistrosListaCompletedEventHandler
        
        '''<remarks/>
        Public Event Idiomas_ObtenerRegistroCompleted As Idiomas_ObtenerRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event EmpIdiomas_ListarRegistrosCompleted As EmpIdiomas_ListarRegistrosCompletedEventHandler
        
        '''<remarks/>
        Public Event EmpIdiomas_ListarRegistrosListaCompleted As EmpIdiomas_ListarRegistrosListaCompletedEventHandler
        
        '''<remarks/>
        Public Event EmpIdiomas_ObtenerRegistroCompleted As EmpIdiomas_ObtenerRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event EmpIdiomas_InsertarRegistroCompleted As EmpIdiomas_InsertarRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event EmpIdiomas_BorrarRegistroCompleted As EmpIdiomas_BorrarRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event EmpIdiomas_ModificarRegistroCompleted As EmpIdiomas_ModificarRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event EmpIdiomas_Rpt_CurriculoCompleted As EmpIdiomas_Rpt_CurriculoCompletedEventHandler
        
        '''<remarks/>
        Public Event EmpIdiomaTitulos_ListarRegistrosCompleted As EmpIdiomaTitulos_ListarRegistrosCompletedEventHandler
        
        '''<remarks/>
        Public Event EmpIdiomaTitulos_ListarRegistrosListaCompleted As EmpIdiomaTitulos_ListarRegistrosListaCompletedEventHandler
        
        '''<remarks/>
        Public Event EmpIdiomaTitulos_ObtenerRegistroCompleted As EmpIdiomaTitulos_ObtenerRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event EmpIdiomaTitulos_InsertarRegistroCompleted As EmpIdiomaTitulos_InsertarRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event EmpIdiomaTitulos_BorrarRegistroCompleted As EmpIdiomaTitulos_BorrarRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event EmpIdiomaTitulos_ModificarRegistroCompleted As EmpIdiomaTitulos_ModificarRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event EmpIdiomaTitulos_ModificarTituloCompleted As EmpIdiomaTitulos_ModificarTituloCompletedEventHandler
        
        '''<remarks/>
        Public Event EmpIdiomaTitulos_ObtenerTituloCompleted As EmpIdiomaTitulos_ObtenerTituloCompletedEventHandler
        
        '''<remarks/>
        Public Event EmpIdiomaTitulosAut_ListarRegistrosCompleted As EmpIdiomaTitulosAut_ListarRegistrosCompletedEventHandler
        
        '''<remarks/>
        Public Event EmpIdiomaTitulosAut_ListarRegistrosListaCompleted As EmpIdiomaTitulosAut_ListarRegistrosListaCompletedEventHandler
        
        '''<remarks/>
        Public Event EmpIdiomaTitulosAut_ObtenerRegistroCompleted As EmpIdiomaTitulosAut_ObtenerRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event EmpIdiomaTitulosAut_InsertarRegistroCompleted As EmpIdiomaTitulosAut_InsertarRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event EmpIdiomaTitulosAut_BorrarRegistroCompleted As EmpIdiomaTitulosAut_BorrarRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event EmpIdiomaTitulosAut_ModificarRegistroCompleted As EmpIdiomaTitulosAut_ModificarRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event Nacion_ListarRegistrosCompleted As Nacion_ListarRegistrosCompletedEventHandler
        
        '''<remarks/>
        Public Event Nacion_ListarRegistrosListaCompleted As Nacion_ListarRegistrosListaCompletedEventHandler
        
        '''<remarks/>
        Public Event Nacion_ObtenerRegistroCompleted As Nacion_ObtenerRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event Cursos_ListarRegistrosCompleted As Cursos_ListarRegistrosCompletedEventHandler
        
        '''<remarks/>
        Public Event Cursos_ListarRegistrosListaCompleted As Cursos_ListarRegistrosListaCompletedEventHandler
        
        '''<remarks/>
        Public Event Cursos_ObtenerRegistroCompleted As Cursos_ObtenerRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event Cursos_InsertarRegistroCompleted As Cursos_InsertarRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event Cursos_BorrarRegistroCompleted As Cursos_BorrarRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event Cursos_ModificarRegistroCompleted As Cursos_ModificarRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event EmpCursos_ListarRegistrosCompleted As EmpCursos_ListarRegistrosCompletedEventHandler
        
        '''<remarks/>
        Public Event EmpCursos_ListarRegistrosListaCompleted As EmpCursos_ListarRegistrosListaCompletedEventHandler
        
        '''<remarks/>
        Public Event EmpCursos_ObtenerRegistroCompleted As EmpCursos_ObtenerRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event EmpCursos_InsertarRegistroCompleted As EmpCursos_InsertarRegistroCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/EmpReconocimientos_ListarRegistros", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EmpReconocimientos_ListarRegistros(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("EmpReconocimientos_ListarRegistros", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EmpReconocimientos_ListarRegistrosAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String)
            Me.EmpReconocimientos_ListarRegistrosAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmpReconocimientos_ListarRegistrosAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String, ByVal userState As Object)
            If (Me.EmpReconocimientos_ListarRegistrosOperationCompleted Is Nothing) Then
                Me.EmpReconocimientos_ListarRegistrosOperationCompleted = AddressOf Me.OnEmpReconocimientos_ListarRegistrosOperationCompleted
            End If
            Me.InvokeAsync("EmpReconocimientos_ListarRegistros", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden}, Me.EmpReconocimientos_ListarRegistrosOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmpReconocimientos_ListarRegistrosOperationCompleted(ByVal arg As Object)
            If (Not (Me.EmpReconocimientos_ListarRegistrosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EmpReconocimientos_ListarRegistrosCompleted(Me, New EmpReconocimientos_ListarRegistrosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/EmpReconocimientos_ListarRegistrosLista", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EmpReconocimientos_ListarRegistrosLista(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("EmpReconocimientos_ListarRegistrosLista", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EmpReconocimientos_ListarRegistrosListaAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String)
            Me.EmpReconocimientos_ListarRegistrosListaAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmpReconocimientos_ListarRegistrosListaAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String, ByVal userState As Object)
            If (Me.EmpReconocimientos_ListarRegistrosListaOperationCompleted Is Nothing) Then
                Me.EmpReconocimientos_ListarRegistrosListaOperationCompleted = AddressOf Me.OnEmpReconocimientos_ListarRegistrosListaOperationCompleted
            End If
            Me.InvokeAsync("EmpReconocimientos_ListarRegistrosLista", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden}, Me.EmpReconocimientos_ListarRegistrosListaOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmpReconocimientos_ListarRegistrosListaOperationCompleted(ByVal arg As Object)
            If (Not (Me.EmpReconocimientos_ListarRegistrosListaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EmpReconocimientos_ListarRegistrosListaCompleted(Me, New EmpReconocimientos_ListarRegistrosListaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/EmpReconocimientos_ObtenerRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EmpReconocimientos_ObtenerRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String) As EntEmp_Reconocimientos
            Dim results() As Object = Me.Invoke("EmpReconocimientos_ObtenerRegistro", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion})
            Return CType(results(0),EntEmp_Reconocimientos)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EmpReconocimientos_ObtenerRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String)
            Me.EmpReconocimientos_ObtenerRegistroAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmpReconocimientos_ObtenerRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal userState As Object)
            If (Me.EmpReconocimientos_ObtenerRegistroOperationCompleted Is Nothing) Then
                Me.EmpReconocimientos_ObtenerRegistroOperationCompleted = AddressOf Me.OnEmpReconocimientos_ObtenerRegistroOperationCompleted
            End If
            Me.InvokeAsync("EmpReconocimientos_ObtenerRegistro", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion}, Me.EmpReconocimientos_ObtenerRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmpReconocimientos_ObtenerRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.EmpReconocimientos_ObtenerRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EmpReconocimientos_ObtenerRegistroCompleted(Me, New EmpReconocimientos_ObtenerRegistroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/EmpReconocimientos_InsertarRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub EmpReconocimientos_InsertarRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EmpReconocimientos As EntEmp_Reconocimientos)
            Me.Invoke("EmpReconocimientos_InsertarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_EmpReconocimientos})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmpReconocimientos_InsertarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EmpReconocimientos As EntEmp_Reconocimientos)
            Me.EmpReconocimientos_InsertarRegistroAsync(pvc_Usuario, pvc_Clave, pvo_EmpReconocimientos, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmpReconocimientos_InsertarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EmpReconocimientos As EntEmp_Reconocimientos, ByVal userState As Object)
            If (Me.EmpReconocimientos_InsertarRegistroOperationCompleted Is Nothing) Then
                Me.EmpReconocimientos_InsertarRegistroOperationCompleted = AddressOf Me.OnEmpReconocimientos_InsertarRegistroOperationCompleted
            End If
            Me.InvokeAsync("EmpReconocimientos_InsertarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_EmpReconocimientos}, Me.EmpReconocimientos_InsertarRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmpReconocimientos_InsertarRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.EmpReconocimientos_InsertarRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EmpReconocimientos_InsertarRegistroCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/EmpReconocimientos_BorrarRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub EmpReconocimientos_BorrarRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EmpReconocimientos As EntEmp_Reconocimientos)
            Me.Invoke("EmpReconocimientos_BorrarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_EmpReconocimientos})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmpReconocimientos_BorrarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EmpReconocimientos As EntEmp_Reconocimientos)
            Me.EmpReconocimientos_BorrarRegistroAsync(pvc_Usuario, pvc_Clave, pvo_EmpReconocimientos, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmpReconocimientos_BorrarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EmpReconocimientos As EntEmp_Reconocimientos, ByVal userState As Object)
            If (Me.EmpReconocimientos_BorrarRegistroOperationCompleted Is Nothing) Then
                Me.EmpReconocimientos_BorrarRegistroOperationCompleted = AddressOf Me.OnEmpReconocimientos_BorrarRegistroOperationCompleted
            End If
            Me.InvokeAsync("EmpReconocimientos_BorrarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_EmpReconocimientos}, Me.EmpReconocimientos_BorrarRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmpReconocimientos_BorrarRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.EmpReconocimientos_BorrarRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EmpReconocimientos_BorrarRegistroCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/EmpReconocimientos_ModificarRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub EmpReconocimientos_ModificarRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EmpReconocimientos As EntEmp_Reconocimientos)
            Me.Invoke("EmpReconocimientos_ModificarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_EmpReconocimientos})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmpReconocimientos_ModificarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EmpReconocimientos As EntEmp_Reconocimientos)
            Me.EmpReconocimientos_ModificarRegistroAsync(pvc_Usuario, pvc_Clave, pvo_EmpReconocimientos, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmpReconocimientos_ModificarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EmpReconocimientos As EntEmp_Reconocimientos, ByVal userState As Object)
            If (Me.EmpReconocimientos_ModificarRegistroOperationCompleted Is Nothing) Then
                Me.EmpReconocimientos_ModificarRegistroOperationCompleted = AddressOf Me.OnEmpReconocimientos_ModificarRegistroOperationCompleted
            End If
            Me.InvokeAsync("EmpReconocimientos_ModificarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_EmpReconocimientos}, Me.EmpReconocimientos_ModificarRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmpReconocimientos_ModificarRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.EmpReconocimientos_ModificarRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EmpReconocimientos_ModificarRegistroCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/EmpReconocimientos_Rpt_Curriculo", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EmpReconocimientos_Rpt_Curriculo(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("EmpReconocimientos_Rpt_Curriculo", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EmpReconocimientos_Rpt_CurriculoAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String)
            Me.EmpReconocimientos_Rpt_CurriculoAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmpReconocimientos_Rpt_CurriculoAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal userState As Object)
            If (Me.EmpReconocimientos_Rpt_CurriculoOperationCompleted Is Nothing) Then
                Me.EmpReconocimientos_Rpt_CurriculoOperationCompleted = AddressOf Me.OnEmpReconocimientos_Rpt_CurriculoOperationCompleted
            End If
            Me.InvokeAsync("EmpReconocimientos_Rpt_Curriculo", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion}, Me.EmpReconocimientos_Rpt_CurriculoOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmpReconocimientos_Rpt_CurriculoOperationCompleted(ByVal arg As Object)
            If (Not (Me.EmpReconocimientos_Rpt_CurriculoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EmpReconocimientos_Rpt_CurriculoCompleted(Me, New EmpReconocimientos_Rpt_CurriculoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/EntEU_SINCRO_SIRH_InsertarRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub EntEU_SINCRO_SIRH_InsertarRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Registro As EntEU_SINCRO_SIRH)
            Me.Invoke("EntEU_SINCRO_SIRH_InsertarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_Registro})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EntEU_SINCRO_SIRH_InsertarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Registro As EntEU_SINCRO_SIRH)
            Me.EntEU_SINCRO_SIRH_InsertarRegistroAsync(pvc_Usuario, pvc_Clave, pvo_Registro, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EntEU_SINCRO_SIRH_InsertarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Registro As EntEU_SINCRO_SIRH, ByVal userState As Object)
            If (Me.EntEU_SINCRO_SIRH_InsertarRegistroOperationCompleted Is Nothing) Then
                Me.EntEU_SINCRO_SIRH_InsertarRegistroOperationCompleted = AddressOf Me.OnEntEU_SINCRO_SIRH_InsertarRegistroOperationCompleted
            End If
            Me.InvokeAsync("EntEU_SINCRO_SIRH_InsertarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_Registro}, Me.EntEU_SINCRO_SIRH_InsertarRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnEntEU_SINCRO_SIRH_InsertarRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.EntEU_SINCRO_SIRH_InsertarRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EntEU_SINCRO_SIRH_InsertarRegistroCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/EU_SINCRO_SIRH_BorrarRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub EU_SINCRO_SIRH_BorrarRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Registro As EntEU_SINCRO_SIRH)
            Me.Invoke("EU_SINCRO_SIRH_BorrarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_Registro})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EU_SINCRO_SIRH_BorrarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Registro As EntEU_SINCRO_SIRH)
            Me.EU_SINCRO_SIRH_BorrarRegistroAsync(pvc_Usuario, pvc_Clave, pvo_Registro, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EU_SINCRO_SIRH_BorrarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Registro As EntEU_SINCRO_SIRH, ByVal userState As Object)
            If (Me.EU_SINCRO_SIRH_BorrarRegistroOperationCompleted Is Nothing) Then
                Me.EU_SINCRO_SIRH_BorrarRegistroOperationCompleted = AddressOf Me.OnEU_SINCRO_SIRH_BorrarRegistroOperationCompleted
            End If
            Me.InvokeAsync("EU_SINCRO_SIRH_BorrarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_Registro}, Me.EU_SINCRO_SIRH_BorrarRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnEU_SINCRO_SIRH_BorrarRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.EU_SINCRO_SIRH_BorrarRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EU_SINCRO_SIRH_BorrarRegistroCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/EU_SINCRO_SIRH_ModificarRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub EU_SINCRO_SIRH_ModificarRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Registro As EntEU_SINCRO_SIRH)
            Me.Invoke("EU_SINCRO_SIRH_ModificarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_Registro})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EU_SINCRO_SIRH_ModificarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Registro As EntEU_SINCRO_SIRH)
            Me.EU_SINCRO_SIRH_ModificarRegistroAsync(pvc_Usuario, pvc_Clave, pvo_Registro, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EU_SINCRO_SIRH_ModificarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Registro As EntEU_SINCRO_SIRH, ByVal userState As Object)
            If (Me.EU_SINCRO_SIRH_ModificarRegistroOperationCompleted Is Nothing) Then
                Me.EU_SINCRO_SIRH_ModificarRegistroOperationCompleted = AddressOf Me.OnEU_SINCRO_SIRH_ModificarRegistroOperationCompleted
            End If
            Me.InvokeAsync("EU_SINCRO_SIRH_ModificarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_Registro}, Me.EU_SINCRO_SIRH_ModificarRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnEU_SINCRO_SIRH_ModificarRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.EU_SINCRO_SIRH_ModificarRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EU_SINCRO_SIRH_ModificarRegistroCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/EU_SINCRO_SIRH_ListarRegistros", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EU_SINCRO_SIRH_ListarRegistros(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("EU_SINCRO_SIRH_ListarRegistros", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EU_SINCRO_SIRH_ListarRegistrosAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String)
            Me.EU_SINCRO_SIRH_ListarRegistrosAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EU_SINCRO_SIRH_ListarRegistrosAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String, ByVal userState As Object)
            If (Me.EU_SINCRO_SIRH_ListarRegistrosOperationCompleted Is Nothing) Then
                Me.EU_SINCRO_SIRH_ListarRegistrosOperationCompleted = AddressOf Me.OnEU_SINCRO_SIRH_ListarRegistrosOperationCompleted
            End If
            Me.InvokeAsync("EU_SINCRO_SIRH_ListarRegistros", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden}, Me.EU_SINCRO_SIRH_ListarRegistrosOperationCompleted, userState)
        End Sub
        
        Private Sub OnEU_SINCRO_SIRH_ListarRegistrosOperationCompleted(ByVal arg As Object)
            If (Not (Me.EU_SINCRO_SIRH_ListarRegistrosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EU_SINCRO_SIRH_ListarRegistrosCompleted(Me, New EU_SINCRO_SIRH_ListarRegistrosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/EU_SINCRO_SIRH_ListarRegistrosLista", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EU_SINCRO_SIRH_ListarRegistrosLista(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("EU_SINCRO_SIRH_ListarRegistrosLista", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EU_SINCRO_SIRH_ListarRegistrosListaAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String)
            Me.EU_SINCRO_SIRH_ListarRegistrosListaAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EU_SINCRO_SIRH_ListarRegistrosListaAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String, ByVal userState As Object)
            If (Me.EU_SINCRO_SIRH_ListarRegistrosListaOperationCompleted Is Nothing) Then
                Me.EU_SINCRO_SIRH_ListarRegistrosListaOperationCompleted = AddressOf Me.OnEU_SINCRO_SIRH_ListarRegistrosListaOperationCompleted
            End If
            Me.InvokeAsync("EU_SINCRO_SIRH_ListarRegistrosLista", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden}, Me.EU_SINCRO_SIRH_ListarRegistrosListaOperationCompleted, userState)
        End Sub
        
        Private Sub OnEU_SINCRO_SIRH_ListarRegistrosListaOperationCompleted(ByVal arg As Object)
            If (Not (Me.EU_SINCRO_SIRH_ListarRegistrosListaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EU_SINCRO_SIRH_ListarRegistrosListaCompleted(Me, New EU_SINCRO_SIRH_ListarRegistrosListaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/EU_SINCRO_SIRH_ObtenerRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EU_SINCRO_SIRH_ObtenerRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String) As EntEU_SINCRO_SIRH
            Dim results() As Object = Me.Invoke("EU_SINCRO_SIRH_ObtenerRegistro", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion})
            Return CType(results(0),EntEU_SINCRO_SIRH)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EU_SINCRO_SIRH_ObtenerRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String)
            Me.EU_SINCRO_SIRH_ObtenerRegistroAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EU_SINCRO_SIRH_ObtenerRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal userState As Object)
            If (Me.EU_SINCRO_SIRH_ObtenerRegistroOperationCompleted Is Nothing) Then
                Me.EU_SINCRO_SIRH_ObtenerRegistroOperationCompleted = AddressOf Me.OnEU_SINCRO_SIRH_ObtenerRegistroOperationCompleted
            End If
            Me.InvokeAsync("EU_SINCRO_SIRH_ObtenerRegistro", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion}, Me.EU_SINCRO_SIRH_ObtenerRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnEU_SINCRO_SIRH_ObtenerRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.EU_SINCRO_SIRH_ObtenerRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EU_SINCRO_SIRH_ObtenerRegistroCompleted(Me, New EU_SINCRO_SIRH_ObtenerRegistroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/EU_SINCRO_SIRH_SincronizarRevisionAtestados", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub EU_SINCRO_SIRH_SincronizarRevisionAtestados(ByVal pvc_Usuario As String, ByVal pvc_Clave As String)
            Me.Invoke("EU_SINCRO_SIRH_SincronizarRevisionAtestados", New Object() {pvc_Usuario, pvc_Clave})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EU_SINCRO_SIRH_SincronizarRevisionAtestadosAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String)
            Me.EU_SINCRO_SIRH_SincronizarRevisionAtestadosAsync(pvc_Usuario, pvc_Clave, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EU_SINCRO_SIRH_SincronizarRevisionAtestadosAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal userState As Object)
            If (Me.EU_SINCRO_SIRH_SincronizarRevisionAtestadosOperationCompleted Is Nothing) Then
                Me.EU_SINCRO_SIRH_SincronizarRevisionAtestadosOperationCompleted = AddressOf Me.OnEU_SINCRO_SIRH_SincronizarRevisionAtestadosOperationCompleted
            End If
            Me.InvokeAsync("EU_SINCRO_SIRH_SincronizarRevisionAtestados", New Object() {pvc_Usuario, pvc_Clave}, Me.EU_SINCRO_SIRH_SincronizarRevisionAtestadosOperationCompleted, userState)
        End Sub
        
        Private Sub OnEU_SINCRO_SIRH_SincronizarRevisionAtestadosOperationCompleted(ByVal arg As Object)
            If (Not (Me.EU_SINCRO_SIRH_SincronizarRevisionAtestadosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EU_SINCRO_SIRH_SincronizarRevisionAtestadosCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/EU_SINCRO_SIRH_SincronizarCatalogos", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub EU_SINCRO_SIRH_SincronizarCatalogos(ByVal pvc_Usuario As String, ByVal pvc_Clave As String)
            Me.Invoke("EU_SINCRO_SIRH_SincronizarCatalogos", New Object() {pvc_Usuario, pvc_Clave})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EU_SINCRO_SIRH_SincronizarCatalogosAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String)
            Me.EU_SINCRO_SIRH_SincronizarCatalogosAsync(pvc_Usuario, pvc_Clave, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EU_SINCRO_SIRH_SincronizarCatalogosAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal userState As Object)
            If (Me.EU_SINCRO_SIRH_SincronizarCatalogosOperationCompleted Is Nothing) Then
                Me.EU_SINCRO_SIRH_SincronizarCatalogosOperationCompleted = AddressOf Me.OnEU_SINCRO_SIRH_SincronizarCatalogosOperationCompleted
            End If
            Me.InvokeAsync("EU_SINCRO_SIRH_SincronizarCatalogos", New Object() {pvc_Usuario, pvc_Clave}, Me.EU_SINCRO_SIRH_SincronizarCatalogosOperationCompleted, userState)
        End Sub
        
        Private Sub OnEU_SINCRO_SIRH_SincronizarCatalogosOperationCompleted(ByVal arg As Object)
            If (Not (Me.EU_SINCRO_SIRH_SincronizarCatalogosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EU_SINCRO_SIRH_SincronizarCatalogosCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/EU_SINCRO_SIRH_Sincronizar", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub EU_SINCRO_SIRH_Sincronizar(ByVal pvc_Usuario As String, ByVal pvc_Clave As String)
            Me.Invoke("EU_SINCRO_SIRH_Sincronizar", New Object() {pvc_Usuario, pvc_Clave})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EU_SINCRO_SIRH_SincronizarAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String)
            Me.EU_SINCRO_SIRH_SincronizarAsync(pvc_Usuario, pvc_Clave, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EU_SINCRO_SIRH_SincronizarAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal userState As Object)
            If (Me.EU_SINCRO_SIRH_SincronizarOperationCompleted Is Nothing) Then
                Me.EU_SINCRO_SIRH_SincronizarOperationCompleted = AddressOf Me.OnEU_SINCRO_SIRH_SincronizarOperationCompleted
            End If
            Me.InvokeAsync("EU_SINCRO_SIRH_Sincronizar", New Object() {pvc_Usuario, pvc_Clave}, Me.EU_SINCRO_SIRH_SincronizarOperationCompleted, userState)
        End Sub
        
        Private Sub OnEU_SINCRO_SIRH_SincronizarOperationCompleted(ByVal arg As Object)
            If (Not (Me.EU_SINCRO_SIRH_SincronizarCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EU_SINCRO_SIRH_SincronizarCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/EU_IMAGEN_CARNE_ReimprimirCarne", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub EU_IMAGEN_CARNE_ReimprimirCarne(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvn_NumEmpleado As Integer)
            Me.Invoke("EU_IMAGEN_CARNE_ReimprimirCarne", New Object() {pvc_Usuario, pvc_Clave, pvn_NumEmpleado})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EU_IMAGEN_CARNE_ReimprimirCarneAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvn_NumEmpleado As Integer)
            Me.EU_IMAGEN_CARNE_ReimprimirCarneAsync(pvc_Usuario, pvc_Clave, pvn_NumEmpleado, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EU_IMAGEN_CARNE_ReimprimirCarneAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvn_NumEmpleado As Integer, ByVal userState As Object)
            If (Me.EU_IMAGEN_CARNE_ReimprimirCarneOperationCompleted Is Nothing) Then
                Me.EU_IMAGEN_CARNE_ReimprimirCarneOperationCompleted = AddressOf Me.OnEU_IMAGEN_CARNE_ReimprimirCarneOperationCompleted
            End If
            Me.InvokeAsync("EU_IMAGEN_CARNE_ReimprimirCarne", New Object() {pvc_Usuario, pvc_Clave, pvn_NumEmpleado}, Me.EU_IMAGEN_CARNE_ReimprimirCarneOperationCompleted, userState)
        End Sub
        
        Private Sub OnEU_IMAGEN_CARNE_ReimprimirCarneOperationCompleted(ByVal arg As Object)
            If (Not (Me.EU_IMAGEN_CARNE_ReimprimirCarneCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EU_IMAGEN_CARNE_ReimprimirCarneCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/Eu_Imagen_Carne_ListarRegistroReporteTomaCarnets"& _ 
            "", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Eu_Imagen_Carne_ListarRegistroReporteTomaCarnets(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvb_UsarFechaEmision As Boolean, ByVal pvd_FechaDesde As Date, ByVal pvd_FechaHasta As Date, ByVal pvn_CodUnidad As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Eu_Imagen_Carne_ListarRegistroReporteTomaCarnets", New Object() {pvc_Usuario, pvc_Clave, pvb_UsarFechaEmision, pvd_FechaDesde, pvd_FechaHasta, pvn_CodUnidad})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Eu_Imagen_Carne_ListarRegistroReporteTomaCarnetsAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvb_UsarFechaEmision As Boolean, ByVal pvd_FechaDesde As Date, ByVal pvd_FechaHasta As Date, ByVal pvn_CodUnidad As Integer)
            Me.Eu_Imagen_Carne_ListarRegistroReporteTomaCarnetsAsync(pvc_Usuario, pvc_Clave, pvb_UsarFechaEmision, pvd_FechaDesde, pvd_FechaHasta, pvn_CodUnidad, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Eu_Imagen_Carne_ListarRegistroReporteTomaCarnetsAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvb_UsarFechaEmision As Boolean, ByVal pvd_FechaDesde As Date, ByVal pvd_FechaHasta As Date, ByVal pvn_CodUnidad As Integer, ByVal userState As Object)
            If (Me.Eu_Imagen_Carne_ListarRegistroReporteTomaCarnetsOperationCompleted Is Nothing) Then
                Me.Eu_Imagen_Carne_ListarRegistroReporteTomaCarnetsOperationCompleted = AddressOf Me.OnEu_Imagen_Carne_ListarRegistroReporteTomaCarnetsOperationCompleted
            End If
            Me.InvokeAsync("Eu_Imagen_Carne_ListarRegistroReporteTomaCarnets", New Object() {pvc_Usuario, pvc_Clave, pvb_UsarFechaEmision, pvd_FechaDesde, pvd_FechaHasta, pvn_CodUnidad}, Me.Eu_Imagen_Carne_ListarRegistroReporteTomaCarnetsOperationCompleted, userState)
        End Sub
        
        Private Sub OnEu_Imagen_Carne_ListarRegistroReporteTomaCarnetsOperationCompleted(ByVal arg As Object)
            If (Not (Me.Eu_Imagen_Carne_ListarRegistroReporteTomaCarnetsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Eu_Imagen_Carne_ListarRegistroReporteTomaCarnetsCompleted(Me, New Eu_Imagen_Carne_ListarRegistroReporteTomaCarnetsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/Eu_Imagen_Carne_ObtenerRegistroBasico", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Eu_Imagen_Carne_ObtenerRegistroBasico(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String) As EntEu_Imagen_Carnet
            Dim results() As Object = Me.Invoke("Eu_Imagen_Carne_ObtenerRegistroBasico", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion})
            Return CType(results(0),EntEu_Imagen_Carnet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Eu_Imagen_Carne_ObtenerRegistroBasicoAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String)
            Me.Eu_Imagen_Carne_ObtenerRegistroBasicoAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Eu_Imagen_Carne_ObtenerRegistroBasicoAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal userState As Object)
            If (Me.Eu_Imagen_Carne_ObtenerRegistroBasicoOperationCompleted Is Nothing) Then
                Me.Eu_Imagen_Carne_ObtenerRegistroBasicoOperationCompleted = AddressOf Me.OnEu_Imagen_Carne_ObtenerRegistroBasicoOperationCompleted
            End If
            Me.InvokeAsync("Eu_Imagen_Carne_ObtenerRegistroBasico", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion}, Me.Eu_Imagen_Carne_ObtenerRegistroBasicoOperationCompleted, userState)
        End Sub
        
        Private Sub OnEu_Imagen_Carne_ObtenerRegistroBasicoOperationCompleted(ByVal arg As Object)
            If (Not (Me.Eu_Imagen_Carne_ObtenerRegistroBasicoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Eu_Imagen_Carne_ObtenerRegistroBasicoCompleted(Me, New Eu_Imagen_Carne_ObtenerRegistroBasicoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/ObtenerGradoAcademicoFuncionario", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerGradoAcademicoFuncionario(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvn_NumEmpleado As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ObtenerGradoAcademicoFuncionario", New Object() {pvc_Usuario, pvc_Clave, pvn_NumEmpleado})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerGradoAcademicoFuncionarioAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvn_NumEmpleado As Integer)
            Me.ObtenerGradoAcademicoFuncionarioAsync(pvc_Usuario, pvc_Clave, pvn_NumEmpleado, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerGradoAcademicoFuncionarioAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvn_NumEmpleado As Integer, ByVal userState As Object)
            If (Me.ObtenerGradoAcademicoFuncionarioOperationCompleted Is Nothing) Then
                Me.ObtenerGradoAcademicoFuncionarioOperationCompleted = AddressOf Me.OnObtenerGradoAcademicoFuncionarioOperationCompleted
            End If
            Me.InvokeAsync("ObtenerGradoAcademicoFuncionario", New Object() {pvc_Usuario, pvc_Clave, pvn_NumEmpleado}, Me.ObtenerGradoAcademicoFuncionarioOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerGradoAcademicoFuncionarioOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerGradoAcademicoFuncionarioCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerGradoAcademicoFuncionarioCompleted(Me, New ObtenerGradoAcademicoFuncionarioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/Provincia_ObtenerRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Provincia_ObtenerRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String) As EntProvincia
            Dim results() As Object = Me.Invoke("Provincia_ObtenerRegistro", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion})
            Return CType(results(0),EntProvincia)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Provincia_ObtenerRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String)
            Me.Provincia_ObtenerRegistroAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Provincia_ObtenerRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal userState As Object)
            If (Me.Provincia_ObtenerRegistroOperationCompleted Is Nothing) Then
                Me.Provincia_ObtenerRegistroOperationCompleted = AddressOf Me.OnProvincia_ObtenerRegistroOperationCompleted
            End If
            Me.InvokeAsync("Provincia_ObtenerRegistro", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion}, Me.Provincia_ObtenerRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnProvincia_ObtenerRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.Provincia_ObtenerRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Provincia_ObtenerRegistroCompleted(Me, New Provincia_ObtenerRegistroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/Canton_ListarRegistros", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Canton_ListarRegistros(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Canton_ListarRegistros", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Canton_ListarRegistrosAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String)
            Me.Canton_ListarRegistrosAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Canton_ListarRegistrosAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String, ByVal userState As Object)
            If (Me.Canton_ListarRegistrosOperationCompleted Is Nothing) Then
                Me.Canton_ListarRegistrosOperationCompleted = AddressOf Me.OnCanton_ListarRegistrosOperationCompleted
            End If
            Me.InvokeAsync("Canton_ListarRegistros", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden}, Me.Canton_ListarRegistrosOperationCompleted, userState)
        End Sub
        
        Private Sub OnCanton_ListarRegistrosOperationCompleted(ByVal arg As Object)
            If (Not (Me.Canton_ListarRegistrosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Canton_ListarRegistrosCompleted(Me, New Canton_ListarRegistrosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/Canton_ListarRegistrosLista", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Canton_ListarRegistrosLista(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Canton_ListarRegistrosLista", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Canton_ListarRegistrosListaAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String)
            Me.Canton_ListarRegistrosListaAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Canton_ListarRegistrosListaAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String, ByVal userState As Object)
            If (Me.Canton_ListarRegistrosListaOperationCompleted Is Nothing) Then
                Me.Canton_ListarRegistrosListaOperationCompleted = AddressOf Me.OnCanton_ListarRegistrosListaOperationCompleted
            End If
            Me.InvokeAsync("Canton_ListarRegistrosLista", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden}, Me.Canton_ListarRegistrosListaOperationCompleted, userState)
        End Sub
        
        Private Sub OnCanton_ListarRegistrosListaOperationCompleted(ByVal arg As Object)
            If (Not (Me.Canton_ListarRegistrosListaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Canton_ListarRegistrosListaCompleted(Me, New Canton_ListarRegistrosListaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/Canton_ObtenerRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Canton_ObtenerRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String) As EntCanton
            Dim results() As Object = Me.Invoke("Canton_ObtenerRegistro", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion})
            Return CType(results(0),EntCanton)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Canton_ObtenerRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String)
            Me.Canton_ObtenerRegistroAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Canton_ObtenerRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal userState As Object)
            If (Me.Canton_ObtenerRegistroOperationCompleted Is Nothing) Then
                Me.Canton_ObtenerRegistroOperationCompleted = AddressOf Me.OnCanton_ObtenerRegistroOperationCompleted
            End If
            Me.InvokeAsync("Canton_ObtenerRegistro", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion}, Me.Canton_ObtenerRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnCanton_ObtenerRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.Canton_ObtenerRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Canton_ObtenerRegistroCompleted(Me, New Canton_ObtenerRegistroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/Distrito_ListarRegistros", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Distrito_ListarRegistros(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Distrito_ListarRegistros", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Distrito_ListarRegistrosAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String)
            Me.Distrito_ListarRegistrosAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Distrito_ListarRegistrosAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String, ByVal userState As Object)
            If (Me.Distrito_ListarRegistrosOperationCompleted Is Nothing) Then
                Me.Distrito_ListarRegistrosOperationCompleted = AddressOf Me.OnDistrito_ListarRegistrosOperationCompleted
            End If
            Me.InvokeAsync("Distrito_ListarRegistros", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden}, Me.Distrito_ListarRegistrosOperationCompleted, userState)
        End Sub
        
        Private Sub OnDistrito_ListarRegistrosOperationCompleted(ByVal arg As Object)
            If (Not (Me.Distrito_ListarRegistrosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Distrito_ListarRegistrosCompleted(Me, New Distrito_ListarRegistrosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/Distrito_ListarRegistrosLista", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Distrito_ListarRegistrosLista(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Distrito_ListarRegistrosLista", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Distrito_ListarRegistrosListaAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String)
            Me.Distrito_ListarRegistrosListaAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Distrito_ListarRegistrosListaAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String, ByVal userState As Object)
            If (Me.Distrito_ListarRegistrosListaOperationCompleted Is Nothing) Then
                Me.Distrito_ListarRegistrosListaOperationCompleted = AddressOf Me.OnDistrito_ListarRegistrosListaOperationCompleted
            End If
            Me.InvokeAsync("Distrito_ListarRegistrosLista", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden}, Me.Distrito_ListarRegistrosListaOperationCompleted, userState)
        End Sub
        
        Private Sub OnDistrito_ListarRegistrosListaOperationCompleted(ByVal arg As Object)
            If (Not (Me.Distrito_ListarRegistrosListaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Distrito_ListarRegistrosListaCompleted(Me, New Distrito_ListarRegistrosListaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/Distrito_ObtenerRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Distrito_ObtenerRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String) As EntDistrito
            Dim results() As Object = Me.Invoke("Distrito_ObtenerRegistro", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion})
            Return CType(results(0),EntDistrito)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Distrito_ObtenerRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String)
            Me.Distrito_ObtenerRegistroAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Distrito_ObtenerRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal userState As Object)
            If (Me.Distrito_ObtenerRegistroOperationCompleted Is Nothing) Then
                Me.Distrito_ObtenerRegistroOperationCompleted = AddressOf Me.OnDistrito_ObtenerRegistroOperationCompleted
            End If
            Me.InvokeAsync("Distrito_ObtenerRegistro", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion}, Me.Distrito_ObtenerRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnDistrito_ObtenerRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.Distrito_ObtenerRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Distrito_ObtenerRegistroCompleted(Me, New Distrito_ObtenerRegistroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/EmpleadoEstado_ListarRegistros", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EmpleadoEstado_ListarRegistros(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("EmpleadoEstado_ListarRegistros", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EmpleadoEstado_ListarRegistrosAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String)
            Me.EmpleadoEstado_ListarRegistrosAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmpleadoEstado_ListarRegistrosAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String, ByVal userState As Object)
            If (Me.EmpleadoEstado_ListarRegistrosOperationCompleted Is Nothing) Then
                Me.EmpleadoEstado_ListarRegistrosOperationCompleted = AddressOf Me.OnEmpleadoEstado_ListarRegistrosOperationCompleted
            End If
            Me.InvokeAsync("EmpleadoEstado_ListarRegistros", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden}, Me.EmpleadoEstado_ListarRegistrosOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmpleadoEstado_ListarRegistrosOperationCompleted(ByVal arg As Object)
            If (Not (Me.EmpleadoEstado_ListarRegistrosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EmpleadoEstado_ListarRegistrosCompleted(Me, New EmpleadoEstado_ListarRegistrosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/EmpleadoEstado_ListarRegistrosLista", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EmpleadoEstado_ListarRegistrosLista(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("EmpleadoEstado_ListarRegistrosLista", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EmpleadoEstado_ListarRegistrosListaAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String)
            Me.EmpleadoEstado_ListarRegistrosListaAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmpleadoEstado_ListarRegistrosListaAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String, ByVal userState As Object)
            If (Me.EmpleadoEstado_ListarRegistrosListaOperationCompleted Is Nothing) Then
                Me.EmpleadoEstado_ListarRegistrosListaOperationCompleted = AddressOf Me.OnEmpleadoEstado_ListarRegistrosListaOperationCompleted
            End If
            Me.InvokeAsync("EmpleadoEstado_ListarRegistrosLista", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden}, Me.EmpleadoEstado_ListarRegistrosListaOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmpleadoEstado_ListarRegistrosListaOperationCompleted(ByVal arg As Object)
            If (Not (Me.EmpleadoEstado_ListarRegistrosListaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EmpleadoEstado_ListarRegistrosListaCompleted(Me, New EmpleadoEstado_ListarRegistrosListaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/EmpleadoEstado_ObtenerRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EmpleadoEstado_ObtenerRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String) As EntEmpleado_Estado
            Dim results() As Object = Me.Invoke("EmpleadoEstado_ObtenerRegistro", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion})
            Return CType(results(0),EntEmpleado_Estado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EmpleadoEstado_ObtenerRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String)
            Me.EmpleadoEstado_ObtenerRegistroAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmpleadoEstado_ObtenerRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal userState As Object)
            If (Me.EmpleadoEstado_ObtenerRegistroOperationCompleted Is Nothing) Then
                Me.EmpleadoEstado_ObtenerRegistroOperationCompleted = AddressOf Me.OnEmpleadoEstado_ObtenerRegistroOperationCompleted
            End If
            Me.InvokeAsync("EmpleadoEstado_ObtenerRegistro", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion}, Me.EmpleadoEstado_ObtenerRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmpleadoEstado_ObtenerRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.EmpleadoEstado_ObtenerRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EmpleadoEstado_ObtenerRegistroCompleted(Me, New EmpleadoEstado_ObtenerRegistroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/EmpleadoEstado_InsertarRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub EmpleadoEstado_InsertarRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EmpleadoEstado As EntEmpleado_Estado)
            Me.Invoke("EmpleadoEstado_InsertarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_EmpleadoEstado})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmpleadoEstado_InsertarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EmpleadoEstado As EntEmpleado_Estado)
            Me.EmpleadoEstado_InsertarRegistroAsync(pvc_Usuario, pvc_Clave, pvo_EmpleadoEstado, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmpleadoEstado_InsertarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EmpleadoEstado As EntEmpleado_Estado, ByVal userState As Object)
            If (Me.EmpleadoEstado_InsertarRegistroOperationCompleted Is Nothing) Then
                Me.EmpleadoEstado_InsertarRegistroOperationCompleted = AddressOf Me.OnEmpleadoEstado_InsertarRegistroOperationCompleted
            End If
            Me.InvokeAsync("EmpleadoEstado_InsertarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_EmpleadoEstado}, Me.EmpleadoEstado_InsertarRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmpleadoEstado_InsertarRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.EmpleadoEstado_InsertarRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EmpleadoEstado_InsertarRegistroCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/EmpleadoEstado_BorrarRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub EmpleadoEstado_BorrarRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EmpleadoEstado As EntEmpleado_Estado)
            Me.Invoke("EmpleadoEstado_BorrarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_EmpleadoEstado})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmpleadoEstado_BorrarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EmpleadoEstado As EntEmpleado_Estado)
            Me.EmpleadoEstado_BorrarRegistroAsync(pvc_Usuario, pvc_Clave, pvo_EmpleadoEstado, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmpleadoEstado_BorrarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EmpleadoEstado As EntEmpleado_Estado, ByVal userState As Object)
            If (Me.EmpleadoEstado_BorrarRegistroOperationCompleted Is Nothing) Then
                Me.EmpleadoEstado_BorrarRegistroOperationCompleted = AddressOf Me.OnEmpleadoEstado_BorrarRegistroOperationCompleted
            End If
            Me.InvokeAsync("EmpleadoEstado_BorrarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_EmpleadoEstado}, Me.EmpleadoEstado_BorrarRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmpleadoEstado_BorrarRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.EmpleadoEstado_BorrarRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EmpleadoEstado_BorrarRegistroCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/EmpleadoEstado_ModificarRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub EmpleadoEstado_ModificarRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EmpleadoEstado As EntEmpleado_Estado)
            Me.Invoke("EmpleadoEstado_ModificarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_EmpleadoEstado})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmpleadoEstado_ModificarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EmpleadoEstado As EntEmpleado_Estado)
            Me.EmpleadoEstado_ModificarRegistroAsync(pvc_Usuario, pvc_Clave, pvo_EmpleadoEstado, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmpleadoEstado_ModificarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EmpleadoEstado As EntEmpleado_Estado, ByVal userState As Object)
            If (Me.EmpleadoEstado_ModificarRegistroOperationCompleted Is Nothing) Then
                Me.EmpleadoEstado_ModificarRegistroOperationCompleted = AddressOf Me.OnEmpleadoEstado_ModificarRegistroOperationCompleted
            End If
            Me.InvokeAsync("EmpleadoEstado_ModificarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_EmpleadoEstado}, Me.EmpleadoEstado_ModificarRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmpleadoEstado_ModificarRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.EmpleadoEstado_ModificarRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EmpleadoEstado_ModificarRegistroCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/Gbl_Tipo_Telefono_ListarRegistros", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Gbl_Tipo_Telefono_ListarRegistros(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Gbl_Tipo_Telefono_ListarRegistros", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Gbl_Tipo_Telefono_ListarRegistrosAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String)
            Me.Gbl_Tipo_Telefono_ListarRegistrosAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Gbl_Tipo_Telefono_ListarRegistrosAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String, ByVal userState As Object)
            If (Me.Gbl_Tipo_Telefono_ListarRegistrosOperationCompleted Is Nothing) Then
                Me.Gbl_Tipo_Telefono_ListarRegistrosOperationCompleted = AddressOf Me.OnGbl_Tipo_Telefono_ListarRegistrosOperationCompleted
            End If
            Me.InvokeAsync("Gbl_Tipo_Telefono_ListarRegistros", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden}, Me.Gbl_Tipo_Telefono_ListarRegistrosOperationCompleted, userState)
        End Sub
        
        Private Sub OnGbl_Tipo_Telefono_ListarRegistrosOperationCompleted(ByVal arg As Object)
            If (Not (Me.Gbl_Tipo_Telefono_ListarRegistrosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Gbl_Tipo_Telefono_ListarRegistrosCompleted(Me, New Gbl_Tipo_Telefono_ListarRegistrosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/Gbl_Tipo_Telefono_ListarRegistrosLista", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Gbl_Tipo_Telefono_ListarRegistrosLista(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Gbl_Tipo_Telefono_ListarRegistrosLista", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Gbl_Tipo_Telefono_ListarRegistrosListaAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String)
            Me.Gbl_Tipo_Telefono_ListarRegistrosListaAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Gbl_Tipo_Telefono_ListarRegistrosListaAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String, ByVal userState As Object)
            If (Me.Gbl_Tipo_Telefono_ListarRegistrosListaOperationCompleted Is Nothing) Then
                Me.Gbl_Tipo_Telefono_ListarRegistrosListaOperationCompleted = AddressOf Me.OnGbl_Tipo_Telefono_ListarRegistrosListaOperationCompleted
            End If
            Me.InvokeAsync("Gbl_Tipo_Telefono_ListarRegistrosLista", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden}, Me.Gbl_Tipo_Telefono_ListarRegistrosListaOperationCompleted, userState)
        End Sub
        
        Private Sub OnGbl_Tipo_Telefono_ListarRegistrosListaOperationCompleted(ByVal arg As Object)
            If (Not (Me.Gbl_Tipo_Telefono_ListarRegistrosListaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Gbl_Tipo_Telefono_ListarRegistrosListaCompleted(Me, New Gbl_Tipo_Telefono_ListarRegistrosListaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/Gbl_Tipo_Telefono_ObtenerRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Gbl_Tipo_Telefono_ObtenerRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String) As EntGbl_Tipo_Telefono
            Dim results() As Object = Me.Invoke("Gbl_Tipo_Telefono_ObtenerRegistro", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion})
            Return CType(results(0),EntGbl_Tipo_Telefono)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Gbl_Tipo_Telefono_ObtenerRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String)
            Me.Gbl_Tipo_Telefono_ObtenerRegistroAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Gbl_Tipo_Telefono_ObtenerRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal userState As Object)
            If (Me.Gbl_Tipo_Telefono_ObtenerRegistroOperationCompleted Is Nothing) Then
                Me.Gbl_Tipo_Telefono_ObtenerRegistroOperationCompleted = AddressOf Me.OnGbl_Tipo_Telefono_ObtenerRegistroOperationCompleted
            End If
            Me.InvokeAsync("Gbl_Tipo_Telefono_ObtenerRegistro", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion}, Me.Gbl_Tipo_Telefono_ObtenerRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnGbl_Tipo_Telefono_ObtenerRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.Gbl_Tipo_Telefono_ObtenerRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Gbl_Tipo_Telefono_ObtenerRegistroCompleted(Me, New Gbl_Tipo_Telefono_ObtenerRegistroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/EU_EMP_TIPO_ListarRegistros", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EU_EMP_TIPO_ListarRegistros(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("EU_EMP_TIPO_ListarRegistros", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EU_EMP_TIPO_ListarRegistrosAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String)
            Me.EU_EMP_TIPO_ListarRegistrosAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EU_EMP_TIPO_ListarRegistrosAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String, ByVal userState As Object)
            If (Me.EU_EMP_TIPO_ListarRegistrosOperationCompleted Is Nothing) Then
                Me.EU_EMP_TIPO_ListarRegistrosOperationCompleted = AddressOf Me.OnEU_EMP_TIPO_ListarRegistrosOperationCompleted
            End If
            Me.InvokeAsync("EU_EMP_TIPO_ListarRegistros", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden}, Me.EU_EMP_TIPO_ListarRegistrosOperationCompleted, userState)
        End Sub
        
        Private Sub OnEU_EMP_TIPO_ListarRegistrosOperationCompleted(ByVal arg As Object)
            If (Not (Me.EU_EMP_TIPO_ListarRegistrosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EU_EMP_TIPO_ListarRegistrosCompleted(Me, New EU_EMP_TIPO_ListarRegistrosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/EU_EMP_TIPO_ListarRegistrosLista", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EU_EMP_TIPO_ListarRegistrosLista(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("EU_EMP_TIPO_ListarRegistrosLista", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EU_EMP_TIPO_ListarRegistrosListaAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String)
            Me.EU_EMP_TIPO_ListarRegistrosListaAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EU_EMP_TIPO_ListarRegistrosListaAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String, ByVal userState As Object)
            If (Me.EU_EMP_TIPO_ListarRegistrosListaOperationCompleted Is Nothing) Then
                Me.EU_EMP_TIPO_ListarRegistrosListaOperationCompleted = AddressOf Me.OnEU_EMP_TIPO_ListarRegistrosListaOperationCompleted
            End If
            Me.InvokeAsync("EU_EMP_TIPO_ListarRegistrosLista", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden}, Me.EU_EMP_TIPO_ListarRegistrosListaOperationCompleted, userState)
        End Sub
        
        Private Sub OnEU_EMP_TIPO_ListarRegistrosListaOperationCompleted(ByVal arg As Object)
            If (Not (Me.EU_EMP_TIPO_ListarRegistrosListaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EU_EMP_TIPO_ListarRegistrosListaCompleted(Me, New EU_EMP_TIPO_ListarRegistrosListaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/EU_EMP_TIPO_ObtenerRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EU_EMP_TIPO_ObtenerRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String) As EntEmp_Tipo
            Dim results() As Object = Me.Invoke("EU_EMP_TIPO_ObtenerRegistro", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion})
            Return CType(results(0),EntEmp_Tipo)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EU_EMP_TIPO_ObtenerRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String)
            Me.EU_EMP_TIPO_ObtenerRegistroAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EU_EMP_TIPO_ObtenerRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal userState As Object)
            If (Me.EU_EMP_TIPO_ObtenerRegistroOperationCompleted Is Nothing) Then
                Me.EU_EMP_TIPO_ObtenerRegistroOperationCompleted = AddressOf Me.OnEU_EMP_TIPO_ObtenerRegistroOperationCompleted
            End If
            Me.InvokeAsync("EU_EMP_TIPO_ObtenerRegistro", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion}, Me.EU_EMP_TIPO_ObtenerRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnEU_EMP_TIPO_ObtenerRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.EU_EMP_TIPO_ObtenerRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EU_EMP_TIPO_ObtenerRegistroCompleted(Me, New EU_EMP_TIPO_ObtenerRegistroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/Gbl_Tipo_Identificacion_ListarRegistros", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Gbl_Tipo_Identificacion_ListarRegistros(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Gbl_Tipo_Identificacion_ListarRegistros", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Gbl_Tipo_Identificacion_ListarRegistrosAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String)
            Me.Gbl_Tipo_Identificacion_ListarRegistrosAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Gbl_Tipo_Identificacion_ListarRegistrosAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String, ByVal userState As Object)
            If (Me.Gbl_Tipo_Identificacion_ListarRegistrosOperationCompleted Is Nothing) Then
                Me.Gbl_Tipo_Identificacion_ListarRegistrosOperationCompleted = AddressOf Me.OnGbl_Tipo_Identificacion_ListarRegistrosOperationCompleted
            End If
            Me.InvokeAsync("Gbl_Tipo_Identificacion_ListarRegistros", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden}, Me.Gbl_Tipo_Identificacion_ListarRegistrosOperationCompleted, userState)
        End Sub
        
        Private Sub OnGbl_Tipo_Identificacion_ListarRegistrosOperationCompleted(ByVal arg As Object)
            If (Not (Me.Gbl_Tipo_Identificacion_ListarRegistrosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Gbl_Tipo_Identificacion_ListarRegistrosCompleted(Me, New Gbl_Tipo_Identificacion_ListarRegistrosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/Gbl_Tipo_Identificacion_ListarRegistrosLista", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Gbl_Tipo_Identificacion_ListarRegistrosLista(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Gbl_Tipo_Identificacion_ListarRegistrosLista", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Gbl_Tipo_Identificacion_ListarRegistrosListaAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String)
            Me.Gbl_Tipo_Identificacion_ListarRegistrosListaAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Gbl_Tipo_Identificacion_ListarRegistrosListaAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String, ByVal userState As Object)
            If (Me.Gbl_Tipo_Identificacion_ListarRegistrosListaOperationCompleted Is Nothing) Then
                Me.Gbl_Tipo_Identificacion_ListarRegistrosListaOperationCompleted = AddressOf Me.OnGbl_Tipo_Identificacion_ListarRegistrosListaOperationCompleted
            End If
            Me.InvokeAsync("Gbl_Tipo_Identificacion_ListarRegistrosLista", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden}, Me.Gbl_Tipo_Identificacion_ListarRegistrosListaOperationCompleted, userState)
        End Sub
        
        Private Sub OnGbl_Tipo_Identificacion_ListarRegistrosListaOperationCompleted(ByVal arg As Object)
            If (Not (Me.Gbl_Tipo_Identificacion_ListarRegistrosListaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Gbl_Tipo_Identificacion_ListarRegistrosListaCompleted(Me, New Gbl_Tipo_Identificacion_ListarRegistrosListaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/Gbl_Tipo_Identificacion_ObtenerRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Gbl_Tipo_Identificacion_ObtenerRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String) As EntGbl_Tipo_Identificacion
            Dim results() As Object = Me.Invoke("Gbl_Tipo_Identificacion_ObtenerRegistro", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion})
            Return CType(results(0),EntGbl_Tipo_Identificacion)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Gbl_Tipo_Identificacion_ObtenerRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String)
            Me.Gbl_Tipo_Identificacion_ObtenerRegistroAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Gbl_Tipo_Identificacion_ObtenerRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal userState As Object)
            If (Me.Gbl_Tipo_Identificacion_ObtenerRegistroOperationCompleted Is Nothing) Then
                Me.Gbl_Tipo_Identificacion_ObtenerRegistroOperationCompleted = AddressOf Me.OnGbl_Tipo_Identificacion_ObtenerRegistroOperationCompleted
            End If
            Me.InvokeAsync("Gbl_Tipo_Identificacion_ObtenerRegistro", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion}, Me.Gbl_Tipo_Identificacion_ObtenerRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnGbl_Tipo_Identificacion_ObtenerRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.Gbl_Tipo_Identificacion_ObtenerRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Gbl_Tipo_Identificacion_ObtenerRegistroCompleted(Me, New Gbl_Tipo_Identificacion_ObtenerRegistroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/Gbl_Tipo_Licencia_ListarRegistros", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Gbl_Tipo_Licencia_ListarRegistros(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Gbl_Tipo_Licencia_ListarRegistros", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Gbl_Tipo_Licencia_ListarRegistrosAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String)
            Me.Gbl_Tipo_Licencia_ListarRegistrosAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Gbl_Tipo_Licencia_ListarRegistrosAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String, ByVal userState As Object)
            If (Me.Gbl_Tipo_Licencia_ListarRegistrosOperationCompleted Is Nothing) Then
                Me.Gbl_Tipo_Licencia_ListarRegistrosOperationCompleted = AddressOf Me.OnGbl_Tipo_Licencia_ListarRegistrosOperationCompleted
            End If
            Me.InvokeAsync("Gbl_Tipo_Licencia_ListarRegistros", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden}, Me.Gbl_Tipo_Licencia_ListarRegistrosOperationCompleted, userState)
        End Sub
        
        Private Sub OnGbl_Tipo_Licencia_ListarRegistrosOperationCompleted(ByVal arg As Object)
            If (Not (Me.Gbl_Tipo_Licencia_ListarRegistrosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Gbl_Tipo_Licencia_ListarRegistrosCompleted(Me, New Gbl_Tipo_Licencia_ListarRegistrosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/Gbl_Tipo_Licencia_ListarRegistrosLista", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Gbl_Tipo_Licencia_ListarRegistrosLista(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Gbl_Tipo_Licencia_ListarRegistrosLista", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Gbl_Tipo_Licencia_ListarRegistrosListaAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String)
            Me.Gbl_Tipo_Licencia_ListarRegistrosListaAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Gbl_Tipo_Licencia_ListarRegistrosListaAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String, ByVal userState As Object)
            If (Me.Gbl_Tipo_Licencia_ListarRegistrosListaOperationCompleted Is Nothing) Then
                Me.Gbl_Tipo_Licencia_ListarRegistrosListaOperationCompleted = AddressOf Me.OnGbl_Tipo_Licencia_ListarRegistrosListaOperationCompleted
            End If
            Me.InvokeAsync("Gbl_Tipo_Licencia_ListarRegistrosLista", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden}, Me.Gbl_Tipo_Licencia_ListarRegistrosListaOperationCompleted, userState)
        End Sub
        
        Private Sub OnGbl_Tipo_Licencia_ListarRegistrosListaOperationCompleted(ByVal arg As Object)
            If (Not (Me.Gbl_Tipo_Licencia_ListarRegistrosListaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Gbl_Tipo_Licencia_ListarRegistrosListaCompleted(Me, New Gbl_Tipo_Licencia_ListarRegistrosListaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/Gbl_Tipo_Licencia_ObtenerRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Gbl_Tipo_Licencia_ObtenerRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String) As EntGbl_Tipo_Licencia
            Dim results() As Object = Me.Invoke("Gbl_Tipo_Licencia_ObtenerRegistro", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion})
            Return CType(results(0),EntGbl_Tipo_Licencia)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Gbl_Tipo_Licencia_ObtenerRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String)
            Me.Gbl_Tipo_Licencia_ObtenerRegistroAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Gbl_Tipo_Licencia_ObtenerRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal userState As Object)
            If (Me.Gbl_Tipo_Licencia_ObtenerRegistroOperationCompleted Is Nothing) Then
                Me.Gbl_Tipo_Licencia_ObtenerRegistroOperationCompleted = AddressOf Me.OnGbl_Tipo_Licencia_ObtenerRegistroOperationCompleted
            End If
            Me.InvokeAsync("Gbl_Tipo_Licencia_ObtenerRegistro", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion}, Me.Gbl_Tipo_Licencia_ObtenerRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnGbl_Tipo_Licencia_ObtenerRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.Gbl_Tipo_Licencia_ObtenerRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Gbl_Tipo_Licencia_ObtenerRegistroCompleted(Me, New Gbl_Tipo_Licencia_ObtenerRegistroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/Gbl_Estado_Civil_ListarRegistros", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Gbl_Estado_Civil_ListarRegistros(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Gbl_Estado_Civil_ListarRegistros", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Gbl_Estado_Civil_ListarRegistrosAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String)
            Me.Gbl_Estado_Civil_ListarRegistrosAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Gbl_Estado_Civil_ListarRegistrosAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String, ByVal userState As Object)
            If (Me.Gbl_Estado_Civil_ListarRegistrosOperationCompleted Is Nothing) Then
                Me.Gbl_Estado_Civil_ListarRegistrosOperationCompleted = AddressOf Me.OnGbl_Estado_Civil_ListarRegistrosOperationCompleted
            End If
            Me.InvokeAsync("Gbl_Estado_Civil_ListarRegistros", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden}, Me.Gbl_Estado_Civil_ListarRegistrosOperationCompleted, userState)
        End Sub
        
        Private Sub OnGbl_Estado_Civil_ListarRegistrosOperationCompleted(ByVal arg As Object)
            If (Not (Me.Gbl_Estado_Civil_ListarRegistrosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Gbl_Estado_Civil_ListarRegistrosCompleted(Me, New Gbl_Estado_Civil_ListarRegistrosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/Gbl_Estado_Civil_ListarRegistrosLista", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Gbl_Estado_Civil_ListarRegistrosLista(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Gbl_Estado_Civil_ListarRegistrosLista", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Gbl_Estado_Civil_ListarRegistrosListaAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String)
            Me.Gbl_Estado_Civil_ListarRegistrosListaAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Gbl_Estado_Civil_ListarRegistrosListaAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String, ByVal userState As Object)
            If (Me.Gbl_Estado_Civil_ListarRegistrosListaOperationCompleted Is Nothing) Then
                Me.Gbl_Estado_Civil_ListarRegistrosListaOperationCompleted = AddressOf Me.OnGbl_Estado_Civil_ListarRegistrosListaOperationCompleted
            End If
            Me.InvokeAsync("Gbl_Estado_Civil_ListarRegistrosLista", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden}, Me.Gbl_Estado_Civil_ListarRegistrosListaOperationCompleted, userState)
        End Sub
        
        Private Sub OnGbl_Estado_Civil_ListarRegistrosListaOperationCompleted(ByVal arg As Object)
            If (Not (Me.Gbl_Estado_Civil_ListarRegistrosListaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Gbl_Estado_Civil_ListarRegistrosListaCompleted(Me, New Gbl_Estado_Civil_ListarRegistrosListaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/Gbl_Estado_Civil_ObtenerRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Gbl_Estado_Civil_ObtenerRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String) As EntGbl_Estado_Civil
            Dim results() As Object = Me.Invoke("Gbl_Estado_Civil_ObtenerRegistro", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion})
            Return CType(results(0),EntGbl_Estado_Civil)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Gbl_Estado_Civil_ObtenerRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String)
            Me.Gbl_Estado_Civil_ObtenerRegistroAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Gbl_Estado_Civil_ObtenerRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal userState As Object)
            If (Me.Gbl_Estado_Civil_ObtenerRegistroOperationCompleted Is Nothing) Then
                Me.Gbl_Estado_Civil_ObtenerRegistroOperationCompleted = AddressOf Me.OnGbl_Estado_Civil_ObtenerRegistroOperationCompleted
            End If
            Me.InvokeAsync("Gbl_Estado_Civil_ObtenerRegistro", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion}, Me.Gbl_Estado_Civil_ObtenerRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnGbl_Estado_Civil_ObtenerRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.Gbl_Estado_Civil_ObtenerRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Gbl_Estado_Civil_ObtenerRegistroCompleted(Me, New Gbl_Estado_Civil_ObtenerRegistroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/Gbl_Idiomas_ListarRegistros", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Gbl_Idiomas_ListarRegistros(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Gbl_Idiomas_ListarRegistros", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Gbl_Idiomas_ListarRegistrosAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String)
            Me.Gbl_Idiomas_ListarRegistrosAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Gbl_Idiomas_ListarRegistrosAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String, ByVal userState As Object)
            If (Me.Gbl_Idiomas_ListarRegistrosOperationCompleted Is Nothing) Then
                Me.Gbl_Idiomas_ListarRegistrosOperationCompleted = AddressOf Me.OnGbl_Idiomas_ListarRegistrosOperationCompleted
            End If
            Me.InvokeAsync("Gbl_Idiomas_ListarRegistros", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden}, Me.Gbl_Idiomas_ListarRegistrosOperationCompleted, userState)
        End Sub
        
        Private Sub OnGbl_Idiomas_ListarRegistrosOperationCompleted(ByVal arg As Object)
            If (Not (Me.Gbl_Idiomas_ListarRegistrosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Gbl_Idiomas_ListarRegistrosCompleted(Me, New Gbl_Idiomas_ListarRegistrosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/Gbl_Idiomas_ListarRegistrosLista", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Gbl_Idiomas_ListarRegistrosLista(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Gbl_Idiomas_ListarRegistrosLista", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Gbl_Idiomas_ListarRegistrosListaAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String)
            Me.Gbl_Idiomas_ListarRegistrosListaAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Gbl_Idiomas_ListarRegistrosListaAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String, ByVal userState As Object)
            If (Me.Gbl_Idiomas_ListarRegistrosListaOperationCompleted Is Nothing) Then
                Me.Gbl_Idiomas_ListarRegistrosListaOperationCompleted = AddressOf Me.OnGbl_Idiomas_ListarRegistrosListaOperationCompleted
            End If
            Me.InvokeAsync("Gbl_Idiomas_ListarRegistrosLista", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden}, Me.Gbl_Idiomas_ListarRegistrosListaOperationCompleted, userState)
        End Sub
        
        Private Sub OnGbl_Idiomas_ListarRegistrosListaOperationCompleted(ByVal arg As Object)
            If (Not (Me.Gbl_Idiomas_ListarRegistrosListaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Gbl_Idiomas_ListarRegistrosListaCompleted(Me, New Gbl_Idiomas_ListarRegistrosListaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/Gbl_Idiomas_ObtenerRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Gbl_Idiomas_ObtenerRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String) As EntGbl_Idiomas
            Dim results() As Object = Me.Invoke("Gbl_Idiomas_ObtenerRegistro", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion})
            Return CType(results(0),EntGbl_Idiomas)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Gbl_Idiomas_ObtenerRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String)
            Me.Gbl_Idiomas_ObtenerRegistroAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Gbl_Idiomas_ObtenerRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal userState As Object)
            If (Me.Gbl_Idiomas_ObtenerRegistroOperationCompleted Is Nothing) Then
                Me.Gbl_Idiomas_ObtenerRegistroOperationCompleted = AddressOf Me.OnGbl_Idiomas_ObtenerRegistroOperationCompleted
            End If
            Me.InvokeAsync("Gbl_Idiomas_ObtenerRegistro", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion}, Me.Gbl_Idiomas_ObtenerRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnGbl_Idiomas_ObtenerRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.Gbl_Idiomas_ObtenerRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Gbl_Idiomas_ObtenerRegistroCompleted(Me, New Gbl_Idiomas_ObtenerRegistroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/Produccion_ListarRegistros", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Produccion_ListarRegistros(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Produccion_ListarRegistros", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Produccion_ListarRegistrosAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String)
            Me.Produccion_ListarRegistrosAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Produccion_ListarRegistrosAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String, ByVal userState As Object)
            If (Me.Produccion_ListarRegistrosOperationCompleted Is Nothing) Then
                Me.Produccion_ListarRegistrosOperationCompleted = AddressOf Me.OnProduccion_ListarRegistrosOperationCompleted
            End If
            Me.InvokeAsync("Produccion_ListarRegistros", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden}, Me.Produccion_ListarRegistrosOperationCompleted, userState)
        End Sub
        
        Private Sub OnProduccion_ListarRegistrosOperationCompleted(ByVal arg As Object)
            If (Not (Me.Produccion_ListarRegistrosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Produccion_ListarRegistrosCompleted(Me, New Produccion_ListarRegistrosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/Produccion_ListarRegistrosLista", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Produccion_ListarRegistrosLista(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Produccion_ListarRegistrosLista", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Produccion_ListarRegistrosListaAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String)
            Me.Produccion_ListarRegistrosListaAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Produccion_ListarRegistrosListaAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String, ByVal userState As Object)
            If (Me.Produccion_ListarRegistrosListaOperationCompleted Is Nothing) Then
                Me.Produccion_ListarRegistrosListaOperationCompleted = AddressOf Me.OnProduccion_ListarRegistrosListaOperationCompleted
            End If
            Me.InvokeAsync("Produccion_ListarRegistrosLista", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden}, Me.Produccion_ListarRegistrosListaOperationCompleted, userState)
        End Sub
        
        Private Sub OnProduccion_ListarRegistrosListaOperationCompleted(ByVal arg As Object)
            If (Not (Me.Produccion_ListarRegistrosListaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Produccion_ListarRegistrosListaCompleted(Me, New Produccion_ListarRegistrosListaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/Produccion_ObtenerRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Produccion_ObtenerRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String) As EntProduccion
            Dim results() As Object = Me.Invoke("Produccion_ObtenerRegistro", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion})
            Return CType(results(0),EntProduccion)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Produccion_ObtenerRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String)
            Me.Produccion_ObtenerRegistroAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Produccion_ObtenerRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal userState As Object)
            If (Me.Produccion_ObtenerRegistroOperationCompleted Is Nothing) Then
                Me.Produccion_ObtenerRegistroOperationCompleted = AddressOf Me.OnProduccion_ObtenerRegistroOperationCompleted
            End If
            Me.InvokeAsync("Produccion_ObtenerRegistro", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion}, Me.Produccion_ObtenerRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnProduccion_ObtenerRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.Produccion_ObtenerRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Produccion_ObtenerRegistroCompleted(Me, New Produccion_ObtenerRegistroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/Produccion_InsertarRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub Produccion_InsertarRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Produccion As EntProduccion)
            Me.Invoke("Produccion_InsertarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_Produccion})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Produccion_InsertarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Produccion As EntProduccion)
            Me.Produccion_InsertarRegistroAsync(pvc_Usuario, pvc_Clave, pvo_Produccion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Produccion_InsertarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Produccion As EntProduccion, ByVal userState As Object)
            If (Me.Produccion_InsertarRegistroOperationCompleted Is Nothing) Then
                Me.Produccion_InsertarRegistroOperationCompleted = AddressOf Me.OnProduccion_InsertarRegistroOperationCompleted
            End If
            Me.InvokeAsync("Produccion_InsertarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_Produccion}, Me.Produccion_InsertarRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnProduccion_InsertarRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.Produccion_InsertarRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Produccion_InsertarRegistroCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/Produccion_BorrarRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub Produccion_BorrarRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Produccion As EntProduccion)
            Me.Invoke("Produccion_BorrarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_Produccion})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Produccion_BorrarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Produccion As EntProduccion)
            Me.Produccion_BorrarRegistroAsync(pvc_Usuario, pvc_Clave, pvo_Produccion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Produccion_BorrarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Produccion As EntProduccion, ByVal userState As Object)
            If (Me.Produccion_BorrarRegistroOperationCompleted Is Nothing) Then
                Me.Produccion_BorrarRegistroOperationCompleted = AddressOf Me.OnProduccion_BorrarRegistroOperationCompleted
            End If
            Me.InvokeAsync("Produccion_BorrarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_Produccion}, Me.Produccion_BorrarRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnProduccion_BorrarRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.Produccion_BorrarRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Produccion_BorrarRegistroCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/Produccion_ModificarRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub Produccion_ModificarRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Produccion As EntProduccion)
            Me.Invoke("Produccion_ModificarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_Produccion})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Produccion_ModificarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Produccion As EntProduccion)
            Me.Produccion_ModificarRegistroAsync(pvc_Usuario, pvc_Clave, pvo_Produccion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Produccion_ModificarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Produccion As EntProduccion, ByVal userState As Object)
            If (Me.Produccion_ModificarRegistroOperationCompleted Is Nothing) Then
                Me.Produccion_ModificarRegistroOperationCompleted = AddressOf Me.OnProduccion_ModificarRegistroOperationCompleted
            End If
            Me.InvokeAsync("Produccion_ModificarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_Produccion}, Me.Produccion_ModificarRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnProduccion_ModificarRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.Produccion_ModificarRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Produccion_ModificarRegistroCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/Medio_ListarRegistros", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Medio_ListarRegistros(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Medio_ListarRegistros", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Medio_ListarRegistrosAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String)
            Me.Medio_ListarRegistrosAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Medio_ListarRegistrosAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String, ByVal userState As Object)
            If (Me.Medio_ListarRegistrosOperationCompleted Is Nothing) Then
                Me.Medio_ListarRegistrosOperationCompleted = AddressOf Me.OnMedio_ListarRegistrosOperationCompleted
            End If
            Me.InvokeAsync("Medio_ListarRegistros", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden}, Me.Medio_ListarRegistrosOperationCompleted, userState)
        End Sub
        
        Private Sub OnMedio_ListarRegistrosOperationCompleted(ByVal arg As Object)
            If (Not (Me.Medio_ListarRegistrosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Medio_ListarRegistrosCompleted(Me, New Medio_ListarRegistrosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/Medio_ListarRegistrosLista", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Medio_ListarRegistrosLista(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Medio_ListarRegistrosLista", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Medio_ListarRegistrosListaAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String)
            Me.Medio_ListarRegistrosListaAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Medio_ListarRegistrosListaAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String, ByVal userState As Object)
            If (Me.Medio_ListarRegistrosListaOperationCompleted Is Nothing) Then
                Me.Medio_ListarRegistrosListaOperationCompleted = AddressOf Me.OnMedio_ListarRegistrosListaOperationCompleted
            End If
            Me.InvokeAsync("Medio_ListarRegistrosLista", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden}, Me.Medio_ListarRegistrosListaOperationCompleted, userState)
        End Sub
        
        Private Sub OnMedio_ListarRegistrosListaOperationCompleted(ByVal arg As Object)
            If (Not (Me.Medio_ListarRegistrosListaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Medio_ListarRegistrosListaCompleted(Me, New Medio_ListarRegistrosListaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/Medio_ObtenerRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Medio_ObtenerRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String) As EntMedio
            Dim results() As Object = Me.Invoke("Medio_ObtenerRegistro", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion})
            Return CType(results(0),EntMedio)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Medio_ObtenerRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String)
            Me.Medio_ObtenerRegistroAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Medio_ObtenerRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal userState As Object)
            If (Me.Medio_ObtenerRegistroOperationCompleted Is Nothing) Then
                Me.Medio_ObtenerRegistroOperationCompleted = AddressOf Me.OnMedio_ObtenerRegistroOperationCompleted
            End If
            Me.InvokeAsync("Medio_ObtenerRegistro", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion}, Me.Medio_ObtenerRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnMedio_ObtenerRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.Medio_ObtenerRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Medio_ObtenerRegistroCompleted(Me, New Medio_ObtenerRegistroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/Medio_InsertarRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub Medio_InsertarRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Medio As EntMedio)
            Me.Invoke("Medio_InsertarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_Medio})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Medio_InsertarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Medio As EntMedio)
            Me.Medio_InsertarRegistroAsync(pvc_Usuario, pvc_Clave, pvo_Medio, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Medio_InsertarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Medio As EntMedio, ByVal userState As Object)
            If (Me.Medio_InsertarRegistroOperationCompleted Is Nothing) Then
                Me.Medio_InsertarRegistroOperationCompleted = AddressOf Me.OnMedio_InsertarRegistroOperationCompleted
            End If
            Me.InvokeAsync("Medio_InsertarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_Medio}, Me.Medio_InsertarRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnMedio_InsertarRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.Medio_InsertarRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Medio_InsertarRegistroCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/Medio_BorrarRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub Medio_BorrarRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Medio As EntMedio)
            Me.Invoke("Medio_BorrarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_Medio})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Medio_BorrarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Medio As EntMedio)
            Me.Medio_BorrarRegistroAsync(pvc_Usuario, pvc_Clave, pvo_Medio, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Medio_BorrarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Medio As EntMedio, ByVal userState As Object)
            If (Me.Medio_BorrarRegistroOperationCompleted Is Nothing) Then
                Me.Medio_BorrarRegistroOperationCompleted = AddressOf Me.OnMedio_BorrarRegistroOperationCompleted
            End If
            Me.InvokeAsync("Medio_BorrarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_Medio}, Me.Medio_BorrarRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnMedio_BorrarRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.Medio_BorrarRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Medio_BorrarRegistroCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/Medio_ModificarRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub Medio_ModificarRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Medio As EntMedio)
            Me.Invoke("Medio_ModificarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_Medio})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Medio_ModificarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Medio As EntMedio)
            Me.Medio_ModificarRegistroAsync(pvc_Usuario, pvc_Clave, pvo_Medio, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Medio_ModificarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Medio As EntMedio, ByVal userState As Object)
            If (Me.Medio_ModificarRegistroOperationCompleted Is Nothing) Then
                Me.Medio_ModificarRegistroOperationCompleted = AddressOf Me.OnMedio_ModificarRegistroOperationCompleted
            End If
            Me.InvokeAsync("Medio_ModificarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_Medio}, Me.Medio_ModificarRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnMedio_ModificarRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.Medio_ModificarRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Medio_ModificarRegistroCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/Estado_ListarRegistros", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Estado_ListarRegistros(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Estado_ListarRegistros", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Estado_ListarRegistrosAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String)
            Me.Estado_ListarRegistrosAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Estado_ListarRegistrosAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String, ByVal userState As Object)
            If (Me.Estado_ListarRegistrosOperationCompleted Is Nothing) Then
                Me.Estado_ListarRegistrosOperationCompleted = AddressOf Me.OnEstado_ListarRegistrosOperationCompleted
            End If
            Me.InvokeAsync("Estado_ListarRegistros", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden}, Me.Estado_ListarRegistrosOperationCompleted, userState)
        End Sub
        
        Private Sub OnEstado_ListarRegistrosOperationCompleted(ByVal arg As Object)
            If (Not (Me.Estado_ListarRegistrosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Estado_ListarRegistrosCompleted(Me, New Estado_ListarRegistrosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/Estado_ListarRegistrosLista", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Estado_ListarRegistrosLista(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Estado_ListarRegistrosLista", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Estado_ListarRegistrosListaAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String)
            Me.Estado_ListarRegistrosListaAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Estado_ListarRegistrosListaAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String, ByVal userState As Object)
            If (Me.Estado_ListarRegistrosListaOperationCompleted Is Nothing) Then
                Me.Estado_ListarRegistrosListaOperationCompleted = AddressOf Me.OnEstado_ListarRegistrosListaOperationCompleted
            End If
            Me.InvokeAsync("Estado_ListarRegistrosLista", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden}, Me.Estado_ListarRegistrosListaOperationCompleted, userState)
        End Sub
        
        Private Sub OnEstado_ListarRegistrosListaOperationCompleted(ByVal arg As Object)
            If (Not (Me.Estado_ListarRegistrosListaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Estado_ListarRegistrosListaCompleted(Me, New Estado_ListarRegistrosListaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/Estado_ObtenerRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Estado_ObtenerRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String) As EntEstado
            Dim results() As Object = Me.Invoke("Estado_ObtenerRegistro", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion})
            Return CType(results(0),EntEstado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Estado_ObtenerRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String)
            Me.Estado_ObtenerRegistroAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Estado_ObtenerRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal userState As Object)
            If (Me.Estado_ObtenerRegistroOperationCompleted Is Nothing) Then
                Me.Estado_ObtenerRegistroOperationCompleted = AddressOf Me.OnEstado_ObtenerRegistroOperationCompleted
            End If
            Me.InvokeAsync("Estado_ObtenerRegistro", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion}, Me.Estado_ObtenerRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnEstado_ObtenerRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.Estado_ObtenerRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Estado_ObtenerRegistroCompleted(Me, New Estado_ObtenerRegistroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/EU_EMP_PRODUC_EMPLEADO_ListarAutoresInternosExte"& _ 
            "rnos", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EU_EMP_PRODUC_EMPLEADO_ListarAutoresInternosExternos(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("EU_EMP_PRODUC_EMPLEADO_ListarAutoresInternosExternos", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EU_EMP_PRODUC_EMPLEADO_ListarAutoresInternosExternosAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String)
            Me.EU_EMP_PRODUC_EMPLEADO_ListarAutoresInternosExternosAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EU_EMP_PRODUC_EMPLEADO_ListarAutoresInternosExternosAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String, ByVal userState As Object)
            If (Me.EU_EMP_PRODUC_EMPLEADO_ListarAutoresInternosExternosOperationCompleted Is Nothing) Then
                Me.EU_EMP_PRODUC_EMPLEADO_ListarAutoresInternosExternosOperationCompleted = AddressOf Me.OnEU_EMP_PRODUC_EMPLEADO_ListarAutoresInternosExternosOperationCompleted
            End If
            Me.InvokeAsync("EU_EMP_PRODUC_EMPLEADO_ListarAutoresInternosExternos", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden}, Me.EU_EMP_PRODUC_EMPLEADO_ListarAutoresInternosExternosOperationCompleted, userState)
        End Sub
        
        Private Sub OnEU_EMP_PRODUC_EMPLEADO_ListarAutoresInternosExternosOperationCompleted(ByVal arg As Object)
            If (Not (Me.EU_EMP_PRODUC_EMPLEADO_ListarAutoresInternosExternosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EU_EMP_PRODUC_EMPLEADO_ListarAutoresInternosExternosCompleted(Me, New EU_EMP_PRODUC_EMPLEADO_ListarAutoresInternosExternosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/EmpProducciones_ListarRegistros", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EmpProducciones_ListarRegistros(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("EmpProducciones_ListarRegistros", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EmpProducciones_ListarRegistrosAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String)
            Me.EmpProducciones_ListarRegistrosAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmpProducciones_ListarRegistrosAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String, ByVal userState As Object)
            If (Me.EmpProducciones_ListarRegistrosOperationCompleted Is Nothing) Then
                Me.EmpProducciones_ListarRegistrosOperationCompleted = AddressOf Me.OnEmpProducciones_ListarRegistrosOperationCompleted
            End If
            Me.InvokeAsync("EmpProducciones_ListarRegistros", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden}, Me.EmpProducciones_ListarRegistrosOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmpProducciones_ListarRegistrosOperationCompleted(ByVal arg As Object)
            If (Not (Me.EmpProducciones_ListarRegistrosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EmpProducciones_ListarRegistrosCompleted(Me, New EmpProducciones_ListarRegistrosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/EmpProducciones_ListarRegistrosLista", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EmpProducciones_ListarRegistrosLista(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("EmpProducciones_ListarRegistrosLista", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EmpProducciones_ListarRegistrosListaAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String)
            Me.EmpProducciones_ListarRegistrosListaAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmpProducciones_ListarRegistrosListaAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String, ByVal userState As Object)
            If (Me.EmpProducciones_ListarRegistrosListaOperationCompleted Is Nothing) Then
                Me.EmpProducciones_ListarRegistrosListaOperationCompleted = AddressOf Me.OnEmpProducciones_ListarRegistrosListaOperationCompleted
            End If
            Me.InvokeAsync("EmpProducciones_ListarRegistrosLista", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden}, Me.EmpProducciones_ListarRegistrosListaOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmpProducciones_ListarRegistrosListaOperationCompleted(ByVal arg As Object)
            If (Not (Me.EmpProducciones_ListarRegistrosListaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EmpProducciones_ListarRegistrosListaCompleted(Me, New EmpProducciones_ListarRegistrosListaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/EmpProducciones_ObtenerRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EmpProducciones_ObtenerRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String) As EntEmp_Producciones
            Dim results() As Object = Me.Invoke("EmpProducciones_ObtenerRegistro", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion})
            Return CType(results(0),EntEmp_Producciones)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EmpProducciones_ObtenerRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String)
            Me.EmpProducciones_ObtenerRegistroAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmpProducciones_ObtenerRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal userState As Object)
            If (Me.EmpProducciones_ObtenerRegistroOperationCompleted Is Nothing) Then
                Me.EmpProducciones_ObtenerRegistroOperationCompleted = AddressOf Me.OnEmpProducciones_ObtenerRegistroOperationCompleted
            End If
            Me.InvokeAsync("EmpProducciones_ObtenerRegistro", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion}, Me.EmpProducciones_ObtenerRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmpProducciones_ObtenerRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.EmpProducciones_ObtenerRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EmpProducciones_ObtenerRegistroCompleted(Me, New EmpProducciones_ObtenerRegistroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/EmpProducciones_InsertarRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EmpProducciones_InsertarRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EmpProducciones As EntEmp_Producciones) As Integer
            Dim results() As Object = Me.Invoke("EmpProducciones_InsertarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_EmpProducciones})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EmpProducciones_InsertarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EmpProducciones As EntEmp_Producciones)
            Me.EmpProducciones_InsertarRegistroAsync(pvc_Usuario, pvc_Clave, pvo_EmpProducciones, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmpProducciones_InsertarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EmpProducciones As EntEmp_Producciones, ByVal userState As Object)
            If (Me.EmpProducciones_InsertarRegistroOperationCompleted Is Nothing) Then
                Me.EmpProducciones_InsertarRegistroOperationCompleted = AddressOf Me.OnEmpProducciones_InsertarRegistroOperationCompleted
            End If
            Me.InvokeAsync("EmpProducciones_InsertarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_EmpProducciones}, Me.EmpProducciones_InsertarRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmpProducciones_InsertarRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.EmpProducciones_InsertarRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EmpProducciones_InsertarRegistroCompleted(Me, New EmpProducciones_InsertarRegistroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/EmpProducciones_BorrarRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub EmpProducciones_BorrarRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EmpProducciones As EntEmp_Producciones)
            Me.Invoke("EmpProducciones_BorrarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_EmpProducciones})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmpProducciones_BorrarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EmpProducciones As EntEmp_Producciones)
            Me.EmpProducciones_BorrarRegistroAsync(pvc_Usuario, pvc_Clave, pvo_EmpProducciones, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmpProducciones_BorrarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EmpProducciones As EntEmp_Producciones, ByVal userState As Object)
            If (Me.EmpProducciones_BorrarRegistroOperationCompleted Is Nothing) Then
                Me.EmpProducciones_BorrarRegistroOperationCompleted = AddressOf Me.OnEmpProducciones_BorrarRegistroOperationCompleted
            End If
            Me.InvokeAsync("EmpProducciones_BorrarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_EmpProducciones}, Me.EmpProducciones_BorrarRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmpProducciones_BorrarRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.EmpProducciones_BorrarRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EmpProducciones_BorrarRegistroCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/EmpProducciones_ModificarRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub EmpProducciones_ModificarRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EmpProducciones As EntEmp_Producciones)
            Me.Invoke("EmpProducciones_ModificarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_EmpProducciones})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmpProducciones_ModificarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EmpProducciones As EntEmp_Producciones)
            Me.EmpProducciones_ModificarRegistroAsync(pvc_Usuario, pvc_Clave, pvo_EmpProducciones, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmpProducciones_ModificarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EmpProducciones As EntEmp_Producciones, ByVal userState As Object)
            If (Me.EmpProducciones_ModificarRegistroOperationCompleted Is Nothing) Then
                Me.EmpProducciones_ModificarRegistroOperationCompleted = AddressOf Me.OnEmpProducciones_ModificarRegistroOperationCompleted
            End If
            Me.InvokeAsync("EmpProducciones_ModificarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_EmpProducciones}, Me.EmpProducciones_ModificarRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmpProducciones_ModificarRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.EmpProducciones_ModificarRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EmpProducciones_ModificarRegistroCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/EmpProducciones_ListarRegistrosCantidad", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EmpProducciones_ListarRegistrosCantidad(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("EmpProducciones_ListarRegistrosCantidad", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EmpProducciones_ListarRegistrosCantidadAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String)
            Me.EmpProducciones_ListarRegistrosCantidadAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmpProducciones_ListarRegistrosCantidadAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal userState As Object)
            If (Me.EmpProducciones_ListarRegistrosCantidadOperationCompleted Is Nothing) Then
                Me.EmpProducciones_ListarRegistrosCantidadOperationCompleted = AddressOf Me.OnEmpProducciones_ListarRegistrosCantidadOperationCompleted
            End If
            Me.InvokeAsync("EmpProducciones_ListarRegistrosCantidad", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion}, Me.EmpProducciones_ListarRegistrosCantidadOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmpProducciones_ListarRegistrosCantidadOperationCompleted(ByVal arg As Object)
            If (Not (Me.EmpProducciones_ListarRegistrosCantidadCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EmpProducciones_ListarRegistrosCantidadCompleted(Me, New EmpProducciones_ListarRegistrosCantidadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/EmpProducciones_Rpt_Curriculo", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EmpProducciones_Rpt_Curriculo(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("EmpProducciones_Rpt_Curriculo", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EmpProducciones_Rpt_CurriculoAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String)
            Me.EmpProducciones_Rpt_CurriculoAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmpProducciones_Rpt_CurriculoAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal userState As Object)
            If (Me.EmpProducciones_Rpt_CurriculoOperationCompleted Is Nothing) Then
                Me.EmpProducciones_Rpt_CurriculoOperationCompleted = AddressOf Me.OnEmpProducciones_Rpt_CurriculoOperationCompleted
            End If
            Me.InvokeAsync("EmpProducciones_Rpt_Curriculo", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion}, Me.EmpProducciones_Rpt_CurriculoOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmpProducciones_Rpt_CurriculoOperationCompleted(ByVal arg As Object)
            If (Not (Me.EmpProducciones_Rpt_CurriculoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EmpProducciones_Rpt_CurriculoCompleted(Me, New EmpProducciones_Rpt_CurriculoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/EU_AUTOR_EXTERNO_InsertarRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EU_AUTOR_EXTERNO_InsertarRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EntAutor_Externo As EntAutor_Externo) As Integer
            Dim results() As Object = Me.Invoke("EU_AUTOR_EXTERNO_InsertarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_EntAutor_Externo})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EU_AUTOR_EXTERNO_InsertarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EntAutor_Externo As EntAutor_Externo)
            Me.EU_AUTOR_EXTERNO_InsertarRegistroAsync(pvc_Usuario, pvc_Clave, pvo_EntAutor_Externo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EU_AUTOR_EXTERNO_InsertarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EntAutor_Externo As EntAutor_Externo, ByVal userState As Object)
            If (Me.EU_AUTOR_EXTERNO_InsertarRegistroOperationCompleted Is Nothing) Then
                Me.EU_AUTOR_EXTERNO_InsertarRegistroOperationCompleted = AddressOf Me.OnEU_AUTOR_EXTERNO_InsertarRegistroOperationCompleted
            End If
            Me.InvokeAsync("EU_AUTOR_EXTERNO_InsertarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_EntAutor_Externo}, Me.EU_AUTOR_EXTERNO_InsertarRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnEU_AUTOR_EXTERNO_InsertarRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.EU_AUTOR_EXTERNO_InsertarRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EU_AUTOR_EXTERNO_InsertarRegistroCompleted(Me, New EU_AUTOR_EXTERNO_InsertarRegistroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/EU_AUTOR_EXTERNO_BorrarRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EU_AUTOR_EXTERNO_BorrarRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Autor_Externo As EntAutor_Externo) As Integer
            Dim results() As Object = Me.Invoke("EU_AUTOR_EXTERNO_BorrarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_Autor_Externo})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EU_AUTOR_EXTERNO_BorrarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Autor_Externo As EntAutor_Externo)
            Me.EU_AUTOR_EXTERNO_BorrarRegistroAsync(pvc_Usuario, pvc_Clave, pvo_Autor_Externo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EU_AUTOR_EXTERNO_BorrarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Autor_Externo As EntAutor_Externo, ByVal userState As Object)
            If (Me.EU_AUTOR_EXTERNO_BorrarRegistroOperationCompleted Is Nothing) Then
                Me.EU_AUTOR_EXTERNO_BorrarRegistroOperationCompleted = AddressOf Me.OnEU_AUTOR_EXTERNO_BorrarRegistroOperationCompleted
            End If
            Me.InvokeAsync("EU_AUTOR_EXTERNO_BorrarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_Autor_Externo}, Me.EU_AUTOR_EXTERNO_BorrarRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnEU_AUTOR_EXTERNO_BorrarRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.EU_AUTOR_EXTERNO_BorrarRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EU_AUTOR_EXTERNO_BorrarRegistroCompleted(Me, New EU_AUTOR_EXTERNO_BorrarRegistroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/EU_AUTOR_EXTERNO_ModificarRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EU_AUTOR_EXTERNO_ModificarRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Autor_Externo As EntAutor_Externo) As Integer
            Dim results() As Object = Me.Invoke("EU_AUTOR_EXTERNO_ModificarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_Autor_Externo})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EU_AUTOR_EXTERNO_ModificarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Autor_Externo As EntAutor_Externo)
            Me.EU_AUTOR_EXTERNO_ModificarRegistroAsync(pvc_Usuario, pvc_Clave, pvo_Autor_Externo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EU_AUTOR_EXTERNO_ModificarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Autor_Externo As EntAutor_Externo, ByVal userState As Object)
            If (Me.EU_AUTOR_EXTERNO_ModificarRegistroOperationCompleted Is Nothing) Then
                Me.EU_AUTOR_EXTERNO_ModificarRegistroOperationCompleted = AddressOf Me.OnEU_AUTOR_EXTERNO_ModificarRegistroOperationCompleted
            End If
            Me.InvokeAsync("EU_AUTOR_EXTERNO_ModificarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_Autor_Externo}, Me.EU_AUTOR_EXTERNO_ModificarRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnEU_AUTOR_EXTERNO_ModificarRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.EU_AUTOR_EXTERNO_ModificarRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EU_AUTOR_EXTERNO_ModificarRegistroCompleted(Me, New EU_AUTOR_EXTERNO_ModificarRegistroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/EU_AUTOR_EXTERNO_ListarRegistros", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EU_AUTOR_EXTERNO_ListarRegistros(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("EU_AUTOR_EXTERNO_ListarRegistros", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EU_AUTOR_EXTERNO_ListarRegistrosAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String)
            Me.EU_AUTOR_EXTERNO_ListarRegistrosAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EU_AUTOR_EXTERNO_ListarRegistrosAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String, ByVal userState As Object)
            If (Me.EU_AUTOR_EXTERNO_ListarRegistrosOperationCompleted Is Nothing) Then
                Me.EU_AUTOR_EXTERNO_ListarRegistrosOperationCompleted = AddressOf Me.OnEU_AUTOR_EXTERNO_ListarRegistrosOperationCompleted
            End If
            Me.InvokeAsync("EU_AUTOR_EXTERNO_ListarRegistros", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden}, Me.EU_AUTOR_EXTERNO_ListarRegistrosOperationCompleted, userState)
        End Sub
        
        Private Sub OnEU_AUTOR_EXTERNO_ListarRegistrosOperationCompleted(ByVal arg As Object)
            If (Not (Me.EU_AUTOR_EXTERNO_ListarRegistrosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EU_AUTOR_EXTERNO_ListarRegistrosCompleted(Me, New EU_AUTOR_EXTERNO_ListarRegistrosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/EU_AUTOR_EXTERNO_ListarRegistrosLista", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EU_AUTOR_EXTERNO_ListarRegistrosLista(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("EU_AUTOR_EXTERNO_ListarRegistrosLista", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EU_AUTOR_EXTERNO_ListarRegistrosListaAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String)
            Me.EU_AUTOR_EXTERNO_ListarRegistrosListaAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EU_AUTOR_EXTERNO_ListarRegistrosListaAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String, ByVal userState As Object)
            If (Me.EU_AUTOR_EXTERNO_ListarRegistrosListaOperationCompleted Is Nothing) Then
                Me.EU_AUTOR_EXTERNO_ListarRegistrosListaOperationCompleted = AddressOf Me.OnEU_AUTOR_EXTERNO_ListarRegistrosListaOperationCompleted
            End If
            Me.InvokeAsync("EU_AUTOR_EXTERNO_ListarRegistrosLista", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden}, Me.EU_AUTOR_EXTERNO_ListarRegistrosListaOperationCompleted, userState)
        End Sub
        
        Private Sub OnEU_AUTOR_EXTERNO_ListarRegistrosListaOperationCompleted(ByVal arg As Object)
            If (Not (Me.EU_AUTOR_EXTERNO_ListarRegistrosListaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EU_AUTOR_EXTERNO_ListarRegistrosListaCompleted(Me, New EU_AUTOR_EXTERNO_ListarRegistrosListaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/EU_AUTOR_EXTERNO_ObtenerRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EU_AUTOR_EXTERNO_ObtenerRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String) As EntAutor_Externo
            Dim results() As Object = Me.Invoke("EU_AUTOR_EXTERNO_ObtenerRegistro", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion})
            Return CType(results(0),EntAutor_Externo)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EU_AUTOR_EXTERNO_ObtenerRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String)
            Me.EU_AUTOR_EXTERNO_ObtenerRegistroAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EU_AUTOR_EXTERNO_ObtenerRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal userState As Object)
            If (Me.EU_AUTOR_EXTERNO_ObtenerRegistroOperationCompleted Is Nothing) Then
                Me.EU_AUTOR_EXTERNO_ObtenerRegistroOperationCompleted = AddressOf Me.OnEU_AUTOR_EXTERNO_ObtenerRegistroOperationCompleted
            End If
            Me.InvokeAsync("EU_AUTOR_EXTERNO_ObtenerRegistro", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion}, Me.EU_AUTOR_EXTERNO_ObtenerRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnEU_AUTOR_EXTERNO_ObtenerRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.EU_AUTOR_EXTERNO_ObtenerRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EU_AUTOR_EXTERNO_ObtenerRegistroCompleted(Me, New EU_AUTOR_EXTERNO_ObtenerRegistroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/EU_EMP_PRODUC_EMPLEADO_InsertarRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EU_EMP_PRODUC_EMPLEADO_InsertarRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EntEmp_Produccion_Empleado As EntEmp_Produccion_Empleado) As Integer
            Dim results() As Object = Me.Invoke("EU_EMP_PRODUC_EMPLEADO_InsertarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_EntEmp_Produccion_Empleado})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EU_EMP_PRODUC_EMPLEADO_InsertarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EntEmp_Produccion_Empleado As EntEmp_Produccion_Empleado)
            Me.EU_EMP_PRODUC_EMPLEADO_InsertarRegistroAsync(pvc_Usuario, pvc_Clave, pvo_EntEmp_Produccion_Empleado, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EU_EMP_PRODUC_EMPLEADO_InsertarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EntEmp_Produccion_Empleado As EntEmp_Produccion_Empleado, ByVal userState As Object)
            If (Me.EU_EMP_PRODUC_EMPLEADO_InsertarRegistroOperationCompleted Is Nothing) Then
                Me.EU_EMP_PRODUC_EMPLEADO_InsertarRegistroOperationCompleted = AddressOf Me.OnEU_EMP_PRODUC_EMPLEADO_InsertarRegistroOperationCompleted
            End If
            Me.InvokeAsync("EU_EMP_PRODUC_EMPLEADO_InsertarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_EntEmp_Produccion_Empleado}, Me.EU_EMP_PRODUC_EMPLEADO_InsertarRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnEU_EMP_PRODUC_EMPLEADO_InsertarRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.EU_EMP_PRODUC_EMPLEADO_InsertarRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EU_EMP_PRODUC_EMPLEADO_InsertarRegistroCompleted(Me, New EU_EMP_PRODUC_EMPLEADO_InsertarRegistroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/EU_EMP_PRODUC_EMPLEADO_BorrarRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EU_EMP_PRODUC_EMPLEADO_BorrarRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EntEmp_Produccion_Empleado As EntEmp_Produccion_Empleado) As Integer
            Dim results() As Object = Me.Invoke("EU_EMP_PRODUC_EMPLEADO_BorrarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_EntEmp_Produccion_Empleado})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EU_EMP_PRODUC_EMPLEADO_BorrarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EntEmp_Produccion_Empleado As EntEmp_Produccion_Empleado)
            Me.EU_EMP_PRODUC_EMPLEADO_BorrarRegistroAsync(pvc_Usuario, pvc_Clave, pvo_EntEmp_Produccion_Empleado, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EU_EMP_PRODUC_EMPLEADO_BorrarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EntEmp_Produccion_Empleado As EntEmp_Produccion_Empleado, ByVal userState As Object)
            If (Me.EU_EMP_PRODUC_EMPLEADO_BorrarRegistroOperationCompleted Is Nothing) Then
                Me.EU_EMP_PRODUC_EMPLEADO_BorrarRegistroOperationCompleted = AddressOf Me.OnEU_EMP_PRODUC_EMPLEADO_BorrarRegistroOperationCompleted
            End If
            Me.InvokeAsync("EU_EMP_PRODUC_EMPLEADO_BorrarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_EntEmp_Produccion_Empleado}, Me.EU_EMP_PRODUC_EMPLEADO_BorrarRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnEU_EMP_PRODUC_EMPLEADO_BorrarRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.EU_EMP_PRODUC_EMPLEADO_BorrarRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EU_EMP_PRODUC_EMPLEADO_BorrarRegistroCompleted(Me, New EU_EMP_PRODUC_EMPLEADO_BorrarRegistroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/EU_EMP_PRODUC_EMPLEADO_ModificarRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EU_EMP_PRODUC_EMPLEADO_ModificarRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EntEmp_Produccion_Empleado As EntEmp_Produccion_Empleado) As Integer
            Dim results() As Object = Me.Invoke("EU_EMP_PRODUC_EMPLEADO_ModificarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_EntEmp_Produccion_Empleado})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EU_EMP_PRODUC_EMPLEADO_ModificarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EntEmp_Produccion_Empleado As EntEmp_Produccion_Empleado)
            Me.EU_EMP_PRODUC_EMPLEADO_ModificarRegistroAsync(pvc_Usuario, pvc_Clave, pvo_EntEmp_Produccion_Empleado, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EU_EMP_PRODUC_EMPLEADO_ModificarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EntEmp_Produccion_Empleado As EntEmp_Produccion_Empleado, ByVal userState As Object)
            If (Me.EU_EMP_PRODUC_EMPLEADO_ModificarRegistroOperationCompleted Is Nothing) Then
                Me.EU_EMP_PRODUC_EMPLEADO_ModificarRegistroOperationCompleted = AddressOf Me.OnEU_EMP_PRODUC_EMPLEADO_ModificarRegistroOperationCompleted
            End If
            Me.InvokeAsync("EU_EMP_PRODUC_EMPLEADO_ModificarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_EntEmp_Produccion_Empleado}, Me.EU_EMP_PRODUC_EMPLEADO_ModificarRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnEU_EMP_PRODUC_EMPLEADO_ModificarRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.EU_EMP_PRODUC_EMPLEADO_ModificarRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EU_EMP_PRODUC_EMPLEADO_ModificarRegistroCompleted(Me, New EU_EMP_PRODUC_EMPLEADO_ModificarRegistroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/EU_EMP_PRODUC_EMPLEADO_ListarRegistros", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EU_EMP_PRODUC_EMPLEADO_ListarRegistros(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("EU_EMP_PRODUC_EMPLEADO_ListarRegistros", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EU_EMP_PRODUC_EMPLEADO_ListarRegistrosAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String)
            Me.EU_EMP_PRODUC_EMPLEADO_ListarRegistrosAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EU_EMP_PRODUC_EMPLEADO_ListarRegistrosAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String, ByVal userState As Object)
            If (Me.EU_EMP_PRODUC_EMPLEADO_ListarRegistrosOperationCompleted Is Nothing) Then
                Me.EU_EMP_PRODUC_EMPLEADO_ListarRegistrosOperationCompleted = AddressOf Me.OnEU_EMP_PRODUC_EMPLEADO_ListarRegistrosOperationCompleted
            End If
            Me.InvokeAsync("EU_EMP_PRODUC_EMPLEADO_ListarRegistros", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden}, Me.EU_EMP_PRODUC_EMPLEADO_ListarRegistrosOperationCompleted, userState)
        End Sub
        
        Private Sub OnEU_EMP_PRODUC_EMPLEADO_ListarRegistrosOperationCompleted(ByVal arg As Object)
            If (Not (Me.EU_EMP_PRODUC_EMPLEADO_ListarRegistrosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EU_EMP_PRODUC_EMPLEADO_ListarRegistrosCompleted(Me, New EU_EMP_PRODUC_EMPLEADO_ListarRegistrosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/EU_EMP_PRODUC_EMPLEADO_ListarRegistrosLista", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EU_EMP_PRODUC_EMPLEADO_ListarRegistrosLista(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("EU_EMP_PRODUC_EMPLEADO_ListarRegistrosLista", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EU_EMP_PRODUC_EMPLEADO_ListarRegistrosListaAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String)
            Me.EU_EMP_PRODUC_EMPLEADO_ListarRegistrosListaAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EU_EMP_PRODUC_EMPLEADO_ListarRegistrosListaAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String, ByVal userState As Object)
            If (Me.EU_EMP_PRODUC_EMPLEADO_ListarRegistrosListaOperationCompleted Is Nothing) Then
                Me.EU_EMP_PRODUC_EMPLEADO_ListarRegistrosListaOperationCompleted = AddressOf Me.OnEU_EMP_PRODUC_EMPLEADO_ListarRegistrosListaOperationCompleted
            End If
            Me.InvokeAsync("EU_EMP_PRODUC_EMPLEADO_ListarRegistrosLista", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden}, Me.EU_EMP_PRODUC_EMPLEADO_ListarRegistrosListaOperationCompleted, userState)
        End Sub
        
        Private Sub OnEU_EMP_PRODUC_EMPLEADO_ListarRegistrosListaOperationCompleted(ByVal arg As Object)
            If (Not (Me.EU_EMP_PRODUC_EMPLEADO_ListarRegistrosListaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EU_EMP_PRODUC_EMPLEADO_ListarRegistrosListaCompleted(Me, New EU_EMP_PRODUC_EMPLEADO_ListarRegistrosListaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/EU_EMP_PRODUC_EMPLEADO_ObtenerRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EU_EMP_PRODUC_EMPLEADO_ObtenerRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String) As EntEmp_Produccion_Empleado
            Dim results() As Object = Me.Invoke("EU_EMP_PRODUC_EMPLEADO_ObtenerRegistro", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion})
            Return CType(results(0),EntEmp_Produccion_Empleado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EU_EMP_PRODUC_EMPLEADO_ObtenerRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String)
            Me.EU_EMP_PRODUC_EMPLEADO_ObtenerRegistroAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EU_EMP_PRODUC_EMPLEADO_ObtenerRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal userState As Object)
            If (Me.EU_EMP_PRODUC_EMPLEADO_ObtenerRegistroOperationCompleted Is Nothing) Then
                Me.EU_EMP_PRODUC_EMPLEADO_ObtenerRegistroOperationCompleted = AddressOf Me.OnEU_EMP_PRODUC_EMPLEADO_ObtenerRegistroOperationCompleted
            End If
            Me.InvokeAsync("EU_EMP_PRODUC_EMPLEADO_ObtenerRegistro", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion}, Me.EU_EMP_PRODUC_EMPLEADO_ObtenerRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnEU_EMP_PRODUC_EMPLEADO_ObtenerRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.EU_EMP_PRODUC_EMPLEADO_ObtenerRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EU_EMP_PRODUC_EMPLEADO_ObtenerRegistroCompleted(Me, New EU_EMP_PRODUC_EMPLEADO_ObtenerRegistroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/EU_PRODUC_AUTOR_EXTERNO_InsertarRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EU_PRODUC_AUTOR_EXTERNO_InsertarRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EntProduccionAutorExterno As EntProduccion_Autor_Externo) As Integer
            Dim results() As Object = Me.Invoke("EU_PRODUC_AUTOR_EXTERNO_InsertarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_EntProduccionAutorExterno})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EU_PRODUC_AUTOR_EXTERNO_InsertarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EntProduccionAutorExterno As EntProduccion_Autor_Externo)
            Me.EU_PRODUC_AUTOR_EXTERNO_InsertarRegistroAsync(pvc_Usuario, pvc_Clave, pvo_EntProduccionAutorExterno, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EU_PRODUC_AUTOR_EXTERNO_InsertarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EntProduccionAutorExterno As EntProduccion_Autor_Externo, ByVal userState As Object)
            If (Me.EU_PRODUC_AUTOR_EXTERNO_InsertarRegistroOperationCompleted Is Nothing) Then
                Me.EU_PRODUC_AUTOR_EXTERNO_InsertarRegistroOperationCompleted = AddressOf Me.OnEU_PRODUC_AUTOR_EXTERNO_InsertarRegistroOperationCompleted
            End If
            Me.InvokeAsync("EU_PRODUC_AUTOR_EXTERNO_InsertarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_EntProduccionAutorExterno}, Me.EU_PRODUC_AUTOR_EXTERNO_InsertarRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnEU_PRODUC_AUTOR_EXTERNO_InsertarRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.EU_PRODUC_AUTOR_EXTERNO_InsertarRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EU_PRODUC_AUTOR_EXTERNO_InsertarRegistroCompleted(Me, New EU_PRODUC_AUTOR_EXTERNO_InsertarRegistroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/EU_PRODUC_AUTOR_EXTERNO_BorrarRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EU_PRODUC_AUTOR_EXTERNO_BorrarRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EntProduccionAutorExterno As EntProduccion_Autor_Externo) As Integer
            Dim results() As Object = Me.Invoke("EU_PRODUC_AUTOR_EXTERNO_BorrarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_EntProduccionAutorExterno})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EU_PRODUC_AUTOR_EXTERNO_BorrarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EntProduccionAutorExterno As EntProduccion_Autor_Externo)
            Me.EU_PRODUC_AUTOR_EXTERNO_BorrarRegistroAsync(pvc_Usuario, pvc_Clave, pvo_EntProduccionAutorExterno, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EU_PRODUC_AUTOR_EXTERNO_BorrarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EntProduccionAutorExterno As EntProduccion_Autor_Externo, ByVal userState As Object)
            If (Me.EU_PRODUC_AUTOR_EXTERNO_BorrarRegistroOperationCompleted Is Nothing) Then
                Me.EU_PRODUC_AUTOR_EXTERNO_BorrarRegistroOperationCompleted = AddressOf Me.OnEU_PRODUC_AUTOR_EXTERNO_BorrarRegistroOperationCompleted
            End If
            Me.InvokeAsync("EU_PRODUC_AUTOR_EXTERNO_BorrarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_EntProduccionAutorExterno}, Me.EU_PRODUC_AUTOR_EXTERNO_BorrarRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnEU_PRODUC_AUTOR_EXTERNO_BorrarRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.EU_PRODUC_AUTOR_EXTERNO_BorrarRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EU_PRODUC_AUTOR_EXTERNO_BorrarRegistroCompleted(Me, New EU_PRODUC_AUTOR_EXTERNO_BorrarRegistroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/EU_PRODUC_AUTOR_EXTERNO_ModificarRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EU_PRODUC_AUTOR_EXTERNO_ModificarRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EntProduccionAutorExterno As EntProduccion_Autor_Externo) As Integer
            Dim results() As Object = Me.Invoke("EU_PRODUC_AUTOR_EXTERNO_ModificarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_EntProduccionAutorExterno})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EU_PRODUC_AUTOR_EXTERNO_ModificarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EntProduccionAutorExterno As EntProduccion_Autor_Externo)
            Me.EU_PRODUC_AUTOR_EXTERNO_ModificarRegistroAsync(pvc_Usuario, pvc_Clave, pvo_EntProduccionAutorExterno, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EU_PRODUC_AUTOR_EXTERNO_ModificarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EntProduccionAutorExterno As EntProduccion_Autor_Externo, ByVal userState As Object)
            If (Me.EU_PRODUC_AUTOR_EXTERNO_ModificarRegistroOperationCompleted Is Nothing) Then
                Me.EU_PRODUC_AUTOR_EXTERNO_ModificarRegistroOperationCompleted = AddressOf Me.OnEU_PRODUC_AUTOR_EXTERNO_ModificarRegistroOperationCompleted
            End If
            Me.InvokeAsync("EU_PRODUC_AUTOR_EXTERNO_ModificarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_EntProduccionAutorExterno}, Me.EU_PRODUC_AUTOR_EXTERNO_ModificarRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnEU_PRODUC_AUTOR_EXTERNO_ModificarRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.EU_PRODUC_AUTOR_EXTERNO_ModificarRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EU_PRODUC_AUTOR_EXTERNO_ModificarRegistroCompleted(Me, New EU_PRODUC_AUTOR_EXTERNO_ModificarRegistroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/EU_PRODUC_AUTOR_EXTERNO_ListarRegistros", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EU_PRODUC_AUTOR_EXTERNO_ListarRegistros(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("EU_PRODUC_AUTOR_EXTERNO_ListarRegistros", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EU_PRODUC_AUTOR_EXTERNO_ListarRegistrosAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String)
            Me.EU_PRODUC_AUTOR_EXTERNO_ListarRegistrosAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EU_PRODUC_AUTOR_EXTERNO_ListarRegistrosAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String, ByVal userState As Object)
            If (Me.EU_PRODUC_AUTOR_EXTERNO_ListarRegistrosOperationCompleted Is Nothing) Then
                Me.EU_PRODUC_AUTOR_EXTERNO_ListarRegistrosOperationCompleted = AddressOf Me.OnEU_PRODUC_AUTOR_EXTERNO_ListarRegistrosOperationCompleted
            End If
            Me.InvokeAsync("EU_PRODUC_AUTOR_EXTERNO_ListarRegistros", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden}, Me.EU_PRODUC_AUTOR_EXTERNO_ListarRegistrosOperationCompleted, userState)
        End Sub
        
        Private Sub OnEU_PRODUC_AUTOR_EXTERNO_ListarRegistrosOperationCompleted(ByVal arg As Object)
            If (Not (Me.EU_PRODUC_AUTOR_EXTERNO_ListarRegistrosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EU_PRODUC_AUTOR_EXTERNO_ListarRegistrosCompleted(Me, New EU_PRODUC_AUTOR_EXTERNO_ListarRegistrosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/EU_PRODUC_AUTOR_EXTERNO_ListarRegistrosLista", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EU_PRODUC_AUTOR_EXTERNO_ListarRegistrosLista(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("EU_PRODUC_AUTOR_EXTERNO_ListarRegistrosLista", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EU_PRODUC_AUTOR_EXTERNO_ListarRegistrosListaAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String)
            Me.EU_PRODUC_AUTOR_EXTERNO_ListarRegistrosListaAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EU_PRODUC_AUTOR_EXTERNO_ListarRegistrosListaAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String, ByVal userState As Object)
            If (Me.EU_PRODUC_AUTOR_EXTERNO_ListarRegistrosListaOperationCompleted Is Nothing) Then
                Me.EU_PRODUC_AUTOR_EXTERNO_ListarRegistrosListaOperationCompleted = AddressOf Me.OnEU_PRODUC_AUTOR_EXTERNO_ListarRegistrosListaOperationCompleted
            End If
            Me.InvokeAsync("EU_PRODUC_AUTOR_EXTERNO_ListarRegistrosLista", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden}, Me.EU_PRODUC_AUTOR_EXTERNO_ListarRegistrosListaOperationCompleted, userState)
        End Sub
        
        Private Sub OnEU_PRODUC_AUTOR_EXTERNO_ListarRegistrosListaOperationCompleted(ByVal arg As Object)
            If (Not (Me.EU_PRODUC_AUTOR_EXTERNO_ListarRegistrosListaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EU_PRODUC_AUTOR_EXTERNO_ListarRegistrosListaCompleted(Me, New EU_PRODUC_AUTOR_EXTERNO_ListarRegistrosListaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/EU_PRODUC_AUTOR_EXTERNO_ObtenerRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EU_PRODUC_AUTOR_EXTERNO_ObtenerRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String) As EntProduccion_Autor_Externo
            Dim results() As Object = Me.Invoke("EU_PRODUC_AUTOR_EXTERNO_ObtenerRegistro", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion})
            Return CType(results(0),EntProduccion_Autor_Externo)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EU_PRODUC_AUTOR_EXTERNO_ObtenerRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String)
            Me.EU_PRODUC_AUTOR_EXTERNO_ObtenerRegistroAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EU_PRODUC_AUTOR_EXTERNO_ObtenerRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal userState As Object)
            If (Me.EU_PRODUC_AUTOR_EXTERNO_ObtenerRegistroOperationCompleted Is Nothing) Then
                Me.EU_PRODUC_AUTOR_EXTERNO_ObtenerRegistroOperationCompleted = AddressOf Me.OnEU_PRODUC_AUTOR_EXTERNO_ObtenerRegistroOperationCompleted
            End If
            Me.InvokeAsync("EU_PRODUC_AUTOR_EXTERNO_ObtenerRegistro", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion}, Me.EU_PRODUC_AUTOR_EXTERNO_ObtenerRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnEU_PRODUC_AUTOR_EXTERNO_ObtenerRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.EU_PRODUC_AUTOR_EXTERNO_ObtenerRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EU_PRODUC_AUTOR_EXTERNO_ObtenerRegistroCompleted(Me, New EU_PRODUC_AUTOR_EXTERNO_ObtenerRegistroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/EU_TIPO_VEHICULO_PRODUC_InsertarRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EU_TIPO_VEHICULO_PRODUC_InsertarRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EntTipo_Vehiculo_Produccion As EntTipo_Vehiculo_Produccion) As Integer
            Dim results() As Object = Me.Invoke("EU_TIPO_VEHICULO_PRODUC_InsertarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_EntTipo_Vehiculo_Produccion})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EU_TIPO_VEHICULO_PRODUC_InsertarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EntTipo_Vehiculo_Produccion As EntTipo_Vehiculo_Produccion)
            Me.EU_TIPO_VEHICULO_PRODUC_InsertarRegistroAsync(pvc_Usuario, pvc_Clave, pvo_EntTipo_Vehiculo_Produccion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EU_TIPO_VEHICULO_PRODUC_InsertarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EntTipo_Vehiculo_Produccion As EntTipo_Vehiculo_Produccion, ByVal userState As Object)
            If (Me.EU_TIPO_VEHICULO_PRODUC_InsertarRegistroOperationCompleted Is Nothing) Then
                Me.EU_TIPO_VEHICULO_PRODUC_InsertarRegistroOperationCompleted = AddressOf Me.OnEU_TIPO_VEHICULO_PRODUC_InsertarRegistroOperationCompleted
            End If
            Me.InvokeAsync("EU_TIPO_VEHICULO_PRODUC_InsertarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_EntTipo_Vehiculo_Produccion}, Me.EU_TIPO_VEHICULO_PRODUC_InsertarRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnEU_TIPO_VEHICULO_PRODUC_InsertarRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.EU_TIPO_VEHICULO_PRODUC_InsertarRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EU_TIPO_VEHICULO_PRODUC_InsertarRegistroCompleted(Me, New EU_TIPO_VEHICULO_PRODUC_InsertarRegistroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/EU_TIPO_VEHICULO_PRODUC_BorrarRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EU_TIPO_VEHICULO_PRODUC_BorrarRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EntTipo_Vehiculo_Produccion As EntTipo_Vehiculo_Produccion) As Integer
            Dim results() As Object = Me.Invoke("EU_TIPO_VEHICULO_PRODUC_BorrarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_EntTipo_Vehiculo_Produccion})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EU_TIPO_VEHICULO_PRODUC_BorrarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EntTipo_Vehiculo_Produccion As EntTipo_Vehiculo_Produccion)
            Me.EU_TIPO_VEHICULO_PRODUC_BorrarRegistroAsync(pvc_Usuario, pvc_Clave, pvo_EntTipo_Vehiculo_Produccion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EU_TIPO_VEHICULO_PRODUC_BorrarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EntTipo_Vehiculo_Produccion As EntTipo_Vehiculo_Produccion, ByVal userState As Object)
            If (Me.EU_TIPO_VEHICULO_PRODUC_BorrarRegistroOperationCompleted Is Nothing) Then
                Me.EU_TIPO_VEHICULO_PRODUC_BorrarRegistroOperationCompleted = AddressOf Me.OnEU_TIPO_VEHICULO_PRODUC_BorrarRegistroOperationCompleted
            End If
            Me.InvokeAsync("EU_TIPO_VEHICULO_PRODUC_BorrarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_EntTipo_Vehiculo_Produccion}, Me.EU_TIPO_VEHICULO_PRODUC_BorrarRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnEU_TIPO_VEHICULO_PRODUC_BorrarRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.EU_TIPO_VEHICULO_PRODUC_BorrarRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EU_TIPO_VEHICULO_PRODUC_BorrarRegistroCompleted(Me, New EU_TIPO_VEHICULO_PRODUC_BorrarRegistroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/EU_TIPO_VEHICULO_PRODUC_ModificarRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EU_TIPO_VEHICULO_PRODUC_ModificarRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EntTipo_Vehiculo_Produccion As EntTipo_Vehiculo_Produccion) As Integer
            Dim results() As Object = Me.Invoke("EU_TIPO_VEHICULO_PRODUC_ModificarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_EntTipo_Vehiculo_Produccion})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EU_TIPO_VEHICULO_PRODUC_ModificarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EntTipo_Vehiculo_Produccion As EntTipo_Vehiculo_Produccion)
            Me.EU_TIPO_VEHICULO_PRODUC_ModificarRegistroAsync(pvc_Usuario, pvc_Clave, pvo_EntTipo_Vehiculo_Produccion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EU_TIPO_VEHICULO_PRODUC_ModificarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EntTipo_Vehiculo_Produccion As EntTipo_Vehiculo_Produccion, ByVal userState As Object)
            If (Me.EU_TIPO_VEHICULO_PRODUC_ModificarRegistroOperationCompleted Is Nothing) Then
                Me.EU_TIPO_VEHICULO_PRODUC_ModificarRegistroOperationCompleted = AddressOf Me.OnEU_TIPO_VEHICULO_PRODUC_ModificarRegistroOperationCompleted
            End If
            Me.InvokeAsync("EU_TIPO_VEHICULO_PRODUC_ModificarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_EntTipo_Vehiculo_Produccion}, Me.EU_TIPO_VEHICULO_PRODUC_ModificarRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnEU_TIPO_VEHICULO_PRODUC_ModificarRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.EU_TIPO_VEHICULO_PRODUC_ModificarRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EU_TIPO_VEHICULO_PRODUC_ModificarRegistroCompleted(Me, New EU_TIPO_VEHICULO_PRODUC_ModificarRegistroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/EU_TIPO_VEHICULO_PRODUC_ListarRegistros", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EU_TIPO_VEHICULO_PRODUC_ListarRegistros(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("EU_TIPO_VEHICULO_PRODUC_ListarRegistros", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EU_TIPO_VEHICULO_PRODUC_ListarRegistrosAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String)
            Me.EU_TIPO_VEHICULO_PRODUC_ListarRegistrosAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EU_TIPO_VEHICULO_PRODUC_ListarRegistrosAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String, ByVal userState As Object)
            If (Me.EU_TIPO_VEHICULO_PRODUC_ListarRegistrosOperationCompleted Is Nothing) Then
                Me.EU_TIPO_VEHICULO_PRODUC_ListarRegistrosOperationCompleted = AddressOf Me.OnEU_TIPO_VEHICULO_PRODUC_ListarRegistrosOperationCompleted
            End If
            Me.InvokeAsync("EU_TIPO_VEHICULO_PRODUC_ListarRegistros", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden}, Me.EU_TIPO_VEHICULO_PRODUC_ListarRegistrosOperationCompleted, userState)
        End Sub
        
        Private Sub OnEU_TIPO_VEHICULO_PRODUC_ListarRegistrosOperationCompleted(ByVal arg As Object)
            If (Not (Me.EU_TIPO_VEHICULO_PRODUC_ListarRegistrosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EU_TIPO_VEHICULO_PRODUC_ListarRegistrosCompleted(Me, New EU_TIPO_VEHICULO_PRODUC_ListarRegistrosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/EU_TIPO_VEHICULO_PRODUC_ListarRegistrosLista", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EU_TIPO_VEHICULO_PRODUC_ListarRegistrosLista(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("EU_TIPO_VEHICULO_PRODUC_ListarRegistrosLista", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EU_TIPO_VEHICULO_PRODUC_ListarRegistrosListaAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String)
            Me.EU_TIPO_VEHICULO_PRODUC_ListarRegistrosListaAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EU_TIPO_VEHICULO_PRODUC_ListarRegistrosListaAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String, ByVal userState As Object)
            If (Me.EU_TIPO_VEHICULO_PRODUC_ListarRegistrosListaOperationCompleted Is Nothing) Then
                Me.EU_TIPO_VEHICULO_PRODUC_ListarRegistrosListaOperationCompleted = AddressOf Me.OnEU_TIPO_VEHICULO_PRODUC_ListarRegistrosListaOperationCompleted
            End If
            Me.InvokeAsync("EU_TIPO_VEHICULO_PRODUC_ListarRegistrosLista", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden}, Me.EU_TIPO_VEHICULO_PRODUC_ListarRegistrosListaOperationCompleted, userState)
        End Sub
        
        Private Sub OnEU_TIPO_VEHICULO_PRODUC_ListarRegistrosListaOperationCompleted(ByVal arg As Object)
            If (Not (Me.EU_TIPO_VEHICULO_PRODUC_ListarRegistrosListaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EU_TIPO_VEHICULO_PRODUC_ListarRegistrosListaCompleted(Me, New EU_TIPO_VEHICULO_PRODUC_ListarRegistrosListaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/EU_TIPO_VEHICULO_PRODUC_ObtenerRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EU_TIPO_VEHICULO_PRODUC_ObtenerRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String) As EntTipo_Vehiculo_Produccion
            Dim results() As Object = Me.Invoke("EU_TIPO_VEHICULO_PRODUC_ObtenerRegistro", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion})
            Return CType(results(0),EntTipo_Vehiculo_Produccion)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EU_TIPO_VEHICULO_PRODUC_ObtenerRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String)
            Me.EU_TIPO_VEHICULO_PRODUC_ObtenerRegistroAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EU_TIPO_VEHICULO_PRODUC_ObtenerRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal userState As Object)
            If (Me.EU_TIPO_VEHICULO_PRODUC_ObtenerRegistroOperationCompleted Is Nothing) Then
                Me.EU_TIPO_VEHICULO_PRODUC_ObtenerRegistroOperationCompleted = AddressOf Me.OnEU_TIPO_VEHICULO_PRODUC_ObtenerRegistroOperationCompleted
            End If
            Me.InvokeAsync("EU_TIPO_VEHICULO_PRODUC_ObtenerRegistro", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion}, Me.EU_TIPO_VEHICULO_PRODUC_ObtenerRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnEU_TIPO_VEHICULO_PRODUC_ObtenerRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.EU_TIPO_VEHICULO_PRODUC_ObtenerRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EU_TIPO_VEHICULO_PRODUC_ObtenerRegistroCompleted(Me, New EU_TIPO_VEHICULO_PRODUC_ObtenerRegistroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/Reconocimientos_ListarRegistros", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Reconocimientos_ListarRegistros(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Reconocimientos_ListarRegistros", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Reconocimientos_ListarRegistrosAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String)
            Me.Reconocimientos_ListarRegistrosAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Reconocimientos_ListarRegistrosAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String, ByVal userState As Object)
            If (Me.Reconocimientos_ListarRegistrosOperationCompleted Is Nothing) Then
                Me.Reconocimientos_ListarRegistrosOperationCompleted = AddressOf Me.OnReconocimientos_ListarRegistrosOperationCompleted
            End If
            Me.InvokeAsync("Reconocimientos_ListarRegistros", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden}, Me.Reconocimientos_ListarRegistrosOperationCompleted, userState)
        End Sub
        
        Private Sub OnReconocimientos_ListarRegistrosOperationCompleted(ByVal arg As Object)
            If (Not (Me.Reconocimientos_ListarRegistrosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Reconocimientos_ListarRegistrosCompleted(Me, New Reconocimientos_ListarRegistrosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/Reconocimientos_ListarRegistrosLista", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Reconocimientos_ListarRegistrosLista(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Reconocimientos_ListarRegistrosLista", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Reconocimientos_ListarRegistrosListaAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String)
            Me.Reconocimientos_ListarRegistrosListaAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Reconocimientos_ListarRegistrosListaAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String, ByVal userState As Object)
            If (Me.Reconocimientos_ListarRegistrosListaOperationCompleted Is Nothing) Then
                Me.Reconocimientos_ListarRegistrosListaOperationCompleted = AddressOf Me.OnReconocimientos_ListarRegistrosListaOperationCompleted
            End If
            Me.InvokeAsync("Reconocimientos_ListarRegistrosLista", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden}, Me.Reconocimientos_ListarRegistrosListaOperationCompleted, userState)
        End Sub
        
        Private Sub OnReconocimientos_ListarRegistrosListaOperationCompleted(ByVal arg As Object)
            If (Not (Me.Reconocimientos_ListarRegistrosListaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Reconocimientos_ListarRegistrosListaCompleted(Me, New Reconocimientos_ListarRegistrosListaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/Reconocimientos_ObtenerRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Reconocimientos_ObtenerRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String) As EntReconocimiento
            Dim results() As Object = Me.Invoke("Reconocimientos_ObtenerRegistro", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion})
            Return CType(results(0),EntReconocimiento)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Reconocimientos_ObtenerRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String)
            Me.Reconocimientos_ObtenerRegistroAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Reconocimientos_ObtenerRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal userState As Object)
            If (Me.Reconocimientos_ObtenerRegistroOperationCompleted Is Nothing) Then
                Me.Reconocimientos_ObtenerRegistroOperationCompleted = AddressOf Me.OnReconocimientos_ObtenerRegistroOperationCompleted
            End If
            Me.InvokeAsync("Reconocimientos_ObtenerRegistro", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion}, Me.Reconocimientos_ObtenerRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnReconocimientos_ObtenerRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.Reconocimientos_ObtenerRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Reconocimientos_ObtenerRegistroCompleted(Me, New Reconocimientos_ObtenerRegistroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/Reconocimientos_InsertarRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub Reconocimientos_InsertarRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Reconocimientos As EntReconocimiento)
            Me.Invoke("Reconocimientos_InsertarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_Reconocimientos})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Reconocimientos_InsertarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Reconocimientos As EntReconocimiento)
            Me.Reconocimientos_InsertarRegistroAsync(pvc_Usuario, pvc_Clave, pvo_Reconocimientos, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Reconocimientos_InsertarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Reconocimientos As EntReconocimiento, ByVal userState As Object)
            If (Me.Reconocimientos_InsertarRegistroOperationCompleted Is Nothing) Then
                Me.Reconocimientos_InsertarRegistroOperationCompleted = AddressOf Me.OnReconocimientos_InsertarRegistroOperationCompleted
            End If
            Me.InvokeAsync("Reconocimientos_InsertarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_Reconocimientos}, Me.Reconocimientos_InsertarRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnReconocimientos_InsertarRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.Reconocimientos_InsertarRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Reconocimientos_InsertarRegistroCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/Reconocimientos_BorrarRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub Reconocimientos_BorrarRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Reconocimientos As EntReconocimiento)
            Me.Invoke("Reconocimientos_BorrarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_Reconocimientos})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Reconocimientos_BorrarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Reconocimientos As EntReconocimiento)
            Me.Reconocimientos_BorrarRegistroAsync(pvc_Usuario, pvc_Clave, pvo_Reconocimientos, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Reconocimientos_BorrarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Reconocimientos As EntReconocimiento, ByVal userState As Object)
            If (Me.Reconocimientos_BorrarRegistroOperationCompleted Is Nothing) Then
                Me.Reconocimientos_BorrarRegistroOperationCompleted = AddressOf Me.OnReconocimientos_BorrarRegistroOperationCompleted
            End If
            Me.InvokeAsync("Reconocimientos_BorrarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_Reconocimientos}, Me.Reconocimientos_BorrarRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnReconocimientos_BorrarRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.Reconocimientos_BorrarRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Reconocimientos_BorrarRegistroCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/Reconocimientos_ModificarRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub Reconocimientos_ModificarRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Reconocimientos As EntReconocimiento)
            Me.Invoke("Reconocimientos_ModificarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_Reconocimientos})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Reconocimientos_ModificarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Reconocimientos As EntReconocimiento)
            Me.Reconocimientos_ModificarRegistroAsync(pvc_Usuario, pvc_Clave, pvo_Reconocimientos, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Reconocimientos_ModificarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Reconocimientos As EntReconocimiento, ByVal userState As Object)
            If (Me.Reconocimientos_ModificarRegistroOperationCompleted Is Nothing) Then
                Me.Reconocimientos_ModificarRegistroOperationCompleted = AddressOf Me.OnReconocimientos_ModificarRegistroOperationCompleted
            End If
            Me.InvokeAsync("Reconocimientos_ModificarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_Reconocimientos}, Me.Reconocimientos_ModificarRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnReconocimientos_ModificarRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.Reconocimientos_ModificarRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Reconocimientos_ModificarRegistroCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/EmpCursos_BorrarRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub EmpCursos_BorrarRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EmpCursos As EntEmp_Cursos)
            Me.Invoke("EmpCursos_BorrarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_EmpCursos})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmpCursos_BorrarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EmpCursos As EntEmp_Cursos)
            Me.EmpCursos_BorrarRegistroAsync(pvc_Usuario, pvc_Clave, pvo_EmpCursos, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmpCursos_BorrarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EmpCursos As EntEmp_Cursos, ByVal userState As Object)
            If (Me.EmpCursos_BorrarRegistroOperationCompleted Is Nothing) Then
                Me.EmpCursos_BorrarRegistroOperationCompleted = AddressOf Me.OnEmpCursos_BorrarRegistroOperationCompleted
            End If
            Me.InvokeAsync("EmpCursos_BorrarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_EmpCursos}, Me.EmpCursos_BorrarRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmpCursos_BorrarRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.EmpCursos_BorrarRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EmpCursos_BorrarRegistroCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/EmpCursos_ModificarRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub EmpCursos_ModificarRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EmpCursos As EntEmp_Cursos)
            Me.Invoke("EmpCursos_ModificarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_EmpCursos})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmpCursos_ModificarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EmpCursos As EntEmp_Cursos)
            Me.EmpCursos_ModificarRegistroAsync(pvc_Usuario, pvc_Clave, pvo_EmpCursos, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmpCursos_ModificarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EmpCursos As EntEmp_Cursos, ByVal userState As Object)
            If (Me.EmpCursos_ModificarRegistroOperationCompleted Is Nothing) Then
                Me.EmpCursos_ModificarRegistroOperationCompleted = AddressOf Me.OnEmpCursos_ModificarRegistroOperationCompleted
            End If
            Me.InvokeAsync("EmpCursos_ModificarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_EmpCursos}, Me.EmpCursos_ModificarRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmpCursos_ModificarRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.EmpCursos_ModificarRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EmpCursos_ModificarRegistroCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/EmpCursos_ModificarTitulo", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub EmpCursos_ModificarTitulo(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> ByVal pvb_Imagen() As Byte, ByVal pvc_NumEmpleado As Integer, ByVal pvn_Cons_Curso As Integer)
            Me.Invoke("EmpCursos_ModificarTitulo", New Object() {pvc_Usuario, pvc_Clave, pvb_Imagen, pvc_NumEmpleado, pvn_Cons_Curso})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmpCursos_ModificarTituloAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvb_Imagen() As Byte, ByVal pvc_NumEmpleado As Integer, ByVal pvn_Cons_Curso As Integer)
            Me.EmpCursos_ModificarTituloAsync(pvc_Usuario, pvc_Clave, pvb_Imagen, pvc_NumEmpleado, pvn_Cons_Curso, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmpCursos_ModificarTituloAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvb_Imagen() As Byte, ByVal pvc_NumEmpleado As Integer, ByVal pvn_Cons_Curso As Integer, ByVal userState As Object)
            If (Me.EmpCursos_ModificarTituloOperationCompleted Is Nothing) Then
                Me.EmpCursos_ModificarTituloOperationCompleted = AddressOf Me.OnEmpCursos_ModificarTituloOperationCompleted
            End If
            Me.InvokeAsync("EmpCursos_ModificarTitulo", New Object() {pvc_Usuario, pvc_Clave, pvb_Imagen, pvc_NumEmpleado, pvn_Cons_Curso}, Me.EmpCursos_ModificarTituloOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmpCursos_ModificarTituloOperationCompleted(ByVal arg As Object)
            If (Not (Me.EmpCursos_ModificarTituloCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EmpCursos_ModificarTituloCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/EmpCursos_ObtenerTitulo", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EmpCursos_ObtenerTitulo(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_NumEmpleado As Integer, ByVal pvn_Cons_Curso As Integer) As <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> Byte()
            Dim results() As Object = Me.Invoke("EmpCursos_ObtenerTitulo", New Object() {pvc_Usuario, pvc_Clave, pvc_NumEmpleado, pvn_Cons_Curso})
            Return CType(results(0),Byte())
        End Function
        
        '''<remarks/>
        Public Overloads Sub EmpCursos_ObtenerTituloAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_NumEmpleado As Integer, ByVal pvn_Cons_Curso As Integer)
            Me.EmpCursos_ObtenerTituloAsync(pvc_Usuario, pvc_Clave, pvc_NumEmpleado, pvn_Cons_Curso, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmpCursos_ObtenerTituloAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_NumEmpleado As Integer, ByVal pvn_Cons_Curso As Integer, ByVal userState As Object)
            If (Me.EmpCursos_ObtenerTituloOperationCompleted Is Nothing) Then
                Me.EmpCursos_ObtenerTituloOperationCompleted = AddressOf Me.OnEmpCursos_ObtenerTituloOperationCompleted
            End If
            Me.InvokeAsync("EmpCursos_ObtenerTitulo", New Object() {pvc_Usuario, pvc_Clave, pvc_NumEmpleado, pvn_Cons_Curso}, Me.EmpCursos_ObtenerTituloOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmpCursos_ObtenerTituloOperationCompleted(ByVal arg As Object)
            If (Not (Me.EmpCursos_ObtenerTituloCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EmpCursos_ObtenerTituloCompleted(Me, New EmpCursos_ObtenerTituloCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/EmpCursos_Rpt_Curriculo", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EmpCursos_Rpt_Curriculo(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("EmpCursos_Rpt_Curriculo", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EmpCursos_Rpt_CurriculoAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String)
            Me.EmpCursos_Rpt_CurriculoAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmpCursos_Rpt_CurriculoAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal userState As Object)
            If (Me.EmpCursos_Rpt_CurriculoOperationCompleted Is Nothing) Then
                Me.EmpCursos_Rpt_CurriculoOperationCompleted = AddressOf Me.OnEmpCursos_Rpt_CurriculoOperationCompleted
            End If
            Me.InvokeAsync("EmpCursos_Rpt_Curriculo", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion}, Me.EmpCursos_Rpt_CurriculoOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmpCursos_Rpt_CurriculoOperationCompleted(ByVal arg As Object)
            If (Not (Me.EmpCursos_Rpt_CurriculoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EmpCursos_Rpt_CurriculoCompleted(Me, New EmpCursos_Rpt_CurriculoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/EmpCursosAut_ListarRegistros", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EmpCursosAut_ListarRegistros(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("EmpCursosAut_ListarRegistros", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EmpCursosAut_ListarRegistrosAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String)
            Me.EmpCursosAut_ListarRegistrosAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmpCursosAut_ListarRegistrosAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String, ByVal userState As Object)
            If (Me.EmpCursosAut_ListarRegistrosOperationCompleted Is Nothing) Then
                Me.EmpCursosAut_ListarRegistrosOperationCompleted = AddressOf Me.OnEmpCursosAut_ListarRegistrosOperationCompleted
            End If
            Me.InvokeAsync("EmpCursosAut_ListarRegistros", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden}, Me.EmpCursosAut_ListarRegistrosOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmpCursosAut_ListarRegistrosOperationCompleted(ByVal arg As Object)
            If (Not (Me.EmpCursosAut_ListarRegistrosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EmpCursosAut_ListarRegistrosCompleted(Me, New EmpCursosAut_ListarRegistrosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/EmpCursosAut_ListarRegistrosLista", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EmpCursosAut_ListarRegistrosLista(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("EmpCursosAut_ListarRegistrosLista", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EmpCursosAut_ListarRegistrosListaAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String)
            Me.EmpCursosAut_ListarRegistrosListaAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmpCursosAut_ListarRegistrosListaAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String, ByVal userState As Object)
            If (Me.EmpCursosAut_ListarRegistrosListaOperationCompleted Is Nothing) Then
                Me.EmpCursosAut_ListarRegistrosListaOperationCompleted = AddressOf Me.OnEmpCursosAut_ListarRegistrosListaOperationCompleted
            End If
            Me.InvokeAsync("EmpCursosAut_ListarRegistrosLista", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden}, Me.EmpCursosAut_ListarRegistrosListaOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmpCursosAut_ListarRegistrosListaOperationCompleted(ByVal arg As Object)
            If (Not (Me.EmpCursosAut_ListarRegistrosListaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EmpCursosAut_ListarRegistrosListaCompleted(Me, New EmpCursosAut_ListarRegistrosListaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/EmpCursosAut_ObtenerRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EmpCursosAut_ObtenerRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String) As EntEmp_Cursos_Aut
            Dim results() As Object = Me.Invoke("EmpCursosAut_ObtenerRegistro", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion})
            Return CType(results(0),EntEmp_Cursos_Aut)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EmpCursosAut_ObtenerRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String)
            Me.EmpCursosAut_ObtenerRegistroAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmpCursosAut_ObtenerRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal userState As Object)
            If (Me.EmpCursosAut_ObtenerRegistroOperationCompleted Is Nothing) Then
                Me.EmpCursosAut_ObtenerRegistroOperationCompleted = AddressOf Me.OnEmpCursosAut_ObtenerRegistroOperationCompleted
            End If
            Me.InvokeAsync("EmpCursosAut_ObtenerRegistro", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion}, Me.EmpCursosAut_ObtenerRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmpCursosAut_ObtenerRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.EmpCursosAut_ObtenerRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EmpCursosAut_ObtenerRegistroCompleted(Me, New EmpCursosAut_ObtenerRegistroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/EmpCursosAut_InsertarRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub EmpCursosAut_InsertarRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EmpCursosAut As EntEmp_Cursos_Aut)
            Me.Invoke("EmpCursosAut_InsertarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_EmpCursosAut})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmpCursosAut_InsertarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EmpCursosAut As EntEmp_Cursos_Aut)
            Me.EmpCursosAut_InsertarRegistroAsync(pvc_Usuario, pvc_Clave, pvo_EmpCursosAut, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmpCursosAut_InsertarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EmpCursosAut As EntEmp_Cursos_Aut, ByVal userState As Object)
            If (Me.EmpCursosAut_InsertarRegistroOperationCompleted Is Nothing) Then
                Me.EmpCursosAut_InsertarRegistroOperationCompleted = AddressOf Me.OnEmpCursosAut_InsertarRegistroOperationCompleted
            End If
            Me.InvokeAsync("EmpCursosAut_InsertarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_EmpCursosAut}, Me.EmpCursosAut_InsertarRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmpCursosAut_InsertarRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.EmpCursosAut_InsertarRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EmpCursosAut_InsertarRegistroCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/EmpCursosAut_BorrarRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub EmpCursosAut_BorrarRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EmpCursosAut As EntEmp_Cursos_Aut)
            Me.Invoke("EmpCursosAut_BorrarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_EmpCursosAut})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmpCursosAut_BorrarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EmpCursosAut As EntEmp_Cursos_Aut)
            Me.EmpCursosAut_BorrarRegistroAsync(pvc_Usuario, pvc_Clave, pvo_EmpCursosAut, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmpCursosAut_BorrarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EmpCursosAut As EntEmp_Cursos_Aut, ByVal userState As Object)
            If (Me.EmpCursosAut_BorrarRegistroOperationCompleted Is Nothing) Then
                Me.EmpCursosAut_BorrarRegistroOperationCompleted = AddressOf Me.OnEmpCursosAut_BorrarRegistroOperationCompleted
            End If
            Me.InvokeAsync("EmpCursosAut_BorrarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_EmpCursosAut}, Me.EmpCursosAut_BorrarRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmpCursosAut_BorrarRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.EmpCursosAut_BorrarRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EmpCursosAut_BorrarRegistroCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/EmpCursosAut_ModificarRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub EmpCursosAut_ModificarRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EmpCursosAut As EntEmp_Cursos_Aut)
            Me.Invoke("EmpCursosAut_ModificarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_EmpCursosAut})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmpCursosAut_ModificarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EmpCursosAut As EntEmp_Cursos_Aut)
            Me.EmpCursosAut_ModificarRegistroAsync(pvc_Usuario, pvc_Clave, pvo_EmpCursosAut, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmpCursosAut_ModificarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EmpCursosAut As EntEmp_Cursos_Aut, ByVal userState As Object)
            If (Me.EmpCursosAut_ModificarRegistroOperationCompleted Is Nothing) Then
                Me.EmpCursosAut_ModificarRegistroOperationCompleted = AddressOf Me.OnEmpCursosAut_ModificarRegistroOperationCompleted
            End If
            Me.InvokeAsync("EmpCursosAut_ModificarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_EmpCursosAut}, Me.EmpCursosAut_ModificarRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmpCursosAut_ModificarRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.EmpCursosAut_ModificarRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EmpCursosAut_ModificarRegistroCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/EmpCertificaciones_ListarRegistros", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EmpCertificaciones_ListarRegistros(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("EmpCertificaciones_ListarRegistros", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EmpCertificaciones_ListarRegistrosAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String)
            Me.EmpCertificaciones_ListarRegistrosAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmpCertificaciones_ListarRegistrosAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String, ByVal userState As Object)
            If (Me.EmpCertificaciones_ListarRegistrosOperationCompleted Is Nothing) Then
                Me.EmpCertificaciones_ListarRegistrosOperationCompleted = AddressOf Me.OnEmpCertificaciones_ListarRegistrosOperationCompleted
            End If
            Me.InvokeAsync("EmpCertificaciones_ListarRegistros", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden}, Me.EmpCertificaciones_ListarRegistrosOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmpCertificaciones_ListarRegistrosOperationCompleted(ByVal arg As Object)
            If (Not (Me.EmpCertificaciones_ListarRegistrosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EmpCertificaciones_ListarRegistrosCompleted(Me, New EmpCertificaciones_ListarRegistrosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/EmpCertificaciones_ListarRegistrosLista", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EmpCertificaciones_ListarRegistrosLista(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("EmpCertificaciones_ListarRegistrosLista", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EmpCertificaciones_ListarRegistrosListaAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String)
            Me.EmpCertificaciones_ListarRegistrosListaAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmpCertificaciones_ListarRegistrosListaAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String, ByVal userState As Object)
            If (Me.EmpCertificaciones_ListarRegistrosListaOperationCompleted Is Nothing) Then
                Me.EmpCertificaciones_ListarRegistrosListaOperationCompleted = AddressOf Me.OnEmpCertificaciones_ListarRegistrosListaOperationCompleted
            End If
            Me.InvokeAsync("EmpCertificaciones_ListarRegistrosLista", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden}, Me.EmpCertificaciones_ListarRegistrosListaOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmpCertificaciones_ListarRegistrosListaOperationCompleted(ByVal arg As Object)
            If (Not (Me.EmpCertificaciones_ListarRegistrosListaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EmpCertificaciones_ListarRegistrosListaCompleted(Me, New EmpCertificaciones_ListarRegistrosListaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/EmpCertificaciones_ObtenerRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EmpCertificaciones_ObtenerRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String) As EntEmp_Certificaciones
            Dim results() As Object = Me.Invoke("EmpCertificaciones_ObtenerRegistro", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion})
            Return CType(results(0),EntEmp_Certificaciones)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EmpCertificaciones_ObtenerRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String)
            Me.EmpCertificaciones_ObtenerRegistroAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmpCertificaciones_ObtenerRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal userState As Object)
            If (Me.EmpCertificaciones_ObtenerRegistroOperationCompleted Is Nothing) Then
                Me.EmpCertificaciones_ObtenerRegistroOperationCompleted = AddressOf Me.OnEmpCertificaciones_ObtenerRegistroOperationCompleted
            End If
            Me.InvokeAsync("EmpCertificaciones_ObtenerRegistro", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion}, Me.EmpCertificaciones_ObtenerRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmpCertificaciones_ObtenerRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.EmpCertificaciones_ObtenerRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EmpCertificaciones_ObtenerRegistroCompleted(Me, New EmpCertificaciones_ObtenerRegistroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/EmpCertificaciones_InsertarRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub EmpCertificaciones_InsertarRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EmpCertificaciones As EntEmp_Certificaciones)
            Me.Invoke("EmpCertificaciones_InsertarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_EmpCertificaciones})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmpCertificaciones_InsertarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EmpCertificaciones As EntEmp_Certificaciones)
            Me.EmpCertificaciones_InsertarRegistroAsync(pvc_Usuario, pvc_Clave, pvo_EmpCertificaciones, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmpCertificaciones_InsertarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EmpCertificaciones As EntEmp_Certificaciones, ByVal userState As Object)
            If (Me.EmpCertificaciones_InsertarRegistroOperationCompleted Is Nothing) Then
                Me.EmpCertificaciones_InsertarRegistroOperationCompleted = AddressOf Me.OnEmpCertificaciones_InsertarRegistroOperationCompleted
            End If
            Me.InvokeAsync("EmpCertificaciones_InsertarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_EmpCertificaciones}, Me.EmpCertificaciones_InsertarRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmpCertificaciones_InsertarRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.EmpCertificaciones_InsertarRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EmpCertificaciones_InsertarRegistroCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/EmpCertificaciones_BorrarRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub EmpCertificaciones_BorrarRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EmpCertificaciones As EntEmp_Certificaciones)
            Me.Invoke("EmpCertificaciones_BorrarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_EmpCertificaciones})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmpCertificaciones_BorrarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EmpCertificaciones As EntEmp_Certificaciones)
            Me.EmpCertificaciones_BorrarRegistroAsync(pvc_Usuario, pvc_Clave, pvo_EmpCertificaciones, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmpCertificaciones_BorrarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EmpCertificaciones As EntEmp_Certificaciones, ByVal userState As Object)
            If (Me.EmpCertificaciones_BorrarRegistroOperationCompleted Is Nothing) Then
                Me.EmpCertificaciones_BorrarRegistroOperationCompleted = AddressOf Me.OnEmpCertificaciones_BorrarRegistroOperationCompleted
            End If
            Me.InvokeAsync("EmpCertificaciones_BorrarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_EmpCertificaciones}, Me.EmpCertificaciones_BorrarRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmpCertificaciones_BorrarRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.EmpCertificaciones_BorrarRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EmpCertificaciones_BorrarRegistroCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/EmpCertificaciones_ModificarRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub EmpCertificaciones_ModificarRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EmpCertificaciones As EntEmp_Certificaciones)
            Me.Invoke("EmpCertificaciones_ModificarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_EmpCertificaciones})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmpCertificaciones_ModificarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EmpCertificaciones As EntEmp_Certificaciones)
            Me.EmpCertificaciones_ModificarRegistroAsync(pvc_Usuario, pvc_Clave, pvo_EmpCertificaciones, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmpCertificaciones_ModificarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EmpCertificaciones As EntEmp_Certificaciones, ByVal userState As Object)
            If (Me.EmpCertificaciones_ModificarRegistroOperationCompleted Is Nothing) Then
                Me.EmpCertificaciones_ModificarRegistroOperationCompleted = AddressOf Me.OnEmpCertificaciones_ModificarRegistroOperationCompleted
            End If
            Me.InvokeAsync("EmpCertificaciones_ModificarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_EmpCertificaciones}, Me.EmpCertificaciones_ModificarRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmpCertificaciones_ModificarRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.EmpCertificaciones_ModificarRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EmpCertificaciones_ModificarRegistroCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/EmpCertificaciones_ModificarTitulo", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub EmpCertificaciones_ModificarTitulo(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> ByVal pvb_Imagen() As Byte, ByVal pvc_NumEmpleado As Integer, ByVal pvn_Cons_Certificacion As Integer)
            Me.Invoke("EmpCertificaciones_ModificarTitulo", New Object() {pvc_Usuario, pvc_Clave, pvb_Imagen, pvc_NumEmpleado, pvn_Cons_Certificacion})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmpCertificaciones_ModificarTituloAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvb_Imagen() As Byte, ByVal pvc_NumEmpleado As Integer, ByVal pvn_Cons_Certificacion As Integer)
            Me.EmpCertificaciones_ModificarTituloAsync(pvc_Usuario, pvc_Clave, pvb_Imagen, pvc_NumEmpleado, pvn_Cons_Certificacion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmpCertificaciones_ModificarTituloAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvb_Imagen() As Byte, ByVal pvc_NumEmpleado As Integer, ByVal pvn_Cons_Certificacion As Integer, ByVal userState As Object)
            If (Me.EmpCertificaciones_ModificarTituloOperationCompleted Is Nothing) Then
                Me.EmpCertificaciones_ModificarTituloOperationCompleted = AddressOf Me.OnEmpCertificaciones_ModificarTituloOperationCompleted
            End If
            Me.InvokeAsync("EmpCertificaciones_ModificarTitulo", New Object() {pvc_Usuario, pvc_Clave, pvb_Imagen, pvc_NumEmpleado, pvn_Cons_Certificacion}, Me.EmpCertificaciones_ModificarTituloOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmpCertificaciones_ModificarTituloOperationCompleted(ByVal arg As Object)
            If (Not (Me.EmpCertificaciones_ModificarTituloCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EmpCertificaciones_ModificarTituloCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/EmpCertificaciones_ObtenerTitulo", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EmpCertificaciones_ObtenerTitulo(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_NumEmpleado As Integer, ByVal pvn_Cons_Certificacion As Integer) As <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> Byte()
            Dim results() As Object = Me.Invoke("EmpCertificaciones_ObtenerTitulo", New Object() {pvc_Usuario, pvc_Clave, pvc_NumEmpleado, pvn_Cons_Certificacion})
            Return CType(results(0),Byte())
        End Function
        
        '''<remarks/>
        Public Overloads Sub EmpCertificaciones_ObtenerTituloAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_NumEmpleado As Integer, ByVal pvn_Cons_Certificacion As Integer)
            Me.EmpCertificaciones_ObtenerTituloAsync(pvc_Usuario, pvc_Clave, pvc_NumEmpleado, pvn_Cons_Certificacion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmpCertificaciones_ObtenerTituloAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_NumEmpleado As Integer, ByVal pvn_Cons_Certificacion As Integer, ByVal userState As Object)
            If (Me.EmpCertificaciones_ObtenerTituloOperationCompleted Is Nothing) Then
                Me.EmpCertificaciones_ObtenerTituloOperationCompleted = AddressOf Me.OnEmpCertificaciones_ObtenerTituloOperationCompleted
            End If
            Me.InvokeAsync("EmpCertificaciones_ObtenerTitulo", New Object() {pvc_Usuario, pvc_Clave, pvc_NumEmpleado, pvn_Cons_Certificacion}, Me.EmpCertificaciones_ObtenerTituloOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmpCertificaciones_ObtenerTituloOperationCompleted(ByVal arg As Object)
            If (Not (Me.EmpCertificaciones_ObtenerTituloCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EmpCertificaciones_ObtenerTituloCompleted(Me, New EmpCertificaciones_ObtenerTituloCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/EmpCertificaciones_Rpt_Curriculo", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EmpCertificaciones_Rpt_Curriculo(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("EmpCertificaciones_Rpt_Curriculo", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EmpCertificaciones_Rpt_CurriculoAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String)
            Me.EmpCertificaciones_Rpt_CurriculoAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmpCertificaciones_Rpt_CurriculoAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal userState As Object)
            If (Me.EmpCertificaciones_Rpt_CurriculoOperationCompleted Is Nothing) Then
                Me.EmpCertificaciones_Rpt_CurriculoOperationCompleted = AddressOf Me.OnEmpCertificaciones_Rpt_CurriculoOperationCompleted
            End If
            Me.InvokeAsync("EmpCertificaciones_Rpt_Curriculo", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion}, Me.EmpCertificaciones_Rpt_CurriculoOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmpCertificaciones_Rpt_CurriculoOperationCompleted(ByVal arg As Object)
            If (Not (Me.EmpCertificaciones_Rpt_CurriculoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EmpCertificaciones_Rpt_CurriculoCompleted(Me, New EmpCertificaciones_Rpt_CurriculoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/EmpCertificacionesAut_ListarRegistros", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EmpCertificacionesAut_ListarRegistros(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("EmpCertificacionesAut_ListarRegistros", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EmpCertificacionesAut_ListarRegistrosAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String)
            Me.EmpCertificacionesAut_ListarRegistrosAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmpCertificacionesAut_ListarRegistrosAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String, ByVal userState As Object)
            If (Me.EmpCertificacionesAut_ListarRegistrosOperationCompleted Is Nothing) Then
                Me.EmpCertificacionesAut_ListarRegistrosOperationCompleted = AddressOf Me.OnEmpCertificacionesAut_ListarRegistrosOperationCompleted
            End If
            Me.InvokeAsync("EmpCertificacionesAut_ListarRegistros", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden}, Me.EmpCertificacionesAut_ListarRegistrosOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmpCertificacionesAut_ListarRegistrosOperationCompleted(ByVal arg As Object)
            If (Not (Me.EmpCertificacionesAut_ListarRegistrosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EmpCertificacionesAut_ListarRegistrosCompleted(Me, New EmpCertificacionesAut_ListarRegistrosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/EmpCertificacionesAut_ListarRegistrosLista", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EmpCertificacionesAut_ListarRegistrosLista(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("EmpCertificacionesAut_ListarRegistrosLista", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EmpCertificacionesAut_ListarRegistrosListaAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String)
            Me.EmpCertificacionesAut_ListarRegistrosListaAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmpCertificacionesAut_ListarRegistrosListaAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String, ByVal userState As Object)
            If (Me.EmpCertificacionesAut_ListarRegistrosListaOperationCompleted Is Nothing) Then
                Me.EmpCertificacionesAut_ListarRegistrosListaOperationCompleted = AddressOf Me.OnEmpCertificacionesAut_ListarRegistrosListaOperationCompleted
            End If
            Me.InvokeAsync("EmpCertificacionesAut_ListarRegistrosLista", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden}, Me.EmpCertificacionesAut_ListarRegistrosListaOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmpCertificacionesAut_ListarRegistrosListaOperationCompleted(ByVal arg As Object)
            If (Not (Me.EmpCertificacionesAut_ListarRegistrosListaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EmpCertificacionesAut_ListarRegistrosListaCompleted(Me, New EmpCertificacionesAut_ListarRegistrosListaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/EmpCertificacionesAut_ObtenerRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EmpCertificacionesAut_ObtenerRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String) As EntEmp_Certificaciones_Aut
            Dim results() As Object = Me.Invoke("EmpCertificacionesAut_ObtenerRegistro", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion})
            Return CType(results(0),EntEmp_Certificaciones_Aut)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EmpCertificacionesAut_ObtenerRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String)
            Me.EmpCertificacionesAut_ObtenerRegistroAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmpCertificacionesAut_ObtenerRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal userState As Object)
            If (Me.EmpCertificacionesAut_ObtenerRegistroOperationCompleted Is Nothing) Then
                Me.EmpCertificacionesAut_ObtenerRegistroOperationCompleted = AddressOf Me.OnEmpCertificacionesAut_ObtenerRegistroOperationCompleted
            End If
            Me.InvokeAsync("EmpCertificacionesAut_ObtenerRegistro", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion}, Me.EmpCertificacionesAut_ObtenerRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmpCertificacionesAut_ObtenerRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.EmpCertificacionesAut_ObtenerRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EmpCertificacionesAut_ObtenerRegistroCompleted(Me, New EmpCertificacionesAut_ObtenerRegistroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/EmpCertificacionesAut_InsertarRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub EmpCertificacionesAut_InsertarRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EmpCertificacionesAut As EntEmp_Certificaciones_Aut)
            Me.Invoke("EmpCertificacionesAut_InsertarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_EmpCertificacionesAut})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmpCertificacionesAut_InsertarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EmpCertificacionesAut As EntEmp_Certificaciones_Aut)
            Me.EmpCertificacionesAut_InsertarRegistroAsync(pvc_Usuario, pvc_Clave, pvo_EmpCertificacionesAut, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmpCertificacionesAut_InsertarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EmpCertificacionesAut As EntEmp_Certificaciones_Aut, ByVal userState As Object)
            If (Me.EmpCertificacionesAut_InsertarRegistroOperationCompleted Is Nothing) Then
                Me.EmpCertificacionesAut_InsertarRegistroOperationCompleted = AddressOf Me.OnEmpCertificacionesAut_InsertarRegistroOperationCompleted
            End If
            Me.InvokeAsync("EmpCertificacionesAut_InsertarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_EmpCertificacionesAut}, Me.EmpCertificacionesAut_InsertarRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmpCertificacionesAut_InsertarRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.EmpCertificacionesAut_InsertarRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EmpCertificacionesAut_InsertarRegistroCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/EmpCertificacionesAut_BorrarRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub EmpCertificacionesAut_BorrarRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EmpCertificacionesAut As EntEmp_Certificaciones_Aut)
            Me.Invoke("EmpCertificacionesAut_BorrarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_EmpCertificacionesAut})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmpCertificacionesAut_BorrarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EmpCertificacionesAut As EntEmp_Certificaciones_Aut)
            Me.EmpCertificacionesAut_BorrarRegistroAsync(pvc_Usuario, pvc_Clave, pvo_EmpCertificacionesAut, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmpCertificacionesAut_BorrarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EmpCertificacionesAut As EntEmp_Certificaciones_Aut, ByVal userState As Object)
            If (Me.EmpCertificacionesAut_BorrarRegistroOperationCompleted Is Nothing) Then
                Me.EmpCertificacionesAut_BorrarRegistroOperationCompleted = AddressOf Me.OnEmpCertificacionesAut_BorrarRegistroOperationCompleted
            End If
            Me.InvokeAsync("EmpCertificacionesAut_BorrarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_EmpCertificacionesAut}, Me.EmpCertificacionesAut_BorrarRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmpCertificacionesAut_BorrarRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.EmpCertificacionesAut_BorrarRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EmpCertificacionesAut_BorrarRegistroCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/EmpCertificacionesAut_ModificarRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub EmpCertificacionesAut_ModificarRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EmpCertificacionesAut As EntEmp_Certificaciones_Aut)
            Me.Invoke("EmpCertificacionesAut_ModificarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_EmpCertificacionesAut})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmpCertificacionesAut_ModificarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EmpCertificacionesAut As EntEmp_Certificaciones_Aut)
            Me.EmpCertificacionesAut_ModificarRegistroAsync(pvc_Usuario, pvc_Clave, pvo_EmpCertificacionesAut, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmpCertificacionesAut_ModificarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EmpCertificacionesAut As EntEmp_Certificaciones_Aut, ByVal userState As Object)
            If (Me.EmpCertificacionesAut_ModificarRegistroOperationCompleted Is Nothing) Then
                Me.EmpCertificacionesAut_ModificarRegistroOperationCompleted = AddressOf Me.OnEmpCertificacionesAut_ModificarRegistroOperationCompleted
            End If
            Me.InvokeAsync("EmpCertificacionesAut_ModificarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_EmpCertificacionesAut}, Me.EmpCertificacionesAut_ModificarRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmpCertificacionesAut_ModificarRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.EmpCertificacionesAut_ModificarRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EmpCertificacionesAut_ModificarRegistroCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/Empleados_ObtenerFotografiaYCarne", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Empleados_ObtenerFotografiaYCarne(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_IdPersonal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Empleados_ObtenerFotografiaYCarne", New Object() {pvc_Usuario, pvc_Clave, pvc_IdPersonal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Empleados_ObtenerFotografiaYCarneAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_IdPersonal As String)
            Me.Empleados_ObtenerFotografiaYCarneAsync(pvc_Usuario, pvc_Clave, pvc_IdPersonal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Empleados_ObtenerFotografiaYCarneAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_IdPersonal As String, ByVal userState As Object)
            If (Me.Empleados_ObtenerFotografiaYCarneOperationCompleted Is Nothing) Then
                Me.Empleados_ObtenerFotografiaYCarneOperationCompleted = AddressOf Me.OnEmpleados_ObtenerFotografiaYCarneOperationCompleted
            End If
            Me.InvokeAsync("Empleados_ObtenerFotografiaYCarne", New Object() {pvc_Usuario, pvc_Clave, pvc_IdPersonal}, Me.Empleados_ObtenerFotografiaYCarneOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmpleados_ObtenerFotografiaYCarneOperationCompleted(ByVal arg As Object)
            If (Not (Me.Empleados_ObtenerFotografiaYCarneCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Empleados_ObtenerFotografiaYCarneCompleted(Me, New Empleados_ObtenerFotografiaYCarneCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/Empleados_ListarRegistros", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Empleados_ListarRegistros(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Empleados_ListarRegistros", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Empleados_ListarRegistrosAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String)
            Me.Empleados_ListarRegistrosAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Empleados_ListarRegistrosAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String, ByVal userState As Object)
            If (Me.Empleados_ListarRegistrosOperationCompleted Is Nothing) Then
                Me.Empleados_ListarRegistrosOperationCompleted = AddressOf Me.OnEmpleados_ListarRegistrosOperationCompleted
            End If
            Me.InvokeAsync("Empleados_ListarRegistros", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden}, Me.Empleados_ListarRegistrosOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmpleados_ListarRegistrosOperationCompleted(ByVal arg As Object)
            If (Not (Me.Empleados_ListarRegistrosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Empleados_ListarRegistrosCompleted(Me, New Empleados_ListarRegistrosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/Empleados_ListarRegistrosLista", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Empleados_ListarRegistrosLista(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Empleados_ListarRegistrosLista", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Empleados_ListarRegistrosListaAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String)
            Me.Empleados_ListarRegistrosListaAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Empleados_ListarRegistrosListaAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String, ByVal userState As Object)
            If (Me.Empleados_ListarRegistrosListaOperationCompleted Is Nothing) Then
                Me.Empleados_ListarRegistrosListaOperationCompleted = AddressOf Me.OnEmpleados_ListarRegistrosListaOperationCompleted
            End If
            Me.InvokeAsync("Empleados_ListarRegistrosLista", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden}, Me.Empleados_ListarRegistrosListaOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmpleados_ListarRegistrosListaOperationCompleted(ByVal arg As Object)
            If (Not (Me.Empleados_ListarRegistrosListaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Empleados_ListarRegistrosListaCompleted(Me, New Empleados_ListarRegistrosListaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/Empleados_ObtenerRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Empleados_ObtenerRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String) As EntEmpleados
            Dim results() As Object = Me.Invoke("Empleados_ObtenerRegistro", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion})
            Return CType(results(0),EntEmpleados)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Empleados_ObtenerRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String)
            Me.Empleados_ObtenerRegistroAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Empleados_ObtenerRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal userState As Object)
            If (Me.Empleados_ObtenerRegistroOperationCompleted Is Nothing) Then
                Me.Empleados_ObtenerRegistroOperationCompleted = AddressOf Me.OnEmpleados_ObtenerRegistroOperationCompleted
            End If
            Me.InvokeAsync("Empleados_ObtenerRegistro", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion}, Me.Empleados_ObtenerRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmpleados_ObtenerRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.Empleados_ObtenerRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Empleados_ObtenerRegistroCompleted(Me, New Empleados_ObtenerRegistroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/Empleados_InsertarRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub Empleados_InsertarRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Empleados As EntEmpleados)
            Me.Invoke("Empleados_InsertarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_Empleados})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Empleados_InsertarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Empleados As EntEmpleados)
            Me.Empleados_InsertarRegistroAsync(pvc_Usuario, pvc_Clave, pvo_Empleados, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Empleados_InsertarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Empleados As EntEmpleados, ByVal userState As Object)
            If (Me.Empleados_InsertarRegistroOperationCompleted Is Nothing) Then
                Me.Empleados_InsertarRegistroOperationCompleted = AddressOf Me.OnEmpleados_InsertarRegistroOperationCompleted
            End If
            Me.InvokeAsync("Empleados_InsertarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_Empleados}, Me.Empleados_InsertarRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmpleados_InsertarRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.Empleados_InsertarRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Empleados_InsertarRegistroCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/Empleados_BorrarRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub Empleados_BorrarRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Empleados As EntEmpleados)
            Me.Invoke("Empleados_BorrarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_Empleados})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Empleados_BorrarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Empleados As EntEmpleados)
            Me.Empleados_BorrarRegistroAsync(pvc_Usuario, pvc_Clave, pvo_Empleados, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Empleados_BorrarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Empleados As EntEmpleados, ByVal userState As Object)
            If (Me.Empleados_BorrarRegistroOperationCompleted Is Nothing) Then
                Me.Empleados_BorrarRegistroOperationCompleted = AddressOf Me.OnEmpleados_BorrarRegistroOperationCompleted
            End If
            Me.InvokeAsync("Empleados_BorrarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_Empleados}, Me.Empleados_BorrarRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmpleados_BorrarRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.Empleados_BorrarRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Empleados_BorrarRegistroCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/Empleados_ModificarRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub Empleados_ModificarRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Empleados As EntEmpleados)
            Me.Invoke("Empleados_ModificarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_Empleados})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Empleados_ModificarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Empleados As EntEmpleados)
            Me.Empleados_ModificarRegistroAsync(pvc_Usuario, pvc_Clave, pvo_Empleados, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Empleados_ModificarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Empleados As EntEmpleados, ByVal userState As Object)
            If (Me.Empleados_ModificarRegistroOperationCompleted Is Nothing) Then
                Me.Empleados_ModificarRegistroOperationCompleted = AddressOf Me.OnEmpleados_ModificarRegistroOperationCompleted
            End If
            Me.InvokeAsync("Empleados_ModificarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_Empleados}, Me.Empleados_ModificarRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmpleados_ModificarRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.Empleados_ModificarRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Empleados_ModificarRegistroCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/Empleados_ModificarRegistroImagen", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub Empleados_ModificarRegistroImagen(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Empleados As EntEmpleados)
            Me.Invoke("Empleados_ModificarRegistroImagen", New Object() {pvc_Usuario, pvc_Clave, pvo_Empleados})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Empleados_ModificarRegistroImagenAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Empleados As EntEmpleados)
            Me.Empleados_ModificarRegistroImagenAsync(pvc_Usuario, pvc_Clave, pvo_Empleados, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Empleados_ModificarRegistroImagenAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Empleados As EntEmpleados, ByVal userState As Object)
            If (Me.Empleados_ModificarRegistroImagenOperationCompleted Is Nothing) Then
                Me.Empleados_ModificarRegistroImagenOperationCompleted = AddressOf Me.OnEmpleados_ModificarRegistroImagenOperationCompleted
            End If
            Me.InvokeAsync("Empleados_ModificarRegistroImagen", New Object() {pvc_Usuario, pvc_Clave, pvo_Empleados}, Me.Empleados_ModificarRegistroImagenOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmpleados_ModificarRegistroImagenOperationCompleted(ByVal arg As Object)
            If (Not (Me.Empleados_ModificarRegistroImagenCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Empleados_ModificarRegistroImagenCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/Empleados_ModificarFoto", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub Empleados_ModificarFoto(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> ByVal pvb_Imagen() As Byte, ByVal pvc_NumEmpleado As Integer)
            Me.Invoke("Empleados_ModificarFoto", New Object() {pvc_Usuario, pvc_Clave, pvb_Imagen, pvc_NumEmpleado})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Empleados_ModificarFotoAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvb_Imagen() As Byte, ByVal pvc_NumEmpleado As Integer)
            Me.Empleados_ModificarFotoAsync(pvc_Usuario, pvc_Clave, pvb_Imagen, pvc_NumEmpleado, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Empleados_ModificarFotoAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvb_Imagen() As Byte, ByVal pvc_NumEmpleado As Integer, ByVal userState As Object)
            If (Me.Empleados_ModificarFotoOperationCompleted Is Nothing) Then
                Me.Empleados_ModificarFotoOperationCompleted = AddressOf Me.OnEmpleados_ModificarFotoOperationCompleted
            End If
            Me.InvokeAsync("Empleados_ModificarFoto", New Object() {pvc_Usuario, pvc_Clave, pvb_Imagen, pvc_NumEmpleado}, Me.Empleados_ModificarFotoOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmpleados_ModificarFotoOperationCompleted(ByVal arg As Object)
            If (Not (Me.Empleados_ModificarFotoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Empleados_ModificarFotoCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/Empleados_ObtenerFoto", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Empleados_ObtenerFoto(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_NumEmpleado As Integer) As <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> Byte()
            Dim results() As Object = Me.Invoke("Empleados_ObtenerFoto", New Object() {pvc_Usuario, pvc_Clave, pvc_NumEmpleado})
            Return CType(results(0),Byte())
        End Function
        
        '''<remarks/>
        Public Overloads Sub Empleados_ObtenerFotoAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_NumEmpleado As Integer)
            Me.Empleados_ObtenerFotoAsync(pvc_Usuario, pvc_Clave, pvc_NumEmpleado, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Empleados_ObtenerFotoAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_NumEmpleado As Integer, ByVal userState As Object)
            If (Me.Empleados_ObtenerFotoOperationCompleted Is Nothing) Then
                Me.Empleados_ObtenerFotoOperationCompleted = AddressOf Me.OnEmpleados_ObtenerFotoOperationCompleted
            End If
            Me.InvokeAsync("Empleados_ObtenerFoto", New Object() {pvc_Usuario, pvc_Clave, pvc_NumEmpleado}, Me.Empleados_ObtenerFotoOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmpleados_ObtenerFotoOperationCompleted(ByVal arg As Object)
            If (Not (Me.Empleados_ObtenerFotoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Empleados_ObtenerFotoCompleted(Me, New Empleados_ObtenerFotoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/Empleados_Rpt_Curriculo", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Empleados_Rpt_Curriculo(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Empleados_Rpt_Curriculo", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Empleados_Rpt_CurriculoAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String)
            Me.Empleados_Rpt_CurriculoAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Empleados_Rpt_CurriculoAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal userState As Object)
            If (Me.Empleados_Rpt_CurriculoOperationCompleted Is Nothing) Then
                Me.Empleados_Rpt_CurriculoOperationCompleted = AddressOf Me.OnEmpleados_Rpt_CurriculoOperationCompleted
            End If
            Me.InvokeAsync("Empleados_Rpt_Curriculo", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion}, Me.Empleados_Rpt_CurriculoOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmpleados_Rpt_CurriculoOperationCompleted(ByVal arg As Object)
            If (Not (Me.Empleados_Rpt_CurriculoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Empleados_Rpt_CurriculoCompleted(Me, New Empleados_Rpt_CurriculoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/Empleados_Actualizacion_SIRH_EU_Datos", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Empleados_Actualizacion_SIRH_EU_Datos(ByVal pvc_Usuario As String, ByVal pvc_Clave As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Empleados_Actualizacion_SIRH_EU_Datos", New Object() {pvc_Usuario, pvc_Clave})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Empleados_Actualizacion_SIRH_EU_DatosAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String)
            Me.Empleados_Actualizacion_SIRH_EU_DatosAsync(pvc_Usuario, pvc_Clave, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Empleados_Actualizacion_SIRH_EU_DatosAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal userState As Object)
            If (Me.Empleados_Actualizacion_SIRH_EU_DatosOperationCompleted Is Nothing) Then
                Me.Empleados_Actualizacion_SIRH_EU_DatosOperationCompleted = AddressOf Me.OnEmpleados_Actualizacion_SIRH_EU_DatosOperationCompleted
            End If
            Me.InvokeAsync("Empleados_Actualizacion_SIRH_EU_Datos", New Object() {pvc_Usuario, pvc_Clave}, Me.Empleados_Actualizacion_SIRH_EU_DatosOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmpleados_Actualizacion_SIRH_EU_DatosOperationCompleted(ByVal arg As Object)
            If (Not (Me.Empleados_Actualizacion_SIRH_EU_DatosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Empleados_Actualizacion_SIRH_EU_DatosCompleted(Me, New Empleados_Actualizacion_SIRH_EU_DatosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/Empleados_Actualizacion_SIRH_EU_TipoEmpleado", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Empleados_Actualizacion_SIRH_EU_TipoEmpleado(ByVal pvc_Usuario As String, ByVal pvc_Clave As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Empleados_Actualizacion_SIRH_EU_TipoEmpleado", New Object() {pvc_Usuario, pvc_Clave})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Empleados_Actualizacion_SIRH_EU_TipoEmpleadoAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String)
            Me.Empleados_Actualizacion_SIRH_EU_TipoEmpleadoAsync(pvc_Usuario, pvc_Clave, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Empleados_Actualizacion_SIRH_EU_TipoEmpleadoAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal userState As Object)
            If (Me.Empleados_Actualizacion_SIRH_EU_TipoEmpleadoOperationCompleted Is Nothing) Then
                Me.Empleados_Actualizacion_SIRH_EU_TipoEmpleadoOperationCompleted = AddressOf Me.OnEmpleados_Actualizacion_SIRH_EU_TipoEmpleadoOperationCompleted
            End If
            Me.InvokeAsync("Empleados_Actualizacion_SIRH_EU_TipoEmpleado", New Object() {pvc_Usuario, pvc_Clave}, Me.Empleados_Actualizacion_SIRH_EU_TipoEmpleadoOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmpleados_Actualizacion_SIRH_EU_TipoEmpleadoOperationCompleted(ByVal arg As Object)
            If (Not (Me.Empleados_Actualizacion_SIRH_EU_TipoEmpleadoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Empleados_Actualizacion_SIRH_EU_TipoEmpleadoCompleted(Me, New Empleados_Actualizacion_SIRH_EU_TipoEmpleadoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/Empleados_Actualizacion_SIRH_EU_EmpleadoNuevo", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Empleados_Actualizacion_SIRH_EU_EmpleadoNuevo(ByVal pvc_Usuario As String, ByVal pvc_Clave As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Empleados_Actualizacion_SIRH_EU_EmpleadoNuevo", New Object() {pvc_Usuario, pvc_Clave})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Empleados_Actualizacion_SIRH_EU_EmpleadoNuevoAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String)
            Me.Empleados_Actualizacion_SIRH_EU_EmpleadoNuevoAsync(pvc_Usuario, pvc_Clave, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Empleados_Actualizacion_SIRH_EU_EmpleadoNuevoAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal userState As Object)
            If (Me.Empleados_Actualizacion_SIRH_EU_EmpleadoNuevoOperationCompleted Is Nothing) Then
                Me.Empleados_Actualizacion_SIRH_EU_EmpleadoNuevoOperationCompleted = AddressOf Me.OnEmpleados_Actualizacion_SIRH_EU_EmpleadoNuevoOperationCompleted
            End If
            Me.InvokeAsync("Empleados_Actualizacion_SIRH_EU_EmpleadoNuevo", New Object() {pvc_Usuario, pvc_Clave}, Me.Empleados_Actualizacion_SIRH_EU_EmpleadoNuevoOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmpleados_Actualizacion_SIRH_EU_EmpleadoNuevoOperationCompleted(ByVal arg As Object)
            If (Not (Me.Empleados_Actualizacion_SIRH_EU_EmpleadoNuevoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Empleados_Actualizacion_SIRH_EU_EmpleadoNuevoCompleted(Me, New Empleados_Actualizacion_SIRH_EU_EmpleadoNuevoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/Empleados_Actualizacion_SIRH_EU_EmpleadoCorreo", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Empleados_Actualizacion_SIRH_EU_EmpleadoCorreo(ByVal pvc_Usuario As String, ByVal pvc_Clave As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Empleados_Actualizacion_SIRH_EU_EmpleadoCorreo", New Object() {pvc_Usuario, pvc_Clave})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Empleados_Actualizacion_SIRH_EU_EmpleadoCorreoAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String)
            Me.Empleados_Actualizacion_SIRH_EU_EmpleadoCorreoAsync(pvc_Usuario, pvc_Clave, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Empleados_Actualizacion_SIRH_EU_EmpleadoCorreoAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal userState As Object)
            If (Me.Empleados_Actualizacion_SIRH_EU_EmpleadoCorreoOperationCompleted Is Nothing) Then
                Me.Empleados_Actualizacion_SIRH_EU_EmpleadoCorreoOperationCompleted = AddressOf Me.OnEmpleados_Actualizacion_SIRH_EU_EmpleadoCorreoOperationCompleted
            End If
            Me.InvokeAsync("Empleados_Actualizacion_SIRH_EU_EmpleadoCorreo", New Object() {pvc_Usuario, pvc_Clave}, Me.Empleados_Actualizacion_SIRH_EU_EmpleadoCorreoOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmpleados_Actualizacion_SIRH_EU_EmpleadoCorreoOperationCompleted(ByVal arg As Object)
            If (Not (Me.Empleados_Actualizacion_SIRH_EU_EmpleadoCorreoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Empleados_Actualizacion_SIRH_EU_EmpleadoCorreoCompleted(Me, New Empleados_Actualizacion_SIRH_EU_EmpleadoCorreoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/Empleados_Actualizacion_SIRH_EU_Empleado", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Empleados_Actualizacion_SIRH_EU_Empleado(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_NumEmpleado As String, ByVal pvc_EmpleEstado As String) As String
            Dim results() As Object = Me.Invoke("Empleados_Actualizacion_SIRH_EU_Empleado", New Object() {pvc_Usuario, pvc_Clave, pvc_NumEmpleado, pvc_EmpleEstado})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Empleados_Actualizacion_SIRH_EU_EmpleadoAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_NumEmpleado As String, ByVal pvc_EmpleEstado As String)
            Me.Empleados_Actualizacion_SIRH_EU_EmpleadoAsync(pvc_Usuario, pvc_Clave, pvc_NumEmpleado, pvc_EmpleEstado, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Empleados_Actualizacion_SIRH_EU_EmpleadoAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_NumEmpleado As String, ByVal pvc_EmpleEstado As String, ByVal userState As Object)
            If (Me.Empleados_Actualizacion_SIRH_EU_EmpleadoOperationCompleted Is Nothing) Then
                Me.Empleados_Actualizacion_SIRH_EU_EmpleadoOperationCompleted = AddressOf Me.OnEmpleados_Actualizacion_SIRH_EU_EmpleadoOperationCompleted
            End If
            Me.InvokeAsync("Empleados_Actualizacion_SIRH_EU_Empleado", New Object() {pvc_Usuario, pvc_Clave, pvc_NumEmpleado, pvc_EmpleEstado}, Me.Empleados_Actualizacion_SIRH_EU_EmpleadoOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmpleados_Actualizacion_SIRH_EU_EmpleadoOperationCompleted(ByVal arg As Object)
            If (Not (Me.Empleados_Actualizacion_SIRH_EU_EmpleadoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Empleados_Actualizacion_SIRH_EU_EmpleadoCompleted(Me, New Empleados_Actualizacion_SIRH_EU_EmpleadoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/Empleados_SincronizarEuSirh", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub Empleados_SincronizarEuSirh(ByVal pvc_Usuario As String, ByVal pvc_Clave As String)
            Me.Invoke("Empleados_SincronizarEuSirh", New Object() {pvc_Usuario, pvc_Clave})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Empleados_SincronizarEuSirhAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String)
            Me.Empleados_SincronizarEuSirhAsync(pvc_Usuario, pvc_Clave, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Empleados_SincronizarEuSirhAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal userState As Object)
            If (Me.Empleados_SincronizarEuSirhOperationCompleted Is Nothing) Then
                Me.Empleados_SincronizarEuSirhOperationCompleted = AddressOf Me.OnEmpleados_SincronizarEuSirhOperationCompleted
            End If
            Me.InvokeAsync("Empleados_SincronizarEuSirh", New Object() {pvc_Usuario, pvc_Clave}, Me.Empleados_SincronizarEuSirhOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmpleados_SincronizarEuSirhOperationCompleted(ByVal arg As Object)
            If (Not (Me.Empleados_SincronizarEuSirhCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Empleados_SincronizarEuSirhCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/Empleados_SincronizarEuSirh_EmpleadosNuevos", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub Empleados_SincronizarEuSirh_EmpleadosNuevos(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvd_FechaConsulta As Date, ByVal pvn_RangoDias As Integer)
            Me.Invoke("Empleados_SincronizarEuSirh_EmpleadosNuevos", New Object() {pvc_Usuario, pvc_Clave, pvd_FechaConsulta, pvn_RangoDias})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Empleados_SincronizarEuSirh_EmpleadosNuevosAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvd_FechaConsulta As Date, ByVal pvn_RangoDias As Integer)
            Me.Empleados_SincronizarEuSirh_EmpleadosNuevosAsync(pvc_Usuario, pvc_Clave, pvd_FechaConsulta, pvn_RangoDias, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Empleados_SincronizarEuSirh_EmpleadosNuevosAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvd_FechaConsulta As Date, ByVal pvn_RangoDias As Integer, ByVal userState As Object)
            If (Me.Empleados_SincronizarEuSirh_EmpleadosNuevosOperationCompleted Is Nothing) Then
                Me.Empleados_SincronizarEuSirh_EmpleadosNuevosOperationCompleted = AddressOf Me.OnEmpleados_SincronizarEuSirh_EmpleadosNuevosOperationCompleted
            End If
            Me.InvokeAsync("Empleados_SincronizarEuSirh_EmpleadosNuevos", New Object() {pvc_Usuario, pvc_Clave, pvd_FechaConsulta, pvn_RangoDias}, Me.Empleados_SincronizarEuSirh_EmpleadosNuevosOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmpleados_SincronizarEuSirh_EmpleadosNuevosOperationCompleted(ByVal arg As Object)
            If (Not (Me.Empleados_SincronizarEuSirh_EmpleadosNuevosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Empleados_SincronizarEuSirh_EmpleadosNuevosCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/Empleados_SincronizarEuSirh_CambioDatos", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub Empleados_SincronizarEuSirh_CambioDatos(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvd_FechaConsulta As Date, ByVal pvn_RangoDias As Integer)
            Me.Invoke("Empleados_SincronizarEuSirh_CambioDatos", New Object() {pvc_Usuario, pvc_Clave, pvd_FechaConsulta, pvn_RangoDias})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Empleados_SincronizarEuSirh_CambioDatosAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvd_FechaConsulta As Date, ByVal pvn_RangoDias As Integer)
            Me.Empleados_SincronizarEuSirh_CambioDatosAsync(pvc_Usuario, pvc_Clave, pvd_FechaConsulta, pvn_RangoDias, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Empleados_SincronizarEuSirh_CambioDatosAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvd_FechaConsulta As Date, ByVal pvn_RangoDias As Integer, ByVal userState As Object)
            If (Me.Empleados_SincronizarEuSirh_CambioDatosOperationCompleted Is Nothing) Then
                Me.Empleados_SincronizarEuSirh_CambioDatosOperationCompleted = AddressOf Me.OnEmpleados_SincronizarEuSirh_CambioDatosOperationCompleted
            End If
            Me.InvokeAsync("Empleados_SincronizarEuSirh_CambioDatos", New Object() {pvc_Usuario, pvc_Clave, pvd_FechaConsulta, pvn_RangoDias}, Me.Empleados_SincronizarEuSirh_CambioDatosOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmpleados_SincronizarEuSirh_CambioDatosOperationCompleted(ByVal arg As Object)
            If (Not (Me.Empleados_SincronizarEuSirh_CambioDatosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Empleados_SincronizarEuSirh_CambioDatosCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/Empleados_SincronizarEuSirh_TipoEmpleado", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub Empleados_SincronizarEuSirh_TipoEmpleado(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvd_FechaConsulta As Date, ByVal pvn_RangoDias As Integer)
            Me.Invoke("Empleados_SincronizarEuSirh_TipoEmpleado", New Object() {pvc_Usuario, pvc_Clave, pvd_FechaConsulta, pvn_RangoDias})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Empleados_SincronizarEuSirh_TipoEmpleadoAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvd_FechaConsulta As Date, ByVal pvn_RangoDias As Integer)
            Me.Empleados_SincronizarEuSirh_TipoEmpleadoAsync(pvc_Usuario, pvc_Clave, pvd_FechaConsulta, pvn_RangoDias, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Empleados_SincronizarEuSirh_TipoEmpleadoAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvd_FechaConsulta As Date, ByVal pvn_RangoDias As Integer, ByVal userState As Object)
            If (Me.Empleados_SincronizarEuSirh_TipoEmpleadoOperationCompleted Is Nothing) Then
                Me.Empleados_SincronizarEuSirh_TipoEmpleadoOperationCompleted = AddressOf Me.OnEmpleados_SincronizarEuSirh_TipoEmpleadoOperationCompleted
            End If
            Me.InvokeAsync("Empleados_SincronizarEuSirh_TipoEmpleado", New Object() {pvc_Usuario, pvc_Clave, pvd_FechaConsulta, pvn_RangoDias}, Me.Empleados_SincronizarEuSirh_TipoEmpleadoOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmpleados_SincronizarEuSirh_TipoEmpleadoOperationCompleted(ByVal arg As Object)
            If (Not (Me.Empleados_SincronizarEuSirh_TipoEmpleadoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Empleados_SincronizarEuSirh_TipoEmpleadoCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/Empleados_SincronizarEuSirh_CorreoEmpleado", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub Empleados_SincronizarEuSirh_CorreoEmpleado(ByVal pvc_Usuario As String, ByVal pvc_Clave As String)
            Me.Invoke("Empleados_SincronizarEuSirh_CorreoEmpleado", New Object() {pvc_Usuario, pvc_Clave})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Empleados_SincronizarEuSirh_CorreoEmpleadoAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String)
            Me.Empleados_SincronizarEuSirh_CorreoEmpleadoAsync(pvc_Usuario, pvc_Clave, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Empleados_SincronizarEuSirh_CorreoEmpleadoAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal userState As Object)
            If (Me.Empleados_SincronizarEuSirh_CorreoEmpleadoOperationCompleted Is Nothing) Then
                Me.Empleados_SincronizarEuSirh_CorreoEmpleadoOperationCompleted = AddressOf Me.OnEmpleados_SincronizarEuSirh_CorreoEmpleadoOperationCompleted
            End If
            Me.InvokeAsync("Empleados_SincronizarEuSirh_CorreoEmpleado", New Object() {pvc_Usuario, pvc_Clave}, Me.Empleados_SincronizarEuSirh_CorreoEmpleadoOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmpleados_SincronizarEuSirh_CorreoEmpleadoOperationCompleted(ByVal arg As Object)
            If (Not (Me.Empleados_SincronizarEuSirh_CorreoEmpleadoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Empleados_SincronizarEuSirh_CorreoEmpleadoCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/Empleados_Actualizacion_SIRH_EU_EmpleadoJubilado"& _ 
            "", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Empleados_Actualizacion_SIRH_EU_EmpleadoJubilado(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_NumEmpleado As String, ByVal pvc_Tipo_Identificacion As String, ByVal pvc_IdPersonal As String, ByVal pvc_Nombre As String, ByVal pvc_Apellido1 As String, ByVal pvc_Apellido2 As String, ByVal pvd_FechaNacimiento As Date) As String
            Dim results() As Object = Me.Invoke("Empleados_Actualizacion_SIRH_EU_EmpleadoJubilado", New Object() {pvc_Usuario, pvc_Clave, pvc_NumEmpleado, pvc_Tipo_Identificacion, pvc_IdPersonal, pvc_Nombre, pvc_Apellido1, pvc_Apellido2, pvd_FechaNacimiento})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Empleados_Actualizacion_SIRH_EU_EmpleadoJubiladoAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_NumEmpleado As String, ByVal pvc_Tipo_Identificacion As String, ByVal pvc_IdPersonal As String, ByVal pvc_Nombre As String, ByVal pvc_Apellido1 As String, ByVal pvc_Apellido2 As String, ByVal pvd_FechaNacimiento As Date)
            Me.Empleados_Actualizacion_SIRH_EU_EmpleadoJubiladoAsync(pvc_Usuario, pvc_Clave, pvc_NumEmpleado, pvc_Tipo_Identificacion, pvc_IdPersonal, pvc_Nombre, pvc_Apellido1, pvc_Apellido2, pvd_FechaNacimiento, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Empleados_Actualizacion_SIRH_EU_EmpleadoJubiladoAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_NumEmpleado As String, ByVal pvc_Tipo_Identificacion As String, ByVal pvc_IdPersonal As String, ByVal pvc_Nombre As String, ByVal pvc_Apellido1 As String, ByVal pvc_Apellido2 As String, ByVal pvd_FechaNacimiento As Date, ByVal userState As Object)
            If (Me.Empleados_Actualizacion_SIRH_EU_EmpleadoJubiladoOperationCompleted Is Nothing) Then
                Me.Empleados_Actualizacion_SIRH_EU_EmpleadoJubiladoOperationCompleted = AddressOf Me.OnEmpleados_Actualizacion_SIRH_EU_EmpleadoJubiladoOperationCompleted
            End If
            Me.InvokeAsync("Empleados_Actualizacion_SIRH_EU_EmpleadoJubilado", New Object() {pvc_Usuario, pvc_Clave, pvc_NumEmpleado, pvc_Tipo_Identificacion, pvc_IdPersonal, pvc_Nombre, pvc_Apellido1, pvc_Apellido2, pvd_FechaNacimiento}, Me.Empleados_Actualizacion_SIRH_EU_EmpleadoJubiladoOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmpleados_Actualizacion_SIRH_EU_EmpleadoJubiladoOperationCompleted(ByVal arg As Object)
            If (Not (Me.Empleados_Actualizacion_SIRH_EU_EmpleadoJubiladoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Empleados_Actualizacion_SIRH_EU_EmpleadoJubiladoCompleted(Me, New Empleados_Actualizacion_SIRH_EU_EmpleadoJubiladoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/Empleados_ListarEmpleadosPorRole", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Empleados_ListarEmpleadosPorRole(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_NombreRole As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Empleados_ListarEmpleadosPorRole", New Object() {pvc_Usuario, pvc_Clave, pvc_NombreRole})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Empleados_ListarEmpleadosPorRoleAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_NombreRole As String)
            Me.Empleados_ListarEmpleadosPorRoleAsync(pvc_Usuario, pvc_Clave, pvc_NombreRole, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Empleados_ListarEmpleadosPorRoleAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_NombreRole As String, ByVal userState As Object)
            If (Me.Empleados_ListarEmpleadosPorRoleOperationCompleted Is Nothing) Then
                Me.Empleados_ListarEmpleadosPorRoleOperationCompleted = AddressOf Me.OnEmpleados_ListarEmpleadosPorRoleOperationCompleted
            End If
            Me.InvokeAsync("Empleados_ListarEmpleadosPorRole", New Object() {pvc_Usuario, pvc_Clave, pvc_NombreRole}, Me.Empleados_ListarEmpleadosPorRoleOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmpleados_ListarEmpleadosPorRoleOperationCompleted(ByVal arg As Object)
            If (Not (Me.Empleados_ListarEmpleadosPorRoleCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Empleados_ListarEmpleadosPorRoleCompleted(Me, New Empleados_ListarEmpleadosPorRoleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/Funcionarios_ListarRegistrosLista", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Funcionarios_ListarRegistrosLista(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Funcionarios_ListarRegistrosLista", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Funcionarios_ListarRegistrosListaAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String)
            Me.Funcionarios_ListarRegistrosListaAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Funcionarios_ListarRegistrosListaAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String, ByVal userState As Object)
            If (Me.Funcionarios_ListarRegistrosListaOperationCompleted Is Nothing) Then
                Me.Funcionarios_ListarRegistrosListaOperationCompleted = AddressOf Me.OnFuncionarios_ListarRegistrosListaOperationCompleted
            End If
            Me.InvokeAsync("Funcionarios_ListarRegistrosLista", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden}, Me.Funcionarios_ListarRegistrosListaOperationCompleted, userState)
        End Sub
        
        Private Sub OnFuncionarios_ListarRegistrosListaOperationCompleted(ByVal arg As Object)
            If (Not (Me.Funcionarios_ListarRegistrosListaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Funcionarios_ListarRegistrosListaCompleted(Me, New Funcionarios_ListarRegistrosListaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/Funcionarios_ObtenerRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Funcionarios_ObtenerRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String) As EntFuncionario
            Dim results() As Object = Me.Invoke("Funcionarios_ObtenerRegistro", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion})
            Return CType(results(0),EntFuncionario)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Funcionarios_ObtenerRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String)
            Me.Funcionarios_ObtenerRegistroAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Funcionarios_ObtenerRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal userState As Object)
            If (Me.Funcionarios_ObtenerRegistroOperationCompleted Is Nothing) Then
                Me.Funcionarios_ObtenerRegistroOperationCompleted = AddressOf Me.OnFuncionarios_ObtenerRegistroOperationCompleted
            End If
            Me.InvokeAsync("Funcionarios_ObtenerRegistro", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion}, Me.Funcionarios_ObtenerRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnFuncionarios_ObtenerRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.Funcionarios_ObtenerRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Funcionarios_ObtenerRegistroCompleted(Me, New Funcionarios_ObtenerRegistroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/Emp_Parientes_InsertarRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub Emp_Parientes_InsertarRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Registro As EntEmp_Parientes)
            Me.Invoke("Emp_Parientes_InsertarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_Registro})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Emp_Parientes_InsertarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Registro As EntEmp_Parientes)
            Me.Emp_Parientes_InsertarRegistroAsync(pvc_Usuario, pvc_Clave, pvo_Registro, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Emp_Parientes_InsertarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Registro As EntEmp_Parientes, ByVal userState As Object)
            If (Me.Emp_Parientes_InsertarRegistroOperationCompleted Is Nothing) Then
                Me.Emp_Parientes_InsertarRegistroOperationCompleted = AddressOf Me.OnEmp_Parientes_InsertarRegistroOperationCompleted
            End If
            Me.InvokeAsync("Emp_Parientes_InsertarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_Registro}, Me.Emp_Parientes_InsertarRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmp_Parientes_InsertarRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.Emp_Parientes_InsertarRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Emp_Parientes_InsertarRegistroCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/Emp_Parientes_BorrarRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub Emp_Parientes_BorrarRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Registro As EntEmp_Parientes)
            Me.Invoke("Emp_Parientes_BorrarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_Registro})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Emp_Parientes_BorrarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Registro As EntEmp_Parientes)
            Me.Emp_Parientes_BorrarRegistroAsync(pvc_Usuario, pvc_Clave, pvo_Registro, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Emp_Parientes_BorrarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Registro As EntEmp_Parientes, ByVal userState As Object)
            If (Me.Emp_Parientes_BorrarRegistroOperationCompleted Is Nothing) Then
                Me.Emp_Parientes_BorrarRegistroOperationCompleted = AddressOf Me.OnEmp_Parientes_BorrarRegistroOperationCompleted
            End If
            Me.InvokeAsync("Emp_Parientes_BorrarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_Registro}, Me.Emp_Parientes_BorrarRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmp_Parientes_BorrarRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.Emp_Parientes_BorrarRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Emp_Parientes_BorrarRegistroCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/Emp_Parientes_ModificarRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub Emp_Parientes_ModificarRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Registro As EntEmp_Parientes)
            Me.Invoke("Emp_Parientes_ModificarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_Registro})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Emp_Parientes_ModificarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Registro As EntEmp_Parientes)
            Me.Emp_Parientes_ModificarRegistroAsync(pvc_Usuario, pvc_Clave, pvo_Registro, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Emp_Parientes_ModificarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Registro As EntEmp_Parientes, ByVal userState As Object)
            If (Me.Emp_Parientes_ModificarRegistroOperationCompleted Is Nothing) Then
                Me.Emp_Parientes_ModificarRegistroOperationCompleted = AddressOf Me.OnEmp_Parientes_ModificarRegistroOperationCompleted
            End If
            Me.InvokeAsync("Emp_Parientes_ModificarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_Registro}, Me.Emp_Parientes_ModificarRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmp_Parientes_ModificarRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.Emp_Parientes_ModificarRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Emp_Parientes_ModificarRegistroCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/Emp_Parientes_ListarRegistros", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Emp_Parientes_ListarRegistros(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Emp_Parientes_ListarRegistros", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Emp_Parientes_ListarRegistrosAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String)
            Me.Emp_Parientes_ListarRegistrosAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Emp_Parientes_ListarRegistrosAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String, ByVal userState As Object)
            If (Me.Emp_Parientes_ListarRegistrosOperationCompleted Is Nothing) Then
                Me.Emp_Parientes_ListarRegistrosOperationCompleted = AddressOf Me.OnEmp_Parientes_ListarRegistrosOperationCompleted
            End If
            Me.InvokeAsync("Emp_Parientes_ListarRegistros", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden}, Me.Emp_Parientes_ListarRegistrosOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmp_Parientes_ListarRegistrosOperationCompleted(ByVal arg As Object)
            If (Not (Me.Emp_Parientes_ListarRegistrosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Emp_Parientes_ListarRegistrosCompleted(Me, New Emp_Parientes_ListarRegistrosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/Emp_Parientes_ListarRegistrosLista", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Emp_Parientes_ListarRegistrosLista(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Emp_Parientes_ListarRegistrosLista", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Emp_Parientes_ListarRegistrosListaAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String)
            Me.Emp_Parientes_ListarRegistrosListaAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Emp_Parientes_ListarRegistrosListaAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String, ByVal userState As Object)
            If (Me.Emp_Parientes_ListarRegistrosListaOperationCompleted Is Nothing) Then
                Me.Emp_Parientes_ListarRegistrosListaOperationCompleted = AddressOf Me.OnEmp_Parientes_ListarRegistrosListaOperationCompleted
            End If
            Me.InvokeAsync("Emp_Parientes_ListarRegistrosLista", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden}, Me.Emp_Parientes_ListarRegistrosListaOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmp_Parientes_ListarRegistrosListaOperationCompleted(ByVal arg As Object)
            If (Not (Me.Emp_Parientes_ListarRegistrosListaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Emp_Parientes_ListarRegistrosListaCompleted(Me, New Emp_Parientes_ListarRegistrosListaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/Emp_Parientes_ObtenerRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Emp_Parientes_ObtenerRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String) As EntEmp_Parientes
            Dim results() As Object = Me.Invoke("Emp_Parientes_ObtenerRegistro", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion})
            Return CType(results(0),EntEmp_Parientes)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Emp_Parientes_ObtenerRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String)
            Me.Emp_Parientes_ObtenerRegistroAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Emp_Parientes_ObtenerRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal userState As Object)
            If (Me.Emp_Parientes_ObtenerRegistroOperationCompleted Is Nothing) Then
                Me.Emp_Parientes_ObtenerRegistroOperationCompleted = AddressOf Me.OnEmp_Parientes_ObtenerRegistroOperationCompleted
            End If
            Me.InvokeAsync("Emp_Parientes_ObtenerRegistro", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion}, Me.Emp_Parientes_ObtenerRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmp_Parientes_ObtenerRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.Emp_Parientes_ObtenerRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Emp_Parientes_ObtenerRegistroCompleted(Me, New Emp_Parientes_ObtenerRegistroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/Parentesco_BorrarRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub Parentesco_BorrarRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Registro As EntParentesco)
            Me.Invoke("Parentesco_BorrarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_Registro})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Parentesco_BorrarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Registro As EntParentesco)
            Me.Parentesco_BorrarRegistroAsync(pvc_Usuario, pvc_Clave, pvo_Registro, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Parentesco_BorrarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Registro As EntParentesco, ByVal userState As Object)
            If (Me.Parentesco_BorrarRegistroOperationCompleted Is Nothing) Then
                Me.Parentesco_BorrarRegistroOperationCompleted = AddressOf Me.OnParentesco_BorrarRegistroOperationCompleted
            End If
            Me.InvokeAsync("Parentesco_BorrarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_Registro}, Me.Parentesco_BorrarRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnParentesco_BorrarRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.Parentesco_BorrarRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Parentesco_BorrarRegistroCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/Parentesco_ModificarRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub Parentesco_ModificarRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Registro As EntParentesco)
            Me.Invoke("Parentesco_ModificarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_Registro})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Parentesco_ModificarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Registro As EntParentesco)
            Me.Parentesco_ModificarRegistroAsync(pvc_Usuario, pvc_Clave, pvo_Registro, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Parentesco_ModificarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Registro As EntParentesco, ByVal userState As Object)
            If (Me.Parentesco_ModificarRegistroOperationCompleted Is Nothing) Then
                Me.Parentesco_ModificarRegistroOperationCompleted = AddressOf Me.OnParentesco_ModificarRegistroOperationCompleted
            End If
            Me.InvokeAsync("Parentesco_ModificarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_Registro}, Me.Parentesco_ModificarRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnParentesco_ModificarRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.Parentesco_ModificarRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Parentesco_ModificarRegistroCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/Parentesco_InsertarRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Parentesco_InsertarRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Registro As EntParentesco) As Integer
            Dim results() As Object = Me.Invoke("Parentesco_InsertarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_Registro})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Parentesco_InsertarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Registro As EntParentesco)
            Me.Parentesco_InsertarRegistroAsync(pvc_Usuario, pvc_Clave, pvo_Registro, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Parentesco_InsertarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Registro As EntParentesco, ByVal userState As Object)
            If (Me.Parentesco_InsertarRegistroOperationCompleted Is Nothing) Then
                Me.Parentesco_InsertarRegistroOperationCompleted = AddressOf Me.OnParentesco_InsertarRegistroOperationCompleted
            End If
            Me.InvokeAsync("Parentesco_InsertarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_Registro}, Me.Parentesco_InsertarRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnParentesco_InsertarRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.Parentesco_InsertarRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Parentesco_InsertarRegistroCompleted(Me, New Parentesco_InsertarRegistroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/Parentesco_ListarRegistros", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Parentesco_ListarRegistros(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Parentesco_ListarRegistros", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Parentesco_ListarRegistrosAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String)
            Me.Parentesco_ListarRegistrosAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Parentesco_ListarRegistrosAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String, ByVal userState As Object)
            If (Me.Parentesco_ListarRegistrosOperationCompleted Is Nothing) Then
                Me.Parentesco_ListarRegistrosOperationCompleted = AddressOf Me.OnParentesco_ListarRegistrosOperationCompleted
            End If
            Me.InvokeAsync("Parentesco_ListarRegistros", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden}, Me.Parentesco_ListarRegistrosOperationCompleted, userState)
        End Sub
        
        Private Sub OnParentesco_ListarRegistrosOperationCompleted(ByVal arg As Object)
            If (Not (Me.Parentesco_ListarRegistrosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Parentesco_ListarRegistrosCompleted(Me, New Parentesco_ListarRegistrosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/Parentesco_ListarRegistrosLista", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Parentesco_ListarRegistrosLista(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Parentesco_ListarRegistrosLista", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Parentesco_ListarRegistrosListaAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String)
            Me.Parentesco_ListarRegistrosListaAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Parentesco_ListarRegistrosListaAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String, ByVal userState As Object)
            If (Me.Parentesco_ListarRegistrosListaOperationCompleted Is Nothing) Then
                Me.Parentesco_ListarRegistrosListaOperationCompleted = AddressOf Me.OnParentesco_ListarRegistrosListaOperationCompleted
            End If
            Me.InvokeAsync("Parentesco_ListarRegistrosLista", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden}, Me.Parentesco_ListarRegistrosListaOperationCompleted, userState)
        End Sub
        
        Private Sub OnParentesco_ListarRegistrosListaOperationCompleted(ByVal arg As Object)
            If (Not (Me.Parentesco_ListarRegistrosListaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Parentesco_ListarRegistrosListaCompleted(Me, New Parentesco_ListarRegistrosListaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/Parentesco_ObtenerRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Parentesco_ObtenerRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String) As EntParentesco
            Dim results() As Object = Me.Invoke("Parentesco_ObtenerRegistro", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion})
            Return CType(results(0),EntParentesco)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Parentesco_ObtenerRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String)
            Me.Parentesco_ObtenerRegistroAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Parentesco_ObtenerRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal userState As Object)
            If (Me.Parentesco_ObtenerRegistroOperationCompleted Is Nothing) Then
                Me.Parentesco_ObtenerRegistroOperationCompleted = AddressOf Me.OnParentesco_ObtenerRegistroOperationCompleted
            End If
            Me.InvokeAsync("Parentesco_ObtenerRegistro", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion}, Me.Parentesco_ObtenerRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnParentesco_ObtenerRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.Parentesco_ObtenerRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Parentesco_ObtenerRegistroCompleted(Me, New Parentesco_ObtenerRegistroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/Requisitos_BorrarRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub Requisitos_BorrarRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Registro As EntRequisitos)
            Me.Invoke("Requisitos_BorrarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_Registro})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Requisitos_BorrarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Registro As EntRequisitos)
            Me.Requisitos_BorrarRegistroAsync(pvc_Usuario, pvc_Clave, pvo_Registro, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Requisitos_BorrarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Registro As EntRequisitos, ByVal userState As Object)
            If (Me.Requisitos_BorrarRegistroOperationCompleted Is Nothing) Then
                Me.Requisitos_BorrarRegistroOperationCompleted = AddressOf Me.OnRequisitos_BorrarRegistroOperationCompleted
            End If
            Me.InvokeAsync("Requisitos_BorrarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_Registro}, Me.Requisitos_BorrarRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnRequisitos_BorrarRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.Requisitos_BorrarRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Requisitos_BorrarRegistroCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/Requisitos_ModificarRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub Requisitos_ModificarRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Registro As EntRequisitos)
            Me.Invoke("Requisitos_ModificarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_Registro})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Requisitos_ModificarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Registro As EntRequisitos)
            Me.Requisitos_ModificarRegistroAsync(pvc_Usuario, pvc_Clave, pvo_Registro, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Requisitos_ModificarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Registro As EntRequisitos, ByVal userState As Object)
            If (Me.Requisitos_ModificarRegistroOperationCompleted Is Nothing) Then
                Me.Requisitos_ModificarRegistroOperationCompleted = AddressOf Me.OnRequisitos_ModificarRegistroOperationCompleted
            End If
            Me.InvokeAsync("Requisitos_ModificarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_Registro}, Me.Requisitos_ModificarRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnRequisitos_ModificarRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.Requisitos_ModificarRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Requisitos_ModificarRegistroCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/Requisitos_InsertarRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Requisitos_InsertarRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Registro As EntRequisitos) As Integer
            Dim results() As Object = Me.Invoke("Requisitos_InsertarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_Registro})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Requisitos_InsertarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Registro As EntRequisitos)
            Me.Requisitos_InsertarRegistroAsync(pvc_Usuario, pvc_Clave, pvo_Registro, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Requisitos_InsertarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Registro As EntRequisitos, ByVal userState As Object)
            If (Me.Requisitos_InsertarRegistroOperationCompleted Is Nothing) Then
                Me.Requisitos_InsertarRegistroOperationCompleted = AddressOf Me.OnRequisitos_InsertarRegistroOperationCompleted
            End If
            Me.InvokeAsync("Requisitos_InsertarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_Registro}, Me.Requisitos_InsertarRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnRequisitos_InsertarRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.Requisitos_InsertarRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Requisitos_InsertarRegistroCompleted(Me, New Requisitos_InsertarRegistroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/Requisitos_ListarRegistros", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Requisitos_ListarRegistros(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Requisitos_ListarRegistros", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Requisitos_ListarRegistrosAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String)
            Me.Requisitos_ListarRegistrosAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Requisitos_ListarRegistrosAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String, ByVal userState As Object)
            If (Me.Requisitos_ListarRegistrosOperationCompleted Is Nothing) Then
                Me.Requisitos_ListarRegistrosOperationCompleted = AddressOf Me.OnRequisitos_ListarRegistrosOperationCompleted
            End If
            Me.InvokeAsync("Requisitos_ListarRegistros", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden}, Me.Requisitos_ListarRegistrosOperationCompleted, userState)
        End Sub
        
        Private Sub OnRequisitos_ListarRegistrosOperationCompleted(ByVal arg As Object)
            If (Not (Me.Requisitos_ListarRegistrosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Requisitos_ListarRegistrosCompleted(Me, New Requisitos_ListarRegistrosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/Requisitos_ListarRegistrosLista", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Requisitos_ListarRegistrosLista(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Requisitos_ListarRegistrosLista", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Requisitos_ListarRegistrosListaAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String)
            Me.Requisitos_ListarRegistrosListaAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Requisitos_ListarRegistrosListaAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String, ByVal userState As Object)
            If (Me.Requisitos_ListarRegistrosListaOperationCompleted Is Nothing) Then
                Me.Requisitos_ListarRegistrosListaOperationCompleted = AddressOf Me.OnRequisitos_ListarRegistrosListaOperationCompleted
            End If
            Me.InvokeAsync("Requisitos_ListarRegistrosLista", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden}, Me.Requisitos_ListarRegistrosListaOperationCompleted, userState)
        End Sub
        
        Private Sub OnRequisitos_ListarRegistrosListaOperationCompleted(ByVal arg As Object)
            If (Not (Me.Requisitos_ListarRegistrosListaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Requisitos_ListarRegistrosListaCompleted(Me, New Requisitos_ListarRegistrosListaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/Requisitos_ObtenerRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Requisitos_ObtenerRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String) As EntRequisitos
            Dim results() As Object = Me.Invoke("Requisitos_ObtenerRegistro", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion})
            Return CType(results(0),EntRequisitos)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Requisitos_ObtenerRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String)
            Me.Requisitos_ObtenerRegistroAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Requisitos_ObtenerRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal userState As Object)
            If (Me.Requisitos_ObtenerRegistroOperationCompleted Is Nothing) Then
                Me.Requisitos_ObtenerRegistroOperationCompleted = AddressOf Me.OnRequisitos_ObtenerRegistroOperationCompleted
            End If
            Me.InvokeAsync("Requisitos_ObtenerRegistro", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion}, Me.Requisitos_ObtenerRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnRequisitos_ObtenerRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.Requisitos_ObtenerRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Requisitos_ObtenerRegistroCompleted(Me, New Requisitos_ObtenerRegistroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/Emp_Requisitos_InsertarRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub Emp_Requisitos_InsertarRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Registro As EntEmp_Requisitos)
            Me.Invoke("Emp_Requisitos_InsertarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_Registro})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Emp_Requisitos_InsertarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Registro As EntEmp_Requisitos)
            Me.Emp_Requisitos_InsertarRegistroAsync(pvc_Usuario, pvc_Clave, pvo_Registro, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Emp_Requisitos_InsertarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Registro As EntEmp_Requisitos, ByVal userState As Object)
            If (Me.Emp_Requisitos_InsertarRegistroOperationCompleted Is Nothing) Then
                Me.Emp_Requisitos_InsertarRegistroOperationCompleted = AddressOf Me.OnEmp_Requisitos_InsertarRegistroOperationCompleted
            End If
            Me.InvokeAsync("Emp_Requisitos_InsertarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_Registro}, Me.Emp_Requisitos_InsertarRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmp_Requisitos_InsertarRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.Emp_Requisitos_InsertarRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Emp_Requisitos_InsertarRegistroCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/Emp_Requisitos_BorrarRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub Emp_Requisitos_BorrarRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Registro As EntEmp_Requisitos)
            Me.Invoke("Emp_Requisitos_BorrarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_Registro})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Emp_Requisitos_BorrarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Registro As EntEmp_Requisitos)
            Me.Emp_Requisitos_BorrarRegistroAsync(pvc_Usuario, pvc_Clave, pvo_Registro, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Emp_Requisitos_BorrarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Registro As EntEmp_Requisitos, ByVal userState As Object)
            If (Me.Emp_Requisitos_BorrarRegistroOperationCompleted Is Nothing) Then
                Me.Emp_Requisitos_BorrarRegistroOperationCompleted = AddressOf Me.OnEmp_Requisitos_BorrarRegistroOperationCompleted
            End If
            Me.InvokeAsync("Emp_Requisitos_BorrarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_Registro}, Me.Emp_Requisitos_BorrarRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmp_Requisitos_BorrarRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.Emp_Requisitos_BorrarRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Emp_Requisitos_BorrarRegistroCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/Emp_Requisitos_ModificarRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub Emp_Requisitos_ModificarRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Registro As EntEmp_Requisitos)
            Me.Invoke("Emp_Requisitos_ModificarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_Registro})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Emp_Requisitos_ModificarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Registro As EntEmp_Requisitos)
            Me.Emp_Requisitos_ModificarRegistroAsync(pvc_Usuario, pvc_Clave, pvo_Registro, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Emp_Requisitos_ModificarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Registro As EntEmp_Requisitos, ByVal userState As Object)
            If (Me.Emp_Requisitos_ModificarRegistroOperationCompleted Is Nothing) Then
                Me.Emp_Requisitos_ModificarRegistroOperationCompleted = AddressOf Me.OnEmp_Requisitos_ModificarRegistroOperationCompleted
            End If
            Me.InvokeAsync("Emp_Requisitos_ModificarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_Registro}, Me.Emp_Requisitos_ModificarRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmp_Requisitos_ModificarRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.Emp_Requisitos_ModificarRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Emp_Requisitos_ModificarRegistroCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/Emp_Requisitos_ListarRegistros", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Emp_Requisitos_ListarRegistros(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Emp_Requisitos_ListarRegistros", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Emp_Requisitos_ListarRegistrosAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String)
            Me.Emp_Requisitos_ListarRegistrosAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Emp_Requisitos_ListarRegistrosAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String, ByVal userState As Object)
            If (Me.Emp_Requisitos_ListarRegistrosOperationCompleted Is Nothing) Then
                Me.Emp_Requisitos_ListarRegistrosOperationCompleted = AddressOf Me.OnEmp_Requisitos_ListarRegistrosOperationCompleted
            End If
            Me.InvokeAsync("Emp_Requisitos_ListarRegistros", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden}, Me.Emp_Requisitos_ListarRegistrosOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmp_Requisitos_ListarRegistrosOperationCompleted(ByVal arg As Object)
            If (Not (Me.Emp_Requisitos_ListarRegistrosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Emp_Requisitos_ListarRegistrosCompleted(Me, New Emp_Requisitos_ListarRegistrosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/Emp_Requisitos_ListarRegistrosLista", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Emp_Requisitos_ListarRegistrosLista(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Emp_Requisitos_ListarRegistrosLista", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Emp_Requisitos_ListarRegistrosListaAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String)
            Me.Emp_Requisitos_ListarRegistrosListaAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Emp_Requisitos_ListarRegistrosListaAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String, ByVal userState As Object)
            If (Me.Emp_Requisitos_ListarRegistrosListaOperationCompleted Is Nothing) Then
                Me.Emp_Requisitos_ListarRegistrosListaOperationCompleted = AddressOf Me.OnEmp_Requisitos_ListarRegistrosListaOperationCompleted
            End If
            Me.InvokeAsync("Emp_Requisitos_ListarRegistrosLista", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden}, Me.Emp_Requisitos_ListarRegistrosListaOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmp_Requisitos_ListarRegistrosListaOperationCompleted(ByVal arg As Object)
            If (Not (Me.Emp_Requisitos_ListarRegistrosListaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Emp_Requisitos_ListarRegistrosListaCompleted(Me, New Emp_Requisitos_ListarRegistrosListaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/Emp_Requisitos_ObtenerRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Emp_Requisitos_ObtenerRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String) As EntEmp_Requisitos
            Dim results() As Object = Me.Invoke("Emp_Requisitos_ObtenerRegistro", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion})
            Return CType(results(0),EntEmp_Requisitos)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Emp_Requisitos_ObtenerRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String)
            Me.Emp_Requisitos_ObtenerRegistroAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Emp_Requisitos_ObtenerRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal userState As Object)
            If (Me.Emp_Requisitos_ObtenerRegistroOperationCompleted Is Nothing) Then
                Me.Emp_Requisitos_ObtenerRegistroOperationCompleted = AddressOf Me.OnEmp_Requisitos_ObtenerRegistroOperationCompleted
            End If
            Me.InvokeAsync("Emp_Requisitos_ObtenerRegistro", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion}, Me.Emp_Requisitos_ObtenerRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmp_Requisitos_ObtenerRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.Emp_Requisitos_ObtenerRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Emp_Requisitos_ObtenerRegistroCompleted(Me, New Emp_Requisitos_ObtenerRegistroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/Emp_Requisitos_Rpt_Curriculo", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Emp_Requisitos_Rpt_Curriculo(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Tipo As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Emp_Requisitos_Rpt_Curriculo", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Tipo})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Emp_Requisitos_Rpt_CurriculoAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Tipo As String)
            Me.Emp_Requisitos_Rpt_CurriculoAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Tipo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Emp_Requisitos_Rpt_CurriculoAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Tipo As String, ByVal userState As Object)
            If (Me.Emp_Requisitos_Rpt_CurriculoOperationCompleted Is Nothing) Then
                Me.Emp_Requisitos_Rpt_CurriculoOperationCompleted = AddressOf Me.OnEmp_Requisitos_Rpt_CurriculoOperationCompleted
            End If
            Me.InvokeAsync("Emp_Requisitos_Rpt_Curriculo", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Tipo}, Me.Emp_Requisitos_Rpt_CurriculoOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmp_Requisitos_Rpt_CurriculoOperationCompleted(ByVal arg As Object)
            If (Not (Me.Emp_Requisitos_Rpt_CurriculoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Emp_Requisitos_Rpt_CurriculoCompleted(Me, New Emp_Requisitos_Rpt_CurriculoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/Emp_Licencia_Conducir_ListarRegistros", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Emp_Licencia_Conducir_ListarRegistros(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Emp_Licencia_Conducir_ListarRegistros", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Emp_Licencia_Conducir_ListarRegistrosAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String)
            Me.Emp_Licencia_Conducir_ListarRegistrosAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Emp_Licencia_Conducir_ListarRegistrosAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String, ByVal userState As Object)
            If (Me.Emp_Licencia_Conducir_ListarRegistrosOperationCompleted Is Nothing) Then
                Me.Emp_Licencia_Conducir_ListarRegistrosOperationCompleted = AddressOf Me.OnEmp_Licencia_Conducir_ListarRegistrosOperationCompleted
            End If
            Me.InvokeAsync("Emp_Licencia_Conducir_ListarRegistros", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden}, Me.Emp_Licencia_Conducir_ListarRegistrosOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmp_Licencia_Conducir_ListarRegistrosOperationCompleted(ByVal arg As Object)
            If (Not (Me.Emp_Licencia_Conducir_ListarRegistrosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Emp_Licencia_Conducir_ListarRegistrosCompleted(Me, New Emp_Licencia_Conducir_ListarRegistrosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/Emp_Licencia_Conducir_ListarRegistrosLista", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Emp_Licencia_Conducir_ListarRegistrosLista(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Emp_Licencia_Conducir_ListarRegistrosLista", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Emp_Licencia_Conducir_ListarRegistrosListaAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String)
            Me.Emp_Licencia_Conducir_ListarRegistrosListaAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Emp_Licencia_Conducir_ListarRegistrosListaAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String, ByVal userState As Object)
            If (Me.Emp_Licencia_Conducir_ListarRegistrosListaOperationCompleted Is Nothing) Then
                Me.Emp_Licencia_Conducir_ListarRegistrosListaOperationCompleted = AddressOf Me.OnEmp_Licencia_Conducir_ListarRegistrosListaOperationCompleted
            End If
            Me.InvokeAsync("Emp_Licencia_Conducir_ListarRegistrosLista", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden}, Me.Emp_Licencia_Conducir_ListarRegistrosListaOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmp_Licencia_Conducir_ListarRegistrosListaOperationCompleted(ByVal arg As Object)
            If (Not (Me.Emp_Licencia_Conducir_ListarRegistrosListaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Emp_Licencia_Conducir_ListarRegistrosListaCompleted(Me, New Emp_Licencia_Conducir_ListarRegistrosListaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/Emp_Licencia_Conducir_ObtenerRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Emp_Licencia_Conducir_ObtenerRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String) As EntEmp_Licencia_Conducir
            Dim results() As Object = Me.Invoke("Emp_Licencia_Conducir_ObtenerRegistro", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion})
            Return CType(results(0),EntEmp_Licencia_Conducir)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Emp_Licencia_Conducir_ObtenerRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String)
            Me.Emp_Licencia_Conducir_ObtenerRegistroAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Emp_Licencia_Conducir_ObtenerRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal userState As Object)
            If (Me.Emp_Licencia_Conducir_ObtenerRegistroOperationCompleted Is Nothing) Then
                Me.Emp_Licencia_Conducir_ObtenerRegistroOperationCompleted = AddressOf Me.OnEmp_Licencia_Conducir_ObtenerRegistroOperationCompleted
            End If
            Me.InvokeAsync("Emp_Licencia_Conducir_ObtenerRegistro", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion}, Me.Emp_Licencia_Conducir_ObtenerRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmp_Licencia_Conducir_ObtenerRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.Emp_Licencia_Conducir_ObtenerRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Emp_Licencia_Conducir_ObtenerRegistroCompleted(Me, New Emp_Licencia_Conducir_ObtenerRegistroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/Emp_Licencia_Conducir_InsertarRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub Emp_Licencia_Conducir_InsertarRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Emp_Licencia_Conducir As EntEmp_Licencia_Conducir)
            Me.Invoke("Emp_Licencia_Conducir_InsertarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_Emp_Licencia_Conducir})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Emp_Licencia_Conducir_InsertarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Emp_Licencia_Conducir As EntEmp_Licencia_Conducir)
            Me.Emp_Licencia_Conducir_InsertarRegistroAsync(pvc_Usuario, pvc_Clave, pvo_Emp_Licencia_Conducir, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Emp_Licencia_Conducir_InsertarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Emp_Licencia_Conducir As EntEmp_Licencia_Conducir, ByVal userState As Object)
            If (Me.Emp_Licencia_Conducir_InsertarRegistroOperationCompleted Is Nothing) Then
                Me.Emp_Licencia_Conducir_InsertarRegistroOperationCompleted = AddressOf Me.OnEmp_Licencia_Conducir_InsertarRegistroOperationCompleted
            End If
            Me.InvokeAsync("Emp_Licencia_Conducir_InsertarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_Emp_Licencia_Conducir}, Me.Emp_Licencia_Conducir_InsertarRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmp_Licencia_Conducir_InsertarRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.Emp_Licencia_Conducir_InsertarRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Emp_Licencia_Conducir_InsertarRegistroCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/Emp_Licencia_Conducir_BorrarRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub Emp_Licencia_Conducir_BorrarRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Emp_Licencia_Conducir As EntEmp_Licencia_Conducir)
            Me.Invoke("Emp_Licencia_Conducir_BorrarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_Emp_Licencia_Conducir})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Emp_Licencia_Conducir_BorrarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Emp_Licencia_Conducir As EntEmp_Licencia_Conducir)
            Me.Emp_Licencia_Conducir_BorrarRegistroAsync(pvc_Usuario, pvc_Clave, pvo_Emp_Licencia_Conducir, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Emp_Licencia_Conducir_BorrarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Emp_Licencia_Conducir As EntEmp_Licencia_Conducir, ByVal userState As Object)
            If (Me.Emp_Licencia_Conducir_BorrarRegistroOperationCompleted Is Nothing) Then
                Me.Emp_Licencia_Conducir_BorrarRegistroOperationCompleted = AddressOf Me.OnEmp_Licencia_Conducir_BorrarRegistroOperationCompleted
            End If
            Me.InvokeAsync("Emp_Licencia_Conducir_BorrarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_Emp_Licencia_Conducir}, Me.Emp_Licencia_Conducir_BorrarRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmp_Licencia_Conducir_BorrarRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.Emp_Licencia_Conducir_BorrarRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Emp_Licencia_Conducir_BorrarRegistroCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/Emp_Licencia_Conducir_ModificarRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub Emp_Licencia_Conducir_ModificarRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Emp_Licencia_Conducir As EntEmp_Licencia_Conducir)
            Me.Invoke("Emp_Licencia_Conducir_ModificarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_Emp_Licencia_Conducir})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Emp_Licencia_Conducir_ModificarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Emp_Licencia_Conducir As EntEmp_Licencia_Conducir)
            Me.Emp_Licencia_Conducir_ModificarRegistroAsync(pvc_Usuario, pvc_Clave, pvo_Emp_Licencia_Conducir, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Emp_Licencia_Conducir_ModificarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Emp_Licencia_Conducir As EntEmp_Licencia_Conducir, ByVal userState As Object)
            If (Me.Emp_Licencia_Conducir_ModificarRegistroOperationCompleted Is Nothing) Then
                Me.Emp_Licencia_Conducir_ModificarRegistroOperationCompleted = AddressOf Me.OnEmp_Licencia_Conducir_ModificarRegistroOperationCompleted
            End If
            Me.InvokeAsync("Emp_Licencia_Conducir_ModificarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_Emp_Licencia_Conducir}, Me.Emp_Licencia_Conducir_ModificarRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmp_Licencia_Conducir_ModificarRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.Emp_Licencia_Conducir_ModificarRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Emp_Licencia_Conducir_ModificarRegistroCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/Licencia_Conducir_Rpt_Curriculo", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Licencia_Conducir_Rpt_Curriculo(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Licencia_Conducir_Rpt_Curriculo", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Licencia_Conducir_Rpt_CurriculoAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String)
            Me.Licencia_Conducir_Rpt_CurriculoAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Licencia_Conducir_Rpt_CurriculoAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal userState As Object)
            If (Me.Licencia_Conducir_Rpt_CurriculoOperationCompleted Is Nothing) Then
                Me.Licencia_Conducir_Rpt_CurriculoOperationCompleted = AddressOf Me.OnLicencia_Conducir_Rpt_CurriculoOperationCompleted
            End If
            Me.InvokeAsync("Licencia_Conducir_Rpt_Curriculo", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion}, Me.Licencia_Conducir_Rpt_CurriculoOperationCompleted, userState)
        End Sub
        
        Private Sub OnLicencia_Conducir_Rpt_CurriculoOperationCompleted(ByVal arg As Object)
            If (Not (Me.Licencia_Conducir_Rpt_CurriculoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Licencia_Conducir_Rpt_CurriculoCompleted(Me, New Licencia_Conducir_Rpt_CurriculoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/Provincia_ListarRegistros", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Provincia_ListarRegistros(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Provincia_ListarRegistros", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Provincia_ListarRegistrosAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String)
            Me.Provincia_ListarRegistrosAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Provincia_ListarRegistrosAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String, ByVal userState As Object)
            If (Me.Provincia_ListarRegistrosOperationCompleted Is Nothing) Then
                Me.Provincia_ListarRegistrosOperationCompleted = AddressOf Me.OnProvincia_ListarRegistrosOperationCompleted
            End If
            Me.InvokeAsync("Provincia_ListarRegistros", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden}, Me.Provincia_ListarRegistrosOperationCompleted, userState)
        End Sub
        
        Private Sub OnProvincia_ListarRegistrosOperationCompleted(ByVal arg As Object)
            If (Not (Me.Provincia_ListarRegistrosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Provincia_ListarRegistrosCompleted(Me, New Provincia_ListarRegistrosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/Provincia_ListarRegistrosLista", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Provincia_ListarRegistrosLista(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Provincia_ListarRegistrosLista", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Provincia_ListarRegistrosListaAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String)
            Me.Provincia_ListarRegistrosListaAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Provincia_ListarRegistrosListaAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String, ByVal userState As Object)
            If (Me.Provincia_ListarRegistrosListaOperationCompleted Is Nothing) Then
                Me.Provincia_ListarRegistrosListaOperationCompleted = AddressOf Me.OnProvincia_ListarRegistrosListaOperationCompleted
            End If
            Me.InvokeAsync("Provincia_ListarRegistrosLista", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden}, Me.Provincia_ListarRegistrosListaOperationCompleted, userState)
        End Sub
        
        Private Sub OnProvincia_ListarRegistrosListaOperationCompleted(ByVal arg As Object)
            If (Not (Me.Provincia_ListarRegistrosListaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Provincia_ListarRegistrosListaCompleted(Me, New Provincia_ListarRegistrosListaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/EU_UNIDAD_InsertarRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EU_UNIDAD_InsertarRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Registro As EntEU_UNIDAD) As Integer
            Dim results() As Object = Me.Invoke("EU_UNIDAD_InsertarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_Registro})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EU_UNIDAD_InsertarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Registro As EntEU_UNIDAD)
            Me.EU_UNIDAD_InsertarRegistroAsync(pvc_Usuario, pvc_Clave, pvo_Registro, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EU_UNIDAD_InsertarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Registro As EntEU_UNIDAD, ByVal userState As Object)
            If (Me.EU_UNIDAD_InsertarRegistroOperationCompleted Is Nothing) Then
                Me.EU_UNIDAD_InsertarRegistroOperationCompleted = AddressOf Me.OnEU_UNIDAD_InsertarRegistroOperationCompleted
            End If
            Me.InvokeAsync("EU_UNIDAD_InsertarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_Registro}, Me.EU_UNIDAD_InsertarRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnEU_UNIDAD_InsertarRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.EU_UNIDAD_InsertarRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EU_UNIDAD_InsertarRegistroCompleted(Me, New EU_UNIDAD_InsertarRegistroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/EU_UNIDAD_BorrarRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EU_UNIDAD_BorrarRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Registro As EntEU_UNIDAD) As Integer
            Dim results() As Object = Me.Invoke("EU_UNIDAD_BorrarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_Registro})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EU_UNIDAD_BorrarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Registro As EntEU_UNIDAD)
            Me.EU_UNIDAD_BorrarRegistroAsync(pvc_Usuario, pvc_Clave, pvo_Registro, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EU_UNIDAD_BorrarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Registro As EntEU_UNIDAD, ByVal userState As Object)
            If (Me.EU_UNIDAD_BorrarRegistroOperationCompleted Is Nothing) Then
                Me.EU_UNIDAD_BorrarRegistroOperationCompleted = AddressOf Me.OnEU_UNIDAD_BorrarRegistroOperationCompleted
            End If
            Me.InvokeAsync("EU_UNIDAD_BorrarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_Registro}, Me.EU_UNIDAD_BorrarRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnEU_UNIDAD_BorrarRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.EU_UNIDAD_BorrarRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EU_UNIDAD_BorrarRegistroCompleted(Me, New EU_UNIDAD_BorrarRegistroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/EU_UNIDAD_ModificarRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EU_UNIDAD_ModificarRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Registro As EntEU_UNIDAD) As Integer
            Dim results() As Object = Me.Invoke("EU_UNIDAD_ModificarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_Registro})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EU_UNIDAD_ModificarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Registro As EntEU_UNIDAD)
            Me.EU_UNIDAD_ModificarRegistroAsync(pvc_Usuario, pvc_Clave, pvo_Registro, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EU_UNIDAD_ModificarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Registro As EntEU_UNIDAD, ByVal userState As Object)
            If (Me.EU_UNIDAD_ModificarRegistroOperationCompleted Is Nothing) Then
                Me.EU_UNIDAD_ModificarRegistroOperationCompleted = AddressOf Me.OnEU_UNIDAD_ModificarRegistroOperationCompleted
            End If
            Me.InvokeAsync("EU_UNIDAD_ModificarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_Registro}, Me.EU_UNIDAD_ModificarRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnEU_UNIDAD_ModificarRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.EU_UNIDAD_ModificarRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EU_UNIDAD_ModificarRegistroCompleted(Me, New EU_UNIDAD_ModificarRegistroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/EU_UNIDAD_ListarRegistros", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EU_UNIDAD_ListarRegistros(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("EU_UNIDAD_ListarRegistros", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EU_UNIDAD_ListarRegistrosAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String)
            Me.EU_UNIDAD_ListarRegistrosAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EU_UNIDAD_ListarRegistrosAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String, ByVal userState As Object)
            If (Me.EU_UNIDAD_ListarRegistrosOperationCompleted Is Nothing) Then
                Me.EU_UNIDAD_ListarRegistrosOperationCompleted = AddressOf Me.OnEU_UNIDAD_ListarRegistrosOperationCompleted
            End If
            Me.InvokeAsync("EU_UNIDAD_ListarRegistros", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden}, Me.EU_UNIDAD_ListarRegistrosOperationCompleted, userState)
        End Sub
        
        Private Sub OnEU_UNIDAD_ListarRegistrosOperationCompleted(ByVal arg As Object)
            If (Not (Me.EU_UNIDAD_ListarRegistrosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EU_UNIDAD_ListarRegistrosCompleted(Me, New EU_UNIDAD_ListarRegistrosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/EU_UNIDAD_ListarRegistrosLista", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EU_UNIDAD_ListarRegistrosLista(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("EU_UNIDAD_ListarRegistrosLista", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EU_UNIDAD_ListarRegistrosListaAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String)
            Me.EU_UNIDAD_ListarRegistrosListaAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EU_UNIDAD_ListarRegistrosListaAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String, ByVal userState As Object)
            If (Me.EU_UNIDAD_ListarRegistrosListaOperationCompleted Is Nothing) Then
                Me.EU_UNIDAD_ListarRegistrosListaOperationCompleted = AddressOf Me.OnEU_UNIDAD_ListarRegistrosListaOperationCompleted
            End If
            Me.InvokeAsync("EU_UNIDAD_ListarRegistrosLista", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden}, Me.EU_UNIDAD_ListarRegistrosListaOperationCompleted, userState)
        End Sub
        
        Private Sub OnEU_UNIDAD_ListarRegistrosListaOperationCompleted(ByVal arg As Object)
            If (Not (Me.EU_UNIDAD_ListarRegistrosListaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EU_UNIDAD_ListarRegistrosListaCompleted(Me, New EU_UNIDAD_ListarRegistrosListaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/EU_UNIDAD_ObtenerRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EU_UNIDAD_ObtenerRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String) As EntEU_UNIDAD
            Dim results() As Object = Me.Invoke("EU_UNIDAD_ObtenerRegistro", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion})
            Return CType(results(0),EntEU_UNIDAD)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EU_UNIDAD_ObtenerRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String)
            Me.EU_UNIDAD_ObtenerRegistroAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EU_UNIDAD_ObtenerRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal userState As Object)
            If (Me.EU_UNIDAD_ObtenerRegistroOperationCompleted Is Nothing) Then
                Me.EU_UNIDAD_ObtenerRegistroOperationCompleted = AddressOf Me.OnEU_UNIDAD_ObtenerRegistroOperationCompleted
            End If
            Me.InvokeAsync("EU_UNIDAD_ObtenerRegistro", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion}, Me.EU_UNIDAD_ObtenerRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnEU_UNIDAD_ObtenerRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.EU_UNIDAD_ObtenerRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EU_UNIDAD_ObtenerRegistroCompleted(Me, New EU_UNIDAD_ObtenerRegistroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/Carreras_ListarRegistros", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Carreras_ListarRegistros(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Carreras_ListarRegistros", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Carreras_ListarRegistrosAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String)
            Me.Carreras_ListarRegistrosAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Carreras_ListarRegistrosAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String, ByVal userState As Object)
            If (Me.Carreras_ListarRegistrosOperationCompleted Is Nothing) Then
                Me.Carreras_ListarRegistrosOperationCompleted = AddressOf Me.OnCarreras_ListarRegistrosOperationCompleted
            End If
            Me.InvokeAsync("Carreras_ListarRegistros", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden}, Me.Carreras_ListarRegistrosOperationCompleted, userState)
        End Sub
        
        Private Sub OnCarreras_ListarRegistrosOperationCompleted(ByVal arg As Object)
            If (Not (Me.Carreras_ListarRegistrosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Carreras_ListarRegistrosCompleted(Me, New Carreras_ListarRegistrosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/Carreras_ListarRegistrosLista", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Carreras_ListarRegistrosLista(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Carreras_ListarRegistrosLista", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Carreras_ListarRegistrosListaAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String)
            Me.Carreras_ListarRegistrosListaAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Carreras_ListarRegistrosListaAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String, ByVal userState As Object)
            If (Me.Carreras_ListarRegistrosListaOperationCompleted Is Nothing) Then
                Me.Carreras_ListarRegistrosListaOperationCompleted = AddressOf Me.OnCarreras_ListarRegistrosListaOperationCompleted
            End If
            Me.InvokeAsync("Carreras_ListarRegistrosLista", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden}, Me.Carreras_ListarRegistrosListaOperationCompleted, userState)
        End Sub
        
        Private Sub OnCarreras_ListarRegistrosListaOperationCompleted(ByVal arg As Object)
            If (Not (Me.Carreras_ListarRegistrosListaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Carreras_ListarRegistrosListaCompleted(Me, New Carreras_ListarRegistrosListaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/Carreras_ObtenerRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Carreras_ObtenerRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String) As EntCarreras
            Dim results() As Object = Me.Invoke("Carreras_ObtenerRegistro", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion})
            Return CType(results(0),EntCarreras)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Carreras_ObtenerRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String)
            Me.Carreras_ObtenerRegistroAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Carreras_ObtenerRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal userState As Object)
            If (Me.Carreras_ObtenerRegistroOperationCompleted Is Nothing) Then
                Me.Carreras_ObtenerRegistroOperationCompleted = AddressOf Me.OnCarreras_ObtenerRegistroOperationCompleted
            End If
            Me.InvokeAsync("Carreras_ObtenerRegistro", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion}, Me.Carreras_ObtenerRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnCarreras_ObtenerRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.Carreras_ObtenerRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Carreras_ObtenerRegistroCompleted(Me, New Carreras_ObtenerRegistroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/Carreras_InsertarRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub Carreras_InsertarRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Carrera As EntCarreras)
            Me.Invoke("Carreras_InsertarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_Carrera})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Carreras_InsertarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Carrera As EntCarreras)
            Me.Carreras_InsertarRegistroAsync(pvc_Usuario, pvc_Clave, pvo_Carrera, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Carreras_InsertarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Carrera As EntCarreras, ByVal userState As Object)
            If (Me.Carreras_InsertarRegistroOperationCompleted Is Nothing) Then
                Me.Carreras_InsertarRegistroOperationCompleted = AddressOf Me.OnCarreras_InsertarRegistroOperationCompleted
            End If
            Me.InvokeAsync("Carreras_InsertarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_Carrera}, Me.Carreras_InsertarRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnCarreras_InsertarRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.Carreras_InsertarRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Carreras_InsertarRegistroCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/Carreras_BorrarRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub Carreras_BorrarRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Carrera As EntCarreras)
            Me.Invoke("Carreras_BorrarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_Carrera})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Carreras_BorrarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Carrera As EntCarreras)
            Me.Carreras_BorrarRegistroAsync(pvc_Usuario, pvc_Clave, pvo_Carrera, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Carreras_BorrarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Carrera As EntCarreras, ByVal userState As Object)
            If (Me.Carreras_BorrarRegistroOperationCompleted Is Nothing) Then
                Me.Carreras_BorrarRegistroOperationCompleted = AddressOf Me.OnCarreras_BorrarRegistroOperationCompleted
            End If
            Me.InvokeAsync("Carreras_BorrarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_Carrera}, Me.Carreras_BorrarRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnCarreras_BorrarRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.Carreras_BorrarRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Carreras_BorrarRegistroCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/Carreras_ModificarRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub Carreras_ModificarRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Carrera As EntCarreras)
            Me.Invoke("Carreras_ModificarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_Carrera})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Carreras_ModificarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Carrera As EntCarreras)
            Me.Carreras_ModificarRegistroAsync(pvc_Usuario, pvc_Clave, pvo_Carrera, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Carreras_ModificarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Carrera As EntCarreras, ByVal userState As Object)
            If (Me.Carreras_ModificarRegistroOperationCompleted Is Nothing) Then
                Me.Carreras_ModificarRegistroOperationCompleted = AddressOf Me.OnCarreras_ModificarRegistroOperationCompleted
            End If
            Me.InvokeAsync("Carreras_ModificarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_Carrera}, Me.Carreras_ModificarRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnCarreras_ModificarRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.Carreras_ModificarRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Carreras_ModificarRegistroCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/NivelEducativo_ListarRegistros", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function NivelEducativo_ListarRegistros(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("NivelEducativo_ListarRegistros", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub NivelEducativo_ListarRegistrosAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String)
            Me.NivelEducativo_ListarRegistrosAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub NivelEducativo_ListarRegistrosAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String, ByVal userState As Object)
            If (Me.NivelEducativo_ListarRegistrosOperationCompleted Is Nothing) Then
                Me.NivelEducativo_ListarRegistrosOperationCompleted = AddressOf Me.OnNivelEducativo_ListarRegistrosOperationCompleted
            End If
            Me.InvokeAsync("NivelEducativo_ListarRegistros", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden}, Me.NivelEducativo_ListarRegistrosOperationCompleted, userState)
        End Sub
        
        Private Sub OnNivelEducativo_ListarRegistrosOperationCompleted(ByVal arg As Object)
            If (Not (Me.NivelEducativo_ListarRegistrosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent NivelEducativo_ListarRegistrosCompleted(Me, New NivelEducativo_ListarRegistrosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/NivelEducativo_ListarRegistrosLista", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function NivelEducativo_ListarRegistrosLista(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("NivelEducativo_ListarRegistrosLista", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub NivelEducativo_ListarRegistrosListaAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String)
            Me.NivelEducativo_ListarRegistrosListaAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub NivelEducativo_ListarRegistrosListaAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String, ByVal userState As Object)
            If (Me.NivelEducativo_ListarRegistrosListaOperationCompleted Is Nothing) Then
                Me.NivelEducativo_ListarRegistrosListaOperationCompleted = AddressOf Me.OnNivelEducativo_ListarRegistrosListaOperationCompleted
            End If
            Me.InvokeAsync("NivelEducativo_ListarRegistrosLista", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden}, Me.NivelEducativo_ListarRegistrosListaOperationCompleted, userState)
        End Sub
        
        Private Sub OnNivelEducativo_ListarRegistrosListaOperationCompleted(ByVal arg As Object)
            If (Not (Me.NivelEducativo_ListarRegistrosListaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent NivelEducativo_ListarRegistrosListaCompleted(Me, New NivelEducativo_ListarRegistrosListaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/NivelEducativo_ObtenerRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function NivelEducativo_ObtenerRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String) As EntNivel_Educativo
            Dim results() As Object = Me.Invoke("NivelEducativo_ObtenerRegistro", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion})
            Return CType(results(0),EntNivel_Educativo)
        End Function
        
        '''<remarks/>
        Public Overloads Sub NivelEducativo_ObtenerRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String)
            Me.NivelEducativo_ObtenerRegistroAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub NivelEducativo_ObtenerRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal userState As Object)
            If (Me.NivelEducativo_ObtenerRegistroOperationCompleted Is Nothing) Then
                Me.NivelEducativo_ObtenerRegistroOperationCompleted = AddressOf Me.OnNivelEducativo_ObtenerRegistroOperationCompleted
            End If
            Me.InvokeAsync("NivelEducativo_ObtenerRegistro", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion}, Me.NivelEducativo_ObtenerRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnNivelEducativo_ObtenerRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.NivelEducativo_ObtenerRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent NivelEducativo_ObtenerRegistroCompleted(Me, New NivelEducativo_ObtenerRegistroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/NivelEducativo_InsertarRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub NivelEducativo_InsertarRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_NivelEducativo As EntNivel_Educativo)
            Me.Invoke("NivelEducativo_InsertarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_NivelEducativo})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub NivelEducativo_InsertarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_NivelEducativo As EntNivel_Educativo)
            Me.NivelEducativo_InsertarRegistroAsync(pvc_Usuario, pvc_Clave, pvo_NivelEducativo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub NivelEducativo_InsertarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_NivelEducativo As EntNivel_Educativo, ByVal userState As Object)
            If (Me.NivelEducativo_InsertarRegistroOperationCompleted Is Nothing) Then
                Me.NivelEducativo_InsertarRegistroOperationCompleted = AddressOf Me.OnNivelEducativo_InsertarRegistroOperationCompleted
            End If
            Me.InvokeAsync("NivelEducativo_InsertarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_NivelEducativo}, Me.NivelEducativo_InsertarRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnNivelEducativo_InsertarRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.NivelEducativo_InsertarRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent NivelEducativo_InsertarRegistroCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/NivelEducativo_BorrarRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub NivelEducativo_BorrarRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_NivelEducativo As EntNivel_Educativo)
            Me.Invoke("NivelEducativo_BorrarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_NivelEducativo})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub NivelEducativo_BorrarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_NivelEducativo As EntNivel_Educativo)
            Me.NivelEducativo_BorrarRegistroAsync(pvc_Usuario, pvc_Clave, pvo_NivelEducativo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub NivelEducativo_BorrarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_NivelEducativo As EntNivel_Educativo, ByVal userState As Object)
            If (Me.NivelEducativo_BorrarRegistroOperationCompleted Is Nothing) Then
                Me.NivelEducativo_BorrarRegistroOperationCompleted = AddressOf Me.OnNivelEducativo_BorrarRegistroOperationCompleted
            End If
            Me.InvokeAsync("NivelEducativo_BorrarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_NivelEducativo}, Me.NivelEducativo_BorrarRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnNivelEducativo_BorrarRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.NivelEducativo_BorrarRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent NivelEducativo_BorrarRegistroCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/NivelEducativo_ModificarRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub NivelEducativo_ModificarRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_NivelEducativo As EntNivel_Educativo)
            Me.Invoke("NivelEducativo_ModificarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_NivelEducativo})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub NivelEducativo_ModificarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_NivelEducativo As EntNivel_Educativo)
            Me.NivelEducativo_ModificarRegistroAsync(pvc_Usuario, pvc_Clave, pvo_NivelEducativo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub NivelEducativo_ModificarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_NivelEducativo As EntNivel_Educativo, ByVal userState As Object)
            If (Me.NivelEducativo_ModificarRegistroOperationCompleted Is Nothing) Then
                Me.NivelEducativo_ModificarRegistroOperationCompleted = AddressOf Me.OnNivelEducativo_ModificarRegistroOperationCompleted
            End If
            Me.InvokeAsync("NivelEducativo_ModificarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_NivelEducativo}, Me.NivelEducativo_ModificarRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnNivelEducativo_ModificarRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.NivelEducativo_ModificarRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent NivelEducativo_ModificarRegistroCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/Telefonos_ListarRegistros", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Telefonos_ListarRegistros(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Telefonos_ListarRegistros", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Telefonos_ListarRegistrosAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String)
            Me.Telefonos_ListarRegistrosAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Telefonos_ListarRegistrosAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String, ByVal userState As Object)
            If (Me.Telefonos_ListarRegistrosOperationCompleted Is Nothing) Then
                Me.Telefonos_ListarRegistrosOperationCompleted = AddressOf Me.OnTelefonos_ListarRegistrosOperationCompleted
            End If
            Me.InvokeAsync("Telefonos_ListarRegistros", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden}, Me.Telefonos_ListarRegistrosOperationCompleted, userState)
        End Sub
        
        Private Sub OnTelefonos_ListarRegistrosOperationCompleted(ByVal arg As Object)
            If (Not (Me.Telefonos_ListarRegistrosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Telefonos_ListarRegistrosCompleted(Me, New Telefonos_ListarRegistrosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/Telefonos_ListarRegistrosLista", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Telefonos_ListarRegistrosLista(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Telefonos_ListarRegistrosLista", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Telefonos_ListarRegistrosListaAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String)
            Me.Telefonos_ListarRegistrosListaAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Telefonos_ListarRegistrosListaAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String, ByVal userState As Object)
            If (Me.Telefonos_ListarRegistrosListaOperationCompleted Is Nothing) Then
                Me.Telefonos_ListarRegistrosListaOperationCompleted = AddressOf Me.OnTelefonos_ListarRegistrosListaOperationCompleted
            End If
            Me.InvokeAsync("Telefonos_ListarRegistrosLista", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden}, Me.Telefonos_ListarRegistrosListaOperationCompleted, userState)
        End Sub
        
        Private Sub OnTelefonos_ListarRegistrosListaOperationCompleted(ByVal arg As Object)
            If (Not (Me.Telefonos_ListarRegistrosListaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Telefonos_ListarRegistrosListaCompleted(Me, New Telefonos_ListarRegistrosListaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/Telefonos_ObtenerRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Telefonos_ObtenerRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String) As EntEmp_Telefonos
            Dim results() As Object = Me.Invoke("Telefonos_ObtenerRegistro", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion})
            Return CType(results(0),EntEmp_Telefonos)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Telefonos_ObtenerRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String)
            Me.Telefonos_ObtenerRegistroAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Telefonos_ObtenerRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal userState As Object)
            If (Me.Telefonos_ObtenerRegistroOperationCompleted Is Nothing) Then
                Me.Telefonos_ObtenerRegistroOperationCompleted = AddressOf Me.OnTelefonos_ObtenerRegistroOperationCompleted
            End If
            Me.InvokeAsync("Telefonos_ObtenerRegistro", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion}, Me.Telefonos_ObtenerRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnTelefonos_ObtenerRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.Telefonos_ObtenerRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Telefonos_ObtenerRegistroCompleted(Me, New Telefonos_ObtenerRegistroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/Telefonos_InsertarRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub Telefonos_InsertarRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Telefonos As EntEmp_Telefonos)
            Me.Invoke("Telefonos_InsertarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_Telefonos})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Telefonos_InsertarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Telefonos As EntEmp_Telefonos)
            Me.Telefonos_InsertarRegistroAsync(pvc_Usuario, pvc_Clave, pvo_Telefonos, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Telefonos_InsertarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Telefonos As EntEmp_Telefonos, ByVal userState As Object)
            If (Me.Telefonos_InsertarRegistroOperationCompleted Is Nothing) Then
                Me.Telefonos_InsertarRegistroOperationCompleted = AddressOf Me.OnTelefonos_InsertarRegistroOperationCompleted
            End If
            Me.InvokeAsync("Telefonos_InsertarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_Telefonos}, Me.Telefonos_InsertarRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnTelefonos_InsertarRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.Telefonos_InsertarRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Telefonos_InsertarRegistroCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/Telefonos_BorrarRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub Telefonos_BorrarRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Telefonos As EntEmp_Telefonos)
            Me.Invoke("Telefonos_BorrarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_Telefonos})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Telefonos_BorrarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Telefonos As EntEmp_Telefonos)
            Me.Telefonos_BorrarRegistroAsync(pvc_Usuario, pvc_Clave, pvo_Telefonos, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Telefonos_BorrarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Telefonos As EntEmp_Telefonos, ByVal userState As Object)
            If (Me.Telefonos_BorrarRegistroOperationCompleted Is Nothing) Then
                Me.Telefonos_BorrarRegistroOperationCompleted = AddressOf Me.OnTelefonos_BorrarRegistroOperationCompleted
            End If
            Me.InvokeAsync("Telefonos_BorrarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_Telefonos}, Me.Telefonos_BorrarRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnTelefonos_BorrarRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.Telefonos_BorrarRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Telefonos_BorrarRegistroCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/Telefonos_ModificarRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub Telefonos_ModificarRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Telefonos As EntEmp_Telefonos)
            Me.Invoke("Telefonos_ModificarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_Telefonos})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Telefonos_ModificarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Telefonos As EntEmp_Telefonos)
            Me.Telefonos_ModificarRegistroAsync(pvc_Usuario, pvc_Clave, pvo_Telefonos, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Telefonos_ModificarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Telefonos As EntEmp_Telefonos, ByVal userState As Object)
            If (Me.Telefonos_ModificarRegistroOperationCompleted Is Nothing) Then
                Me.Telefonos_ModificarRegistroOperationCompleted = AddressOf Me.OnTelefonos_ModificarRegistroOperationCompleted
            End If
            Me.InvokeAsync("Telefonos_ModificarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_Telefonos}, Me.Telefonos_ModificarRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnTelefonos_ModificarRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.Telefonos_ModificarRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Telefonos_ModificarRegistroCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/Telefonos_Rpt_Curriculo", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Telefonos_Rpt_Curriculo(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Telefonos_Rpt_Curriculo", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Telefonos_Rpt_CurriculoAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String)
            Me.Telefonos_Rpt_CurriculoAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Telefonos_Rpt_CurriculoAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal userState As Object)
            If (Me.Telefonos_Rpt_CurriculoOperationCompleted Is Nothing) Then
                Me.Telefonos_Rpt_CurriculoOperationCompleted = AddressOf Me.OnTelefonos_Rpt_CurriculoOperationCompleted
            End If
            Me.InvokeAsync("Telefonos_Rpt_Curriculo", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion}, Me.Telefonos_Rpt_CurriculoOperationCompleted, userState)
        End Sub
        
        Private Sub OnTelefonos_Rpt_CurriculoOperationCompleted(ByVal arg As Object)
            If (Not (Me.Telefonos_Rpt_CurriculoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Telefonos_Rpt_CurriculoCompleted(Me, New Telefonos_Rpt_CurriculoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/ExpLaboral_ListarRegistros", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ExpLaboral_ListarRegistros(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ExpLaboral_ListarRegistros", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ExpLaboral_ListarRegistrosAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String)
            Me.ExpLaboral_ListarRegistrosAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ExpLaboral_ListarRegistrosAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String, ByVal userState As Object)
            If (Me.ExpLaboral_ListarRegistrosOperationCompleted Is Nothing) Then
                Me.ExpLaboral_ListarRegistrosOperationCompleted = AddressOf Me.OnExpLaboral_ListarRegistrosOperationCompleted
            End If
            Me.InvokeAsync("ExpLaboral_ListarRegistros", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden}, Me.ExpLaboral_ListarRegistrosOperationCompleted, userState)
        End Sub
        
        Private Sub OnExpLaboral_ListarRegistrosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ExpLaboral_ListarRegistrosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ExpLaboral_ListarRegistrosCompleted(Me, New ExpLaboral_ListarRegistrosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/ExpLaboral_ListarRegistrosLista", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ExpLaboral_ListarRegistrosLista(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ExpLaboral_ListarRegistrosLista", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ExpLaboral_ListarRegistrosListaAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String)
            Me.ExpLaboral_ListarRegistrosListaAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ExpLaboral_ListarRegistrosListaAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String, ByVal userState As Object)
            If (Me.ExpLaboral_ListarRegistrosListaOperationCompleted Is Nothing) Then
                Me.ExpLaboral_ListarRegistrosListaOperationCompleted = AddressOf Me.OnExpLaboral_ListarRegistrosListaOperationCompleted
            End If
            Me.InvokeAsync("ExpLaboral_ListarRegistrosLista", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden}, Me.ExpLaboral_ListarRegistrosListaOperationCompleted, userState)
        End Sub
        
        Private Sub OnExpLaboral_ListarRegistrosListaOperationCompleted(ByVal arg As Object)
            If (Not (Me.ExpLaboral_ListarRegistrosListaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ExpLaboral_ListarRegistrosListaCompleted(Me, New ExpLaboral_ListarRegistrosListaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/ExpLaboral_ObtenerRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ExpLaboral_ObtenerRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String) As EntEmp_Exp_Laboral
            Dim results() As Object = Me.Invoke("ExpLaboral_ObtenerRegistro", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion})
            Return CType(results(0),EntEmp_Exp_Laboral)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ExpLaboral_ObtenerRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String)
            Me.ExpLaboral_ObtenerRegistroAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ExpLaboral_ObtenerRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal userState As Object)
            If (Me.ExpLaboral_ObtenerRegistroOperationCompleted Is Nothing) Then
                Me.ExpLaboral_ObtenerRegistroOperationCompleted = AddressOf Me.OnExpLaboral_ObtenerRegistroOperationCompleted
            End If
            Me.InvokeAsync("ExpLaboral_ObtenerRegistro", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion}, Me.ExpLaboral_ObtenerRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnExpLaboral_ObtenerRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.ExpLaboral_ObtenerRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ExpLaboral_ObtenerRegistroCompleted(Me, New ExpLaboral_ObtenerRegistroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/ExpLaboral_InsertarRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub ExpLaboral_InsertarRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_ExpLaboral As EntEmp_Exp_Laboral)
            Me.Invoke("ExpLaboral_InsertarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_ExpLaboral})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ExpLaboral_InsertarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_ExpLaboral As EntEmp_Exp_Laboral)
            Me.ExpLaboral_InsertarRegistroAsync(pvc_Usuario, pvc_Clave, pvo_ExpLaboral, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ExpLaboral_InsertarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_ExpLaboral As EntEmp_Exp_Laboral, ByVal userState As Object)
            If (Me.ExpLaboral_InsertarRegistroOperationCompleted Is Nothing) Then
                Me.ExpLaboral_InsertarRegistroOperationCompleted = AddressOf Me.OnExpLaboral_InsertarRegistroOperationCompleted
            End If
            Me.InvokeAsync("ExpLaboral_InsertarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_ExpLaboral}, Me.ExpLaboral_InsertarRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnExpLaboral_InsertarRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.ExpLaboral_InsertarRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ExpLaboral_InsertarRegistroCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/ExpLaboral_BorrarRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub ExpLaboral_BorrarRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_ExpLaboral As EntEmp_Exp_Laboral)
            Me.Invoke("ExpLaboral_BorrarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_ExpLaboral})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ExpLaboral_BorrarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_ExpLaboral As EntEmp_Exp_Laboral)
            Me.ExpLaboral_BorrarRegistroAsync(pvc_Usuario, pvc_Clave, pvo_ExpLaboral, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ExpLaboral_BorrarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_ExpLaboral As EntEmp_Exp_Laboral, ByVal userState As Object)
            If (Me.ExpLaboral_BorrarRegistroOperationCompleted Is Nothing) Then
                Me.ExpLaboral_BorrarRegistroOperationCompleted = AddressOf Me.OnExpLaboral_BorrarRegistroOperationCompleted
            End If
            Me.InvokeAsync("ExpLaboral_BorrarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_ExpLaboral}, Me.ExpLaboral_BorrarRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnExpLaboral_BorrarRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.ExpLaboral_BorrarRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ExpLaboral_BorrarRegistroCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/ExpLaboral_ModificarRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub ExpLaboral_ModificarRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_ExpLaboral As EntEmp_Exp_Laboral)
            Me.Invoke("ExpLaboral_ModificarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_ExpLaboral})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ExpLaboral_ModificarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_ExpLaboral As EntEmp_Exp_Laboral)
            Me.ExpLaboral_ModificarRegistroAsync(pvc_Usuario, pvc_Clave, pvo_ExpLaboral, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ExpLaboral_ModificarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_ExpLaboral As EntEmp_Exp_Laboral, ByVal userState As Object)
            If (Me.ExpLaboral_ModificarRegistroOperationCompleted Is Nothing) Then
                Me.ExpLaboral_ModificarRegistroOperationCompleted = AddressOf Me.OnExpLaboral_ModificarRegistroOperationCompleted
            End If
            Me.InvokeAsync("ExpLaboral_ModificarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_ExpLaboral}, Me.ExpLaboral_ModificarRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnExpLaboral_ModificarRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.ExpLaboral_ModificarRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ExpLaboral_ModificarRegistroCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/ExpLaboral_Rpt_Curriculo", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ExpLaboral_Rpt_Curriculo(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ExpLaboral_Rpt_Curriculo", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ExpLaboral_Rpt_CurriculoAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String)
            Me.ExpLaboral_Rpt_CurriculoAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ExpLaboral_Rpt_CurriculoAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal userState As Object)
            If (Me.ExpLaboral_Rpt_CurriculoOperationCompleted Is Nothing) Then
                Me.ExpLaboral_Rpt_CurriculoOperationCompleted = AddressOf Me.OnExpLaboral_Rpt_CurriculoOperationCompleted
            End If
            Me.InvokeAsync("ExpLaboral_Rpt_Curriculo", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion}, Me.ExpLaboral_Rpt_CurriculoOperationCompleted, userState)
        End Sub
        
        Private Sub OnExpLaboral_Rpt_CurriculoOperationCompleted(ByVal arg As Object)
            If (Not (Me.ExpLaboral_Rpt_CurriculoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ExpLaboral_Rpt_CurriculoCompleted(Me, New ExpLaboral_Rpt_CurriculoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/EmpEstFormales_ListarRegistros", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EmpEstFormales_ListarRegistros(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("EmpEstFormales_ListarRegistros", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EmpEstFormales_ListarRegistrosAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String)
            Me.EmpEstFormales_ListarRegistrosAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmpEstFormales_ListarRegistrosAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String, ByVal userState As Object)
            If (Me.EmpEstFormales_ListarRegistrosOperationCompleted Is Nothing) Then
                Me.EmpEstFormales_ListarRegistrosOperationCompleted = AddressOf Me.OnEmpEstFormales_ListarRegistrosOperationCompleted
            End If
            Me.InvokeAsync("EmpEstFormales_ListarRegistros", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden}, Me.EmpEstFormales_ListarRegistrosOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmpEstFormales_ListarRegistrosOperationCompleted(ByVal arg As Object)
            If (Not (Me.EmpEstFormales_ListarRegistrosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EmpEstFormales_ListarRegistrosCompleted(Me, New EmpEstFormales_ListarRegistrosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/EmpEstFormales_ListarRegistrosLista", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EmpEstFormales_ListarRegistrosLista(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("EmpEstFormales_ListarRegistrosLista", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EmpEstFormales_ListarRegistrosListaAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String)
            Me.EmpEstFormales_ListarRegistrosListaAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmpEstFormales_ListarRegistrosListaAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String, ByVal userState As Object)
            If (Me.EmpEstFormales_ListarRegistrosListaOperationCompleted Is Nothing) Then
                Me.EmpEstFormales_ListarRegistrosListaOperationCompleted = AddressOf Me.OnEmpEstFormales_ListarRegistrosListaOperationCompleted
            End If
            Me.InvokeAsync("EmpEstFormales_ListarRegistrosLista", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden}, Me.EmpEstFormales_ListarRegistrosListaOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmpEstFormales_ListarRegistrosListaOperationCompleted(ByVal arg As Object)
            If (Not (Me.EmpEstFormales_ListarRegistrosListaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EmpEstFormales_ListarRegistrosListaCompleted(Me, New EmpEstFormales_ListarRegistrosListaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/EmpEstFormales_ObtenerRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EmpEstFormales_ObtenerRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String) As EntEmp_Est_Formales
            Dim results() As Object = Me.Invoke("EmpEstFormales_ObtenerRegistro", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion})
            Return CType(results(0),EntEmp_Est_Formales)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EmpEstFormales_ObtenerRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String)
            Me.EmpEstFormales_ObtenerRegistroAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmpEstFormales_ObtenerRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal userState As Object)
            If (Me.EmpEstFormales_ObtenerRegistroOperationCompleted Is Nothing) Then
                Me.EmpEstFormales_ObtenerRegistroOperationCompleted = AddressOf Me.OnEmpEstFormales_ObtenerRegistroOperationCompleted
            End If
            Me.InvokeAsync("EmpEstFormales_ObtenerRegistro", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion}, Me.EmpEstFormales_ObtenerRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmpEstFormales_ObtenerRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.EmpEstFormales_ObtenerRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EmpEstFormales_ObtenerRegistroCompleted(Me, New EmpEstFormales_ObtenerRegistroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/EmpEstFormales_InsertarRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub EmpEstFormales_InsertarRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EmpEstFormales As EntEmp_Est_Formales)
            Me.Invoke("EmpEstFormales_InsertarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_EmpEstFormales})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmpEstFormales_InsertarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EmpEstFormales As EntEmp_Est_Formales)
            Me.EmpEstFormales_InsertarRegistroAsync(pvc_Usuario, pvc_Clave, pvo_EmpEstFormales, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmpEstFormales_InsertarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EmpEstFormales As EntEmp_Est_Formales, ByVal userState As Object)
            If (Me.EmpEstFormales_InsertarRegistroOperationCompleted Is Nothing) Then
                Me.EmpEstFormales_InsertarRegistroOperationCompleted = AddressOf Me.OnEmpEstFormales_InsertarRegistroOperationCompleted
            End If
            Me.InvokeAsync("EmpEstFormales_InsertarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_EmpEstFormales}, Me.EmpEstFormales_InsertarRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmpEstFormales_InsertarRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.EmpEstFormales_InsertarRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EmpEstFormales_InsertarRegistroCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/EmpEstFormales_BorrarRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub EmpEstFormales_BorrarRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EmpEstFormales As EntEmp_Est_Formales)
            Me.Invoke("EmpEstFormales_BorrarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_EmpEstFormales})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmpEstFormales_BorrarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EmpEstFormales As EntEmp_Est_Formales)
            Me.EmpEstFormales_BorrarRegistroAsync(pvc_Usuario, pvc_Clave, pvo_EmpEstFormales, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmpEstFormales_BorrarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EmpEstFormales As EntEmp_Est_Formales, ByVal userState As Object)
            If (Me.EmpEstFormales_BorrarRegistroOperationCompleted Is Nothing) Then
                Me.EmpEstFormales_BorrarRegistroOperationCompleted = AddressOf Me.OnEmpEstFormales_BorrarRegistroOperationCompleted
            End If
            Me.InvokeAsync("EmpEstFormales_BorrarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_EmpEstFormales}, Me.EmpEstFormales_BorrarRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmpEstFormales_BorrarRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.EmpEstFormales_BorrarRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EmpEstFormales_BorrarRegistroCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/EmpEstFormales_ModificarRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub EmpEstFormales_ModificarRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EmpEstFormales As EntEmp_Est_Formales)
            Me.Invoke("EmpEstFormales_ModificarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_EmpEstFormales})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmpEstFormales_ModificarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EmpEstFormales As EntEmp_Est_Formales)
            Me.EmpEstFormales_ModificarRegistroAsync(pvc_Usuario, pvc_Clave, pvo_EmpEstFormales, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmpEstFormales_ModificarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EmpEstFormales As EntEmp_Est_Formales, ByVal userState As Object)
            If (Me.EmpEstFormales_ModificarRegistroOperationCompleted Is Nothing) Then
                Me.EmpEstFormales_ModificarRegistroOperationCompleted = AddressOf Me.OnEmpEstFormales_ModificarRegistroOperationCompleted
            End If
            Me.InvokeAsync("EmpEstFormales_ModificarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_EmpEstFormales}, Me.EmpEstFormales_ModificarRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmpEstFormales_ModificarRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.EmpEstFormales_ModificarRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EmpEstFormales_ModificarRegistroCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/EmpEstFormales_ModificarTitulo", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub EmpEstFormales_ModificarTitulo(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> ByVal pvb_Imagen() As Byte, ByVal pvc_NumEmpleado As Integer, ByVal pvn_Nivel_Educativo As Integer, ByVal pvn_Carrera As Integer)
            Me.Invoke("EmpEstFormales_ModificarTitulo", New Object() {pvc_Usuario, pvc_Clave, pvb_Imagen, pvc_NumEmpleado, pvn_Nivel_Educativo, pvn_Carrera})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmpEstFormales_ModificarTituloAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvb_Imagen() As Byte, ByVal pvc_NumEmpleado As Integer, ByVal pvn_Nivel_Educativo As Integer, ByVal pvn_Carrera As Integer)
            Me.EmpEstFormales_ModificarTituloAsync(pvc_Usuario, pvc_Clave, pvb_Imagen, pvc_NumEmpleado, pvn_Nivel_Educativo, pvn_Carrera, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmpEstFormales_ModificarTituloAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvb_Imagen() As Byte, ByVal pvc_NumEmpleado As Integer, ByVal pvn_Nivel_Educativo As Integer, ByVal pvn_Carrera As Integer, ByVal userState As Object)
            If (Me.EmpEstFormales_ModificarTituloOperationCompleted Is Nothing) Then
                Me.EmpEstFormales_ModificarTituloOperationCompleted = AddressOf Me.OnEmpEstFormales_ModificarTituloOperationCompleted
            End If
            Me.InvokeAsync("EmpEstFormales_ModificarTitulo", New Object() {pvc_Usuario, pvc_Clave, pvb_Imagen, pvc_NumEmpleado, pvn_Nivel_Educativo, pvn_Carrera}, Me.EmpEstFormales_ModificarTituloOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmpEstFormales_ModificarTituloOperationCompleted(ByVal arg As Object)
            If (Not (Me.EmpEstFormales_ModificarTituloCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EmpEstFormales_ModificarTituloCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/EmpEstFormales_ObtenerTitulo", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EmpEstFormales_ObtenerTitulo(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_NumEmpleado As Integer, ByVal pvn_Nivel_Educativo As Integer, ByVal pvn_Carrera As Integer) As <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> Byte()
            Dim results() As Object = Me.Invoke("EmpEstFormales_ObtenerTitulo", New Object() {pvc_Usuario, pvc_Clave, pvc_NumEmpleado, pvn_Nivel_Educativo, pvn_Carrera})
            Return CType(results(0),Byte())
        End Function
        
        '''<remarks/>
        Public Overloads Sub EmpEstFormales_ObtenerTituloAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_NumEmpleado As Integer, ByVal pvn_Nivel_Educativo As Integer, ByVal pvn_Carrera As Integer)
            Me.EmpEstFormales_ObtenerTituloAsync(pvc_Usuario, pvc_Clave, pvc_NumEmpleado, pvn_Nivel_Educativo, pvn_Carrera, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmpEstFormales_ObtenerTituloAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_NumEmpleado As Integer, ByVal pvn_Nivel_Educativo As Integer, ByVal pvn_Carrera As Integer, ByVal userState As Object)
            If (Me.EmpEstFormales_ObtenerTituloOperationCompleted Is Nothing) Then
                Me.EmpEstFormales_ObtenerTituloOperationCompleted = AddressOf Me.OnEmpEstFormales_ObtenerTituloOperationCompleted
            End If
            Me.InvokeAsync("EmpEstFormales_ObtenerTitulo", New Object() {pvc_Usuario, pvc_Clave, pvc_NumEmpleado, pvn_Nivel_Educativo, pvn_Carrera}, Me.EmpEstFormales_ObtenerTituloOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmpEstFormales_ObtenerTituloOperationCompleted(ByVal arg As Object)
            If (Not (Me.EmpEstFormales_ObtenerTituloCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EmpEstFormales_ObtenerTituloCompleted(Me, New EmpEstFormales_ObtenerTituloCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/EmpEstFormales_Rpt_Curriculo", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EmpEstFormales_Rpt_Curriculo(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("EmpEstFormales_Rpt_Curriculo", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EmpEstFormales_Rpt_CurriculoAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String)
            Me.EmpEstFormales_Rpt_CurriculoAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmpEstFormales_Rpt_CurriculoAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal userState As Object)
            If (Me.EmpEstFormales_Rpt_CurriculoOperationCompleted Is Nothing) Then
                Me.EmpEstFormales_Rpt_CurriculoOperationCompleted = AddressOf Me.OnEmpEstFormales_Rpt_CurriculoOperationCompleted
            End If
            Me.InvokeAsync("EmpEstFormales_Rpt_Curriculo", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion}, Me.EmpEstFormales_Rpt_CurriculoOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmpEstFormales_Rpt_CurriculoOperationCompleted(ByVal arg As Object)
            If (Not (Me.EmpEstFormales_Rpt_CurriculoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EmpEstFormales_Rpt_CurriculoCompleted(Me, New EmpEstFormales_Rpt_CurriculoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/EmpEstFormalesAut_ListarRegistros", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EmpEstFormalesAut_ListarRegistros(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("EmpEstFormalesAut_ListarRegistros", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EmpEstFormalesAut_ListarRegistrosAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String)
            Me.EmpEstFormalesAut_ListarRegistrosAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmpEstFormalesAut_ListarRegistrosAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String, ByVal userState As Object)
            If (Me.EmpEstFormalesAut_ListarRegistrosOperationCompleted Is Nothing) Then
                Me.EmpEstFormalesAut_ListarRegistrosOperationCompleted = AddressOf Me.OnEmpEstFormalesAut_ListarRegistrosOperationCompleted
            End If
            Me.InvokeAsync("EmpEstFormalesAut_ListarRegistros", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden}, Me.EmpEstFormalesAut_ListarRegistrosOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmpEstFormalesAut_ListarRegistrosOperationCompleted(ByVal arg As Object)
            If (Not (Me.EmpEstFormalesAut_ListarRegistrosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EmpEstFormalesAut_ListarRegistrosCompleted(Me, New EmpEstFormalesAut_ListarRegistrosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/EmpEstFormalesAut_ListarRegistrosLista", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EmpEstFormalesAut_ListarRegistrosLista(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("EmpEstFormalesAut_ListarRegistrosLista", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EmpEstFormalesAut_ListarRegistrosListaAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String)
            Me.EmpEstFormalesAut_ListarRegistrosListaAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmpEstFormalesAut_ListarRegistrosListaAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String, ByVal userState As Object)
            If (Me.EmpEstFormalesAut_ListarRegistrosListaOperationCompleted Is Nothing) Then
                Me.EmpEstFormalesAut_ListarRegistrosListaOperationCompleted = AddressOf Me.OnEmpEstFormalesAut_ListarRegistrosListaOperationCompleted
            End If
            Me.InvokeAsync("EmpEstFormalesAut_ListarRegistrosLista", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden}, Me.EmpEstFormalesAut_ListarRegistrosListaOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmpEstFormalesAut_ListarRegistrosListaOperationCompleted(ByVal arg As Object)
            If (Not (Me.EmpEstFormalesAut_ListarRegistrosListaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EmpEstFormalesAut_ListarRegistrosListaCompleted(Me, New EmpEstFormalesAut_ListarRegistrosListaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/EmpEstFormalesAut_ObtenerRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EmpEstFormalesAut_ObtenerRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String) As EntEmp_Est_Formales_Aut
            Dim results() As Object = Me.Invoke("EmpEstFormalesAut_ObtenerRegistro", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion})
            Return CType(results(0),EntEmp_Est_Formales_Aut)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EmpEstFormalesAut_ObtenerRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String)
            Me.EmpEstFormalesAut_ObtenerRegistroAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmpEstFormalesAut_ObtenerRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal userState As Object)
            If (Me.EmpEstFormalesAut_ObtenerRegistroOperationCompleted Is Nothing) Then
                Me.EmpEstFormalesAut_ObtenerRegistroOperationCompleted = AddressOf Me.OnEmpEstFormalesAut_ObtenerRegistroOperationCompleted
            End If
            Me.InvokeAsync("EmpEstFormalesAut_ObtenerRegistro", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion}, Me.EmpEstFormalesAut_ObtenerRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmpEstFormalesAut_ObtenerRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.EmpEstFormalesAut_ObtenerRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EmpEstFormalesAut_ObtenerRegistroCompleted(Me, New EmpEstFormalesAut_ObtenerRegistroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/EmpEstFormalesAut_InsertarRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub EmpEstFormalesAut_InsertarRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EmpEstFormalesAut As EntEmp_Est_Formales_Aut)
            Me.Invoke("EmpEstFormalesAut_InsertarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_EmpEstFormalesAut})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmpEstFormalesAut_InsertarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EmpEstFormalesAut As EntEmp_Est_Formales_Aut)
            Me.EmpEstFormalesAut_InsertarRegistroAsync(pvc_Usuario, pvc_Clave, pvo_EmpEstFormalesAut, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmpEstFormalesAut_InsertarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EmpEstFormalesAut As EntEmp_Est_Formales_Aut, ByVal userState As Object)
            If (Me.EmpEstFormalesAut_InsertarRegistroOperationCompleted Is Nothing) Then
                Me.EmpEstFormalesAut_InsertarRegistroOperationCompleted = AddressOf Me.OnEmpEstFormalesAut_InsertarRegistroOperationCompleted
            End If
            Me.InvokeAsync("EmpEstFormalesAut_InsertarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_EmpEstFormalesAut}, Me.EmpEstFormalesAut_InsertarRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmpEstFormalesAut_InsertarRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.EmpEstFormalesAut_InsertarRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EmpEstFormalesAut_InsertarRegistroCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/EmpEstFormalesAut_BorrarRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub EmpEstFormalesAut_BorrarRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EmpEstFormalesAut As EntEmp_Est_Formales_Aut)
            Me.Invoke("EmpEstFormalesAut_BorrarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_EmpEstFormalesAut})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmpEstFormalesAut_BorrarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EmpEstFormalesAut As EntEmp_Est_Formales_Aut)
            Me.EmpEstFormalesAut_BorrarRegistroAsync(pvc_Usuario, pvc_Clave, pvo_EmpEstFormalesAut, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmpEstFormalesAut_BorrarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EmpEstFormalesAut As EntEmp_Est_Formales_Aut, ByVal userState As Object)
            If (Me.EmpEstFormalesAut_BorrarRegistroOperationCompleted Is Nothing) Then
                Me.EmpEstFormalesAut_BorrarRegistroOperationCompleted = AddressOf Me.OnEmpEstFormalesAut_BorrarRegistroOperationCompleted
            End If
            Me.InvokeAsync("EmpEstFormalesAut_BorrarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_EmpEstFormalesAut}, Me.EmpEstFormalesAut_BorrarRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmpEstFormalesAut_BorrarRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.EmpEstFormalesAut_BorrarRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EmpEstFormalesAut_BorrarRegistroCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/EmpEstFormalesAut_ModificarRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub EmpEstFormalesAut_ModificarRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EmpEstFormalesAut As EntEmp_Est_Formales_Aut)
            Me.Invoke("EmpEstFormalesAut_ModificarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_EmpEstFormalesAut})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmpEstFormalesAut_ModificarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EmpEstFormalesAut As EntEmp_Est_Formales_Aut)
            Me.EmpEstFormalesAut_ModificarRegistroAsync(pvc_Usuario, pvc_Clave, pvo_EmpEstFormalesAut, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmpEstFormalesAut_ModificarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EmpEstFormalesAut As EntEmp_Est_Formales_Aut, ByVal userState As Object)
            If (Me.EmpEstFormalesAut_ModificarRegistroOperationCompleted Is Nothing) Then
                Me.EmpEstFormalesAut_ModificarRegistroOperationCompleted = AddressOf Me.OnEmpEstFormalesAut_ModificarRegistroOperationCompleted
            End If
            Me.InvokeAsync("EmpEstFormalesAut_ModificarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_EmpEstFormalesAut}, Me.EmpEstFormalesAut_ModificarRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmpEstFormalesAut_ModificarRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.EmpEstFormalesAut_ModificarRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EmpEstFormalesAut_ModificarRegistroCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/Idiomas_ListarRegistros", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Idiomas_ListarRegistros(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Idiomas_ListarRegistros", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Idiomas_ListarRegistrosAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String)
            Me.Idiomas_ListarRegistrosAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Idiomas_ListarRegistrosAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String, ByVal userState As Object)
            If (Me.Idiomas_ListarRegistrosOperationCompleted Is Nothing) Then
                Me.Idiomas_ListarRegistrosOperationCompleted = AddressOf Me.OnIdiomas_ListarRegistrosOperationCompleted
            End If
            Me.InvokeAsync("Idiomas_ListarRegistros", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden}, Me.Idiomas_ListarRegistrosOperationCompleted, userState)
        End Sub
        
        Private Sub OnIdiomas_ListarRegistrosOperationCompleted(ByVal arg As Object)
            If (Not (Me.Idiomas_ListarRegistrosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Idiomas_ListarRegistrosCompleted(Me, New Idiomas_ListarRegistrosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/Idiomas_ListarRegistrosLista", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Idiomas_ListarRegistrosLista(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Idiomas_ListarRegistrosLista", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Idiomas_ListarRegistrosListaAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String)
            Me.Idiomas_ListarRegistrosListaAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Idiomas_ListarRegistrosListaAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String, ByVal userState As Object)
            If (Me.Idiomas_ListarRegistrosListaOperationCompleted Is Nothing) Then
                Me.Idiomas_ListarRegistrosListaOperationCompleted = AddressOf Me.OnIdiomas_ListarRegistrosListaOperationCompleted
            End If
            Me.InvokeAsync("Idiomas_ListarRegistrosLista", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden}, Me.Idiomas_ListarRegistrosListaOperationCompleted, userState)
        End Sub
        
        Private Sub OnIdiomas_ListarRegistrosListaOperationCompleted(ByVal arg As Object)
            If (Not (Me.Idiomas_ListarRegistrosListaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Idiomas_ListarRegistrosListaCompleted(Me, New Idiomas_ListarRegistrosListaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/Idiomas_ObtenerRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Idiomas_ObtenerRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String) As EntGbl_Idiomas
            Dim results() As Object = Me.Invoke("Idiomas_ObtenerRegistro", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion})
            Return CType(results(0),EntGbl_Idiomas)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Idiomas_ObtenerRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String)
            Me.Idiomas_ObtenerRegistroAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Idiomas_ObtenerRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal userState As Object)
            If (Me.Idiomas_ObtenerRegistroOperationCompleted Is Nothing) Then
                Me.Idiomas_ObtenerRegistroOperationCompleted = AddressOf Me.OnIdiomas_ObtenerRegistroOperationCompleted
            End If
            Me.InvokeAsync("Idiomas_ObtenerRegistro", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion}, Me.Idiomas_ObtenerRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnIdiomas_ObtenerRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.Idiomas_ObtenerRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Idiomas_ObtenerRegistroCompleted(Me, New Idiomas_ObtenerRegistroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/EmpIdiomas_ListarRegistros", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EmpIdiomas_ListarRegistros(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("EmpIdiomas_ListarRegistros", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EmpIdiomas_ListarRegistrosAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String)
            Me.EmpIdiomas_ListarRegistrosAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmpIdiomas_ListarRegistrosAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String, ByVal userState As Object)
            If (Me.EmpIdiomas_ListarRegistrosOperationCompleted Is Nothing) Then
                Me.EmpIdiomas_ListarRegistrosOperationCompleted = AddressOf Me.OnEmpIdiomas_ListarRegistrosOperationCompleted
            End If
            Me.InvokeAsync("EmpIdiomas_ListarRegistros", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden}, Me.EmpIdiomas_ListarRegistrosOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmpIdiomas_ListarRegistrosOperationCompleted(ByVal arg As Object)
            If (Not (Me.EmpIdiomas_ListarRegistrosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EmpIdiomas_ListarRegistrosCompleted(Me, New EmpIdiomas_ListarRegistrosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/EmpIdiomas_ListarRegistrosLista", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EmpIdiomas_ListarRegistrosLista(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("EmpIdiomas_ListarRegistrosLista", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EmpIdiomas_ListarRegistrosListaAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String)
            Me.EmpIdiomas_ListarRegistrosListaAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmpIdiomas_ListarRegistrosListaAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String, ByVal userState As Object)
            If (Me.EmpIdiomas_ListarRegistrosListaOperationCompleted Is Nothing) Then
                Me.EmpIdiomas_ListarRegistrosListaOperationCompleted = AddressOf Me.OnEmpIdiomas_ListarRegistrosListaOperationCompleted
            End If
            Me.InvokeAsync("EmpIdiomas_ListarRegistrosLista", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden}, Me.EmpIdiomas_ListarRegistrosListaOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmpIdiomas_ListarRegistrosListaOperationCompleted(ByVal arg As Object)
            If (Not (Me.EmpIdiomas_ListarRegistrosListaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EmpIdiomas_ListarRegistrosListaCompleted(Me, New EmpIdiomas_ListarRegistrosListaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/EmpIdiomas_ObtenerRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EmpIdiomas_ObtenerRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String) As EntEmp_Idiomas
            Dim results() As Object = Me.Invoke("EmpIdiomas_ObtenerRegistro", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion})
            Return CType(results(0),EntEmp_Idiomas)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EmpIdiomas_ObtenerRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String)
            Me.EmpIdiomas_ObtenerRegistroAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmpIdiomas_ObtenerRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal userState As Object)
            If (Me.EmpIdiomas_ObtenerRegistroOperationCompleted Is Nothing) Then
                Me.EmpIdiomas_ObtenerRegistroOperationCompleted = AddressOf Me.OnEmpIdiomas_ObtenerRegistroOperationCompleted
            End If
            Me.InvokeAsync("EmpIdiomas_ObtenerRegistro", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion}, Me.EmpIdiomas_ObtenerRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmpIdiomas_ObtenerRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.EmpIdiomas_ObtenerRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EmpIdiomas_ObtenerRegistroCompleted(Me, New EmpIdiomas_ObtenerRegistroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/EmpIdiomas_InsertarRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub EmpIdiomas_InsertarRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EmpIdiomas As EntEmp_Idiomas)
            Me.Invoke("EmpIdiomas_InsertarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_EmpIdiomas})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmpIdiomas_InsertarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EmpIdiomas As EntEmp_Idiomas)
            Me.EmpIdiomas_InsertarRegistroAsync(pvc_Usuario, pvc_Clave, pvo_EmpIdiomas, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmpIdiomas_InsertarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EmpIdiomas As EntEmp_Idiomas, ByVal userState As Object)
            If (Me.EmpIdiomas_InsertarRegistroOperationCompleted Is Nothing) Then
                Me.EmpIdiomas_InsertarRegistroOperationCompleted = AddressOf Me.OnEmpIdiomas_InsertarRegistroOperationCompleted
            End If
            Me.InvokeAsync("EmpIdiomas_InsertarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_EmpIdiomas}, Me.EmpIdiomas_InsertarRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmpIdiomas_InsertarRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.EmpIdiomas_InsertarRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EmpIdiomas_InsertarRegistroCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/EmpIdiomas_BorrarRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub EmpIdiomas_BorrarRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EmpIdiomas As EntEmp_Idiomas)
            Me.Invoke("EmpIdiomas_BorrarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_EmpIdiomas})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmpIdiomas_BorrarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EmpIdiomas As EntEmp_Idiomas)
            Me.EmpIdiomas_BorrarRegistroAsync(pvc_Usuario, pvc_Clave, pvo_EmpIdiomas, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmpIdiomas_BorrarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EmpIdiomas As EntEmp_Idiomas, ByVal userState As Object)
            If (Me.EmpIdiomas_BorrarRegistroOperationCompleted Is Nothing) Then
                Me.EmpIdiomas_BorrarRegistroOperationCompleted = AddressOf Me.OnEmpIdiomas_BorrarRegistroOperationCompleted
            End If
            Me.InvokeAsync("EmpIdiomas_BorrarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_EmpIdiomas}, Me.EmpIdiomas_BorrarRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmpIdiomas_BorrarRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.EmpIdiomas_BorrarRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EmpIdiomas_BorrarRegistroCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/EmpIdiomas_ModificarRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub EmpIdiomas_ModificarRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EmpIdiomas As EntEmp_Idiomas)
            Me.Invoke("EmpIdiomas_ModificarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_EmpIdiomas})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmpIdiomas_ModificarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EmpIdiomas As EntEmp_Idiomas)
            Me.EmpIdiomas_ModificarRegistroAsync(pvc_Usuario, pvc_Clave, pvo_EmpIdiomas, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmpIdiomas_ModificarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EmpIdiomas As EntEmp_Idiomas, ByVal userState As Object)
            If (Me.EmpIdiomas_ModificarRegistroOperationCompleted Is Nothing) Then
                Me.EmpIdiomas_ModificarRegistroOperationCompleted = AddressOf Me.OnEmpIdiomas_ModificarRegistroOperationCompleted
            End If
            Me.InvokeAsync("EmpIdiomas_ModificarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_EmpIdiomas}, Me.EmpIdiomas_ModificarRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmpIdiomas_ModificarRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.EmpIdiomas_ModificarRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EmpIdiomas_ModificarRegistroCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/EmpIdiomas_Rpt_Curriculo", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EmpIdiomas_Rpt_Curriculo(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("EmpIdiomas_Rpt_Curriculo", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EmpIdiomas_Rpt_CurriculoAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String)
            Me.EmpIdiomas_Rpt_CurriculoAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmpIdiomas_Rpt_CurriculoAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal userState As Object)
            If (Me.EmpIdiomas_Rpt_CurriculoOperationCompleted Is Nothing) Then
                Me.EmpIdiomas_Rpt_CurriculoOperationCompleted = AddressOf Me.OnEmpIdiomas_Rpt_CurriculoOperationCompleted
            End If
            Me.InvokeAsync("EmpIdiomas_Rpt_Curriculo", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion}, Me.EmpIdiomas_Rpt_CurriculoOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmpIdiomas_Rpt_CurriculoOperationCompleted(ByVal arg As Object)
            If (Not (Me.EmpIdiomas_Rpt_CurriculoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EmpIdiomas_Rpt_CurriculoCompleted(Me, New EmpIdiomas_Rpt_CurriculoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/EmpIdiomaTitulos_ListarRegistros", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EmpIdiomaTitulos_ListarRegistros(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("EmpIdiomaTitulos_ListarRegistros", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EmpIdiomaTitulos_ListarRegistrosAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String)
            Me.EmpIdiomaTitulos_ListarRegistrosAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmpIdiomaTitulos_ListarRegistrosAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String, ByVal userState As Object)
            If (Me.EmpIdiomaTitulos_ListarRegistrosOperationCompleted Is Nothing) Then
                Me.EmpIdiomaTitulos_ListarRegistrosOperationCompleted = AddressOf Me.OnEmpIdiomaTitulos_ListarRegistrosOperationCompleted
            End If
            Me.InvokeAsync("EmpIdiomaTitulos_ListarRegistros", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden}, Me.EmpIdiomaTitulos_ListarRegistrosOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmpIdiomaTitulos_ListarRegistrosOperationCompleted(ByVal arg As Object)
            If (Not (Me.EmpIdiomaTitulos_ListarRegistrosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EmpIdiomaTitulos_ListarRegistrosCompleted(Me, New EmpIdiomaTitulos_ListarRegistrosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/EmpIdiomaTitulos_ListarRegistrosLista", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EmpIdiomaTitulos_ListarRegistrosLista(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("EmpIdiomaTitulos_ListarRegistrosLista", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EmpIdiomaTitulos_ListarRegistrosListaAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String)
            Me.EmpIdiomaTitulos_ListarRegistrosListaAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmpIdiomaTitulos_ListarRegistrosListaAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String, ByVal userState As Object)
            If (Me.EmpIdiomaTitulos_ListarRegistrosListaOperationCompleted Is Nothing) Then
                Me.EmpIdiomaTitulos_ListarRegistrosListaOperationCompleted = AddressOf Me.OnEmpIdiomaTitulos_ListarRegistrosListaOperationCompleted
            End If
            Me.InvokeAsync("EmpIdiomaTitulos_ListarRegistrosLista", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden}, Me.EmpIdiomaTitulos_ListarRegistrosListaOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmpIdiomaTitulos_ListarRegistrosListaOperationCompleted(ByVal arg As Object)
            If (Not (Me.EmpIdiomaTitulos_ListarRegistrosListaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EmpIdiomaTitulos_ListarRegistrosListaCompleted(Me, New EmpIdiomaTitulos_ListarRegistrosListaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/EmpIdiomaTitulos_ObtenerRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EmpIdiomaTitulos_ObtenerRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String) As EntEmp_Idioma_Titulos
            Dim results() As Object = Me.Invoke("EmpIdiomaTitulos_ObtenerRegistro", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion})
            Return CType(results(0),EntEmp_Idioma_Titulos)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EmpIdiomaTitulos_ObtenerRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String)
            Me.EmpIdiomaTitulos_ObtenerRegistroAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmpIdiomaTitulos_ObtenerRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal userState As Object)
            If (Me.EmpIdiomaTitulos_ObtenerRegistroOperationCompleted Is Nothing) Then
                Me.EmpIdiomaTitulos_ObtenerRegistroOperationCompleted = AddressOf Me.OnEmpIdiomaTitulos_ObtenerRegistroOperationCompleted
            End If
            Me.InvokeAsync("EmpIdiomaTitulos_ObtenerRegistro", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion}, Me.EmpIdiomaTitulos_ObtenerRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmpIdiomaTitulos_ObtenerRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.EmpIdiomaTitulos_ObtenerRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EmpIdiomaTitulos_ObtenerRegistroCompleted(Me, New EmpIdiomaTitulos_ObtenerRegistroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/EmpIdiomaTitulos_InsertarRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub EmpIdiomaTitulos_InsertarRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EmpIdiomaTitulos As EntEmp_Idioma_Titulos)
            Me.Invoke("EmpIdiomaTitulos_InsertarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_EmpIdiomaTitulos})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmpIdiomaTitulos_InsertarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EmpIdiomaTitulos As EntEmp_Idioma_Titulos)
            Me.EmpIdiomaTitulos_InsertarRegistroAsync(pvc_Usuario, pvc_Clave, pvo_EmpIdiomaTitulos, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmpIdiomaTitulos_InsertarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EmpIdiomaTitulos As EntEmp_Idioma_Titulos, ByVal userState As Object)
            If (Me.EmpIdiomaTitulos_InsertarRegistroOperationCompleted Is Nothing) Then
                Me.EmpIdiomaTitulos_InsertarRegistroOperationCompleted = AddressOf Me.OnEmpIdiomaTitulos_InsertarRegistroOperationCompleted
            End If
            Me.InvokeAsync("EmpIdiomaTitulos_InsertarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_EmpIdiomaTitulos}, Me.EmpIdiomaTitulos_InsertarRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmpIdiomaTitulos_InsertarRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.EmpIdiomaTitulos_InsertarRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EmpIdiomaTitulos_InsertarRegistroCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/EmpIdiomaTitulos_BorrarRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub EmpIdiomaTitulos_BorrarRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EmpIdiomaTitulos As EntEmp_Idioma_Titulos)
            Me.Invoke("EmpIdiomaTitulos_BorrarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_EmpIdiomaTitulos})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmpIdiomaTitulos_BorrarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EmpIdiomaTitulos As EntEmp_Idioma_Titulos)
            Me.EmpIdiomaTitulos_BorrarRegistroAsync(pvc_Usuario, pvc_Clave, pvo_EmpIdiomaTitulos, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmpIdiomaTitulos_BorrarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EmpIdiomaTitulos As EntEmp_Idioma_Titulos, ByVal userState As Object)
            If (Me.EmpIdiomaTitulos_BorrarRegistroOperationCompleted Is Nothing) Then
                Me.EmpIdiomaTitulos_BorrarRegistroOperationCompleted = AddressOf Me.OnEmpIdiomaTitulos_BorrarRegistroOperationCompleted
            End If
            Me.InvokeAsync("EmpIdiomaTitulos_BorrarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_EmpIdiomaTitulos}, Me.EmpIdiomaTitulos_BorrarRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmpIdiomaTitulos_BorrarRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.EmpIdiomaTitulos_BorrarRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EmpIdiomaTitulos_BorrarRegistroCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/EmpIdiomaTitulos_ModificarRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub EmpIdiomaTitulos_ModificarRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EmpIdiomaTitulos As EntEmp_Idioma_Titulos)
            Me.Invoke("EmpIdiomaTitulos_ModificarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_EmpIdiomaTitulos})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmpIdiomaTitulos_ModificarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EmpIdiomaTitulos As EntEmp_Idioma_Titulos)
            Me.EmpIdiomaTitulos_ModificarRegistroAsync(pvc_Usuario, pvc_Clave, pvo_EmpIdiomaTitulos, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmpIdiomaTitulos_ModificarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EmpIdiomaTitulos As EntEmp_Idioma_Titulos, ByVal userState As Object)
            If (Me.EmpIdiomaTitulos_ModificarRegistroOperationCompleted Is Nothing) Then
                Me.EmpIdiomaTitulos_ModificarRegistroOperationCompleted = AddressOf Me.OnEmpIdiomaTitulos_ModificarRegistroOperationCompleted
            End If
            Me.InvokeAsync("EmpIdiomaTitulos_ModificarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_EmpIdiomaTitulos}, Me.EmpIdiomaTitulos_ModificarRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmpIdiomaTitulos_ModificarRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.EmpIdiomaTitulos_ModificarRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EmpIdiomaTitulos_ModificarRegistroCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/EmpIdiomaTitulos_ModificarTitulo", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub EmpIdiomaTitulos_ModificarTitulo(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> ByVal pvb_Imagen() As Byte, ByVal pvc_NumEmpleado As Integer, ByVal pvn_Cod_Idioma As Integer, ByVal pvn_Cons_Idioma_Titulos As Integer)
            Me.Invoke("EmpIdiomaTitulos_ModificarTitulo", New Object() {pvc_Usuario, pvc_Clave, pvb_Imagen, pvc_NumEmpleado, pvn_Cod_Idioma, pvn_Cons_Idioma_Titulos})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmpIdiomaTitulos_ModificarTituloAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvb_Imagen() As Byte, ByVal pvc_NumEmpleado As Integer, ByVal pvn_Cod_Idioma As Integer, ByVal pvn_Cons_Idioma_Titulos As Integer)
            Me.EmpIdiomaTitulos_ModificarTituloAsync(pvc_Usuario, pvc_Clave, pvb_Imagen, pvc_NumEmpleado, pvn_Cod_Idioma, pvn_Cons_Idioma_Titulos, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmpIdiomaTitulos_ModificarTituloAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvb_Imagen() As Byte, ByVal pvc_NumEmpleado As Integer, ByVal pvn_Cod_Idioma As Integer, ByVal pvn_Cons_Idioma_Titulos As Integer, ByVal userState As Object)
            If (Me.EmpIdiomaTitulos_ModificarTituloOperationCompleted Is Nothing) Then
                Me.EmpIdiomaTitulos_ModificarTituloOperationCompleted = AddressOf Me.OnEmpIdiomaTitulos_ModificarTituloOperationCompleted
            End If
            Me.InvokeAsync("EmpIdiomaTitulos_ModificarTitulo", New Object() {pvc_Usuario, pvc_Clave, pvb_Imagen, pvc_NumEmpleado, pvn_Cod_Idioma, pvn_Cons_Idioma_Titulos}, Me.EmpIdiomaTitulos_ModificarTituloOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmpIdiomaTitulos_ModificarTituloOperationCompleted(ByVal arg As Object)
            If (Not (Me.EmpIdiomaTitulos_ModificarTituloCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EmpIdiomaTitulos_ModificarTituloCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/EmpIdiomaTitulos_ObtenerTitulo", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EmpIdiomaTitulos_ObtenerTitulo(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_NumEmpleado As Integer, ByVal pvn_Cod_Idioma As Integer, ByVal pvn_Cons_Idioma_Titulos As Integer) As <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> Byte()
            Dim results() As Object = Me.Invoke("EmpIdiomaTitulos_ObtenerTitulo", New Object() {pvc_Usuario, pvc_Clave, pvc_NumEmpleado, pvn_Cod_Idioma, pvn_Cons_Idioma_Titulos})
            Return CType(results(0),Byte())
        End Function
        
        '''<remarks/>
        Public Overloads Sub EmpIdiomaTitulos_ObtenerTituloAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_NumEmpleado As Integer, ByVal pvn_Cod_Idioma As Integer, ByVal pvn_Cons_Idioma_Titulos As Integer)
            Me.EmpIdiomaTitulos_ObtenerTituloAsync(pvc_Usuario, pvc_Clave, pvc_NumEmpleado, pvn_Cod_Idioma, pvn_Cons_Idioma_Titulos, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmpIdiomaTitulos_ObtenerTituloAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_NumEmpleado As Integer, ByVal pvn_Cod_Idioma As Integer, ByVal pvn_Cons_Idioma_Titulos As Integer, ByVal userState As Object)
            If (Me.EmpIdiomaTitulos_ObtenerTituloOperationCompleted Is Nothing) Then
                Me.EmpIdiomaTitulos_ObtenerTituloOperationCompleted = AddressOf Me.OnEmpIdiomaTitulos_ObtenerTituloOperationCompleted
            End If
            Me.InvokeAsync("EmpIdiomaTitulos_ObtenerTitulo", New Object() {pvc_Usuario, pvc_Clave, pvc_NumEmpleado, pvn_Cod_Idioma, pvn_Cons_Idioma_Titulos}, Me.EmpIdiomaTitulos_ObtenerTituloOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmpIdiomaTitulos_ObtenerTituloOperationCompleted(ByVal arg As Object)
            If (Not (Me.EmpIdiomaTitulos_ObtenerTituloCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EmpIdiomaTitulos_ObtenerTituloCompleted(Me, New EmpIdiomaTitulos_ObtenerTituloCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/EmpIdiomaTitulosAut_ListarRegistros", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EmpIdiomaTitulosAut_ListarRegistros(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("EmpIdiomaTitulosAut_ListarRegistros", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EmpIdiomaTitulosAut_ListarRegistrosAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String)
            Me.EmpIdiomaTitulosAut_ListarRegistrosAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmpIdiomaTitulosAut_ListarRegistrosAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String, ByVal userState As Object)
            If (Me.EmpIdiomaTitulosAut_ListarRegistrosOperationCompleted Is Nothing) Then
                Me.EmpIdiomaTitulosAut_ListarRegistrosOperationCompleted = AddressOf Me.OnEmpIdiomaTitulosAut_ListarRegistrosOperationCompleted
            End If
            Me.InvokeAsync("EmpIdiomaTitulosAut_ListarRegistros", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden}, Me.EmpIdiomaTitulosAut_ListarRegistrosOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmpIdiomaTitulosAut_ListarRegistrosOperationCompleted(ByVal arg As Object)
            If (Not (Me.EmpIdiomaTitulosAut_ListarRegistrosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EmpIdiomaTitulosAut_ListarRegistrosCompleted(Me, New EmpIdiomaTitulosAut_ListarRegistrosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/EmpIdiomaTitulosAut_ListarRegistrosLista", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EmpIdiomaTitulosAut_ListarRegistrosLista(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("EmpIdiomaTitulosAut_ListarRegistrosLista", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EmpIdiomaTitulosAut_ListarRegistrosListaAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String)
            Me.EmpIdiomaTitulosAut_ListarRegistrosListaAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmpIdiomaTitulosAut_ListarRegistrosListaAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String, ByVal userState As Object)
            If (Me.EmpIdiomaTitulosAut_ListarRegistrosListaOperationCompleted Is Nothing) Then
                Me.EmpIdiomaTitulosAut_ListarRegistrosListaOperationCompleted = AddressOf Me.OnEmpIdiomaTitulosAut_ListarRegistrosListaOperationCompleted
            End If
            Me.InvokeAsync("EmpIdiomaTitulosAut_ListarRegistrosLista", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden}, Me.EmpIdiomaTitulosAut_ListarRegistrosListaOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmpIdiomaTitulosAut_ListarRegistrosListaOperationCompleted(ByVal arg As Object)
            If (Not (Me.EmpIdiomaTitulosAut_ListarRegistrosListaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EmpIdiomaTitulosAut_ListarRegistrosListaCompleted(Me, New EmpIdiomaTitulosAut_ListarRegistrosListaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/EmpIdiomaTitulosAut_ObtenerRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EmpIdiomaTitulosAut_ObtenerRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String) As EntEmp_Idioma_Titulos_Aut
            Dim results() As Object = Me.Invoke("EmpIdiomaTitulosAut_ObtenerRegistro", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion})
            Return CType(results(0),EntEmp_Idioma_Titulos_Aut)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EmpIdiomaTitulosAut_ObtenerRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String)
            Me.EmpIdiomaTitulosAut_ObtenerRegistroAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmpIdiomaTitulosAut_ObtenerRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal userState As Object)
            If (Me.EmpIdiomaTitulosAut_ObtenerRegistroOperationCompleted Is Nothing) Then
                Me.EmpIdiomaTitulosAut_ObtenerRegistroOperationCompleted = AddressOf Me.OnEmpIdiomaTitulosAut_ObtenerRegistroOperationCompleted
            End If
            Me.InvokeAsync("EmpIdiomaTitulosAut_ObtenerRegistro", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion}, Me.EmpIdiomaTitulosAut_ObtenerRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmpIdiomaTitulosAut_ObtenerRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.EmpIdiomaTitulosAut_ObtenerRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EmpIdiomaTitulosAut_ObtenerRegistroCompleted(Me, New EmpIdiomaTitulosAut_ObtenerRegistroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/EmpIdiomaTitulosAut_InsertarRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub EmpIdiomaTitulosAut_InsertarRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EmpIdiomaTitulosAut As EntEmp_Idioma_Titulos_Aut)
            Me.Invoke("EmpIdiomaTitulosAut_InsertarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_EmpIdiomaTitulosAut})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmpIdiomaTitulosAut_InsertarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EmpIdiomaTitulosAut As EntEmp_Idioma_Titulos_Aut)
            Me.EmpIdiomaTitulosAut_InsertarRegistroAsync(pvc_Usuario, pvc_Clave, pvo_EmpIdiomaTitulosAut, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmpIdiomaTitulosAut_InsertarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EmpIdiomaTitulosAut As EntEmp_Idioma_Titulos_Aut, ByVal userState As Object)
            If (Me.EmpIdiomaTitulosAut_InsertarRegistroOperationCompleted Is Nothing) Then
                Me.EmpIdiomaTitulosAut_InsertarRegistroOperationCompleted = AddressOf Me.OnEmpIdiomaTitulosAut_InsertarRegistroOperationCompleted
            End If
            Me.InvokeAsync("EmpIdiomaTitulosAut_InsertarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_EmpIdiomaTitulosAut}, Me.EmpIdiomaTitulosAut_InsertarRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmpIdiomaTitulosAut_InsertarRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.EmpIdiomaTitulosAut_InsertarRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EmpIdiomaTitulosAut_InsertarRegistroCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/EmpIdiomaTitulosAut_BorrarRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub EmpIdiomaTitulosAut_BorrarRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EmpIdiomaTitulosAut As EntEmp_Idioma_Titulos_Aut)
            Me.Invoke("EmpIdiomaTitulosAut_BorrarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_EmpIdiomaTitulosAut})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmpIdiomaTitulosAut_BorrarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EmpIdiomaTitulosAut As EntEmp_Idioma_Titulos_Aut)
            Me.EmpIdiomaTitulosAut_BorrarRegistroAsync(pvc_Usuario, pvc_Clave, pvo_EmpIdiomaTitulosAut, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmpIdiomaTitulosAut_BorrarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EmpIdiomaTitulosAut As EntEmp_Idioma_Titulos_Aut, ByVal userState As Object)
            If (Me.EmpIdiomaTitulosAut_BorrarRegistroOperationCompleted Is Nothing) Then
                Me.EmpIdiomaTitulosAut_BorrarRegistroOperationCompleted = AddressOf Me.OnEmpIdiomaTitulosAut_BorrarRegistroOperationCompleted
            End If
            Me.InvokeAsync("EmpIdiomaTitulosAut_BorrarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_EmpIdiomaTitulosAut}, Me.EmpIdiomaTitulosAut_BorrarRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmpIdiomaTitulosAut_BorrarRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.EmpIdiomaTitulosAut_BorrarRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EmpIdiomaTitulosAut_BorrarRegistroCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/EmpIdiomaTitulosAut_ModificarRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub EmpIdiomaTitulosAut_ModificarRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EmpIdiomaTitulosAut As EntEmp_Idioma_Titulos_Aut)
            Me.Invoke("EmpIdiomaTitulosAut_ModificarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_EmpIdiomaTitulosAut})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmpIdiomaTitulosAut_ModificarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EmpIdiomaTitulosAut As EntEmp_Idioma_Titulos_Aut)
            Me.EmpIdiomaTitulosAut_ModificarRegistroAsync(pvc_Usuario, pvc_Clave, pvo_EmpIdiomaTitulosAut, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmpIdiomaTitulosAut_ModificarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EmpIdiomaTitulosAut As EntEmp_Idioma_Titulos_Aut, ByVal userState As Object)
            If (Me.EmpIdiomaTitulosAut_ModificarRegistroOperationCompleted Is Nothing) Then
                Me.EmpIdiomaTitulosAut_ModificarRegistroOperationCompleted = AddressOf Me.OnEmpIdiomaTitulosAut_ModificarRegistroOperationCompleted
            End If
            Me.InvokeAsync("EmpIdiomaTitulosAut_ModificarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_EmpIdiomaTitulosAut}, Me.EmpIdiomaTitulosAut_ModificarRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmpIdiomaTitulosAut_ModificarRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.EmpIdiomaTitulosAut_ModificarRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EmpIdiomaTitulosAut_ModificarRegistroCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/Nacion_ListarRegistros", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Nacion_ListarRegistros(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Nacion_ListarRegistros", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Nacion_ListarRegistrosAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String)
            Me.Nacion_ListarRegistrosAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Nacion_ListarRegistrosAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String, ByVal userState As Object)
            If (Me.Nacion_ListarRegistrosOperationCompleted Is Nothing) Then
                Me.Nacion_ListarRegistrosOperationCompleted = AddressOf Me.OnNacion_ListarRegistrosOperationCompleted
            End If
            Me.InvokeAsync("Nacion_ListarRegistros", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden}, Me.Nacion_ListarRegistrosOperationCompleted, userState)
        End Sub
        
        Private Sub OnNacion_ListarRegistrosOperationCompleted(ByVal arg As Object)
            If (Not (Me.Nacion_ListarRegistrosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Nacion_ListarRegistrosCompleted(Me, New Nacion_ListarRegistrosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/Nacion_ListarRegistrosLista", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Nacion_ListarRegistrosLista(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Nacion_ListarRegistrosLista", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Nacion_ListarRegistrosListaAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String)
            Me.Nacion_ListarRegistrosListaAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Nacion_ListarRegistrosListaAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String, ByVal userState As Object)
            If (Me.Nacion_ListarRegistrosListaOperationCompleted Is Nothing) Then
                Me.Nacion_ListarRegistrosListaOperationCompleted = AddressOf Me.OnNacion_ListarRegistrosListaOperationCompleted
            End If
            Me.InvokeAsync("Nacion_ListarRegistrosLista", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden}, Me.Nacion_ListarRegistrosListaOperationCompleted, userState)
        End Sub
        
        Private Sub OnNacion_ListarRegistrosListaOperationCompleted(ByVal arg As Object)
            If (Not (Me.Nacion_ListarRegistrosListaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Nacion_ListarRegistrosListaCompleted(Me, New Nacion_ListarRegistrosListaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/Nacion_ObtenerRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Nacion_ObtenerRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String) As EntNacion
            Dim results() As Object = Me.Invoke("Nacion_ObtenerRegistro", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion})
            Return CType(results(0),EntNacion)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Nacion_ObtenerRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String)
            Me.Nacion_ObtenerRegistroAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Nacion_ObtenerRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal userState As Object)
            If (Me.Nacion_ObtenerRegistroOperationCompleted Is Nothing) Then
                Me.Nacion_ObtenerRegistroOperationCompleted = AddressOf Me.OnNacion_ObtenerRegistroOperationCompleted
            End If
            Me.InvokeAsync("Nacion_ObtenerRegistro", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion}, Me.Nacion_ObtenerRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnNacion_ObtenerRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.Nacion_ObtenerRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Nacion_ObtenerRegistroCompleted(Me, New Nacion_ObtenerRegistroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/Cursos_ListarRegistros", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Cursos_ListarRegistros(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Cursos_ListarRegistros", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Cursos_ListarRegistrosAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String)
            Me.Cursos_ListarRegistrosAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Cursos_ListarRegistrosAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String, ByVal userState As Object)
            If (Me.Cursos_ListarRegistrosOperationCompleted Is Nothing) Then
                Me.Cursos_ListarRegistrosOperationCompleted = AddressOf Me.OnCursos_ListarRegistrosOperationCompleted
            End If
            Me.InvokeAsync("Cursos_ListarRegistros", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden}, Me.Cursos_ListarRegistrosOperationCompleted, userState)
        End Sub
        
        Private Sub OnCursos_ListarRegistrosOperationCompleted(ByVal arg As Object)
            If (Not (Me.Cursos_ListarRegistrosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Cursos_ListarRegistrosCompleted(Me, New Cursos_ListarRegistrosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/Cursos_ListarRegistrosLista", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Cursos_ListarRegistrosLista(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Cursos_ListarRegistrosLista", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Cursos_ListarRegistrosListaAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String)
            Me.Cursos_ListarRegistrosListaAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Cursos_ListarRegistrosListaAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String, ByVal userState As Object)
            If (Me.Cursos_ListarRegistrosListaOperationCompleted Is Nothing) Then
                Me.Cursos_ListarRegistrosListaOperationCompleted = AddressOf Me.OnCursos_ListarRegistrosListaOperationCompleted
            End If
            Me.InvokeAsync("Cursos_ListarRegistrosLista", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden}, Me.Cursos_ListarRegistrosListaOperationCompleted, userState)
        End Sub
        
        Private Sub OnCursos_ListarRegistrosListaOperationCompleted(ByVal arg As Object)
            If (Not (Me.Cursos_ListarRegistrosListaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Cursos_ListarRegistrosListaCompleted(Me, New Cursos_ListarRegistrosListaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/Cursos_ObtenerRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Cursos_ObtenerRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String) As EntCursos
            Dim results() As Object = Me.Invoke("Cursos_ObtenerRegistro", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion})
            Return CType(results(0),EntCursos)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Cursos_ObtenerRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String)
            Me.Cursos_ObtenerRegistroAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Cursos_ObtenerRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal userState As Object)
            If (Me.Cursos_ObtenerRegistroOperationCompleted Is Nothing) Then
                Me.Cursos_ObtenerRegistroOperationCompleted = AddressOf Me.OnCursos_ObtenerRegistroOperationCompleted
            End If
            Me.InvokeAsync("Cursos_ObtenerRegistro", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion}, Me.Cursos_ObtenerRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnCursos_ObtenerRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.Cursos_ObtenerRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Cursos_ObtenerRegistroCompleted(Me, New Cursos_ObtenerRegistroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/Cursos_InsertarRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub Cursos_InsertarRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Cursos As EntCursos)
            Me.Invoke("Cursos_InsertarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_Cursos})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Cursos_InsertarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Cursos As EntCursos)
            Me.Cursos_InsertarRegistroAsync(pvc_Usuario, pvc_Clave, pvo_Cursos, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Cursos_InsertarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Cursos As EntCursos, ByVal userState As Object)
            If (Me.Cursos_InsertarRegistroOperationCompleted Is Nothing) Then
                Me.Cursos_InsertarRegistroOperationCompleted = AddressOf Me.OnCursos_InsertarRegistroOperationCompleted
            End If
            Me.InvokeAsync("Cursos_InsertarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_Cursos}, Me.Cursos_InsertarRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnCursos_InsertarRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.Cursos_InsertarRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Cursos_InsertarRegistroCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/Cursos_BorrarRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub Cursos_BorrarRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Cursos As EntCursos)
            Me.Invoke("Cursos_BorrarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_Cursos})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Cursos_BorrarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Cursos As EntCursos)
            Me.Cursos_BorrarRegistroAsync(pvc_Usuario, pvc_Clave, pvo_Cursos, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Cursos_BorrarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Cursos As EntCursos, ByVal userState As Object)
            If (Me.Cursos_BorrarRegistroOperationCompleted Is Nothing) Then
                Me.Cursos_BorrarRegistroOperationCompleted = AddressOf Me.OnCursos_BorrarRegistroOperationCompleted
            End If
            Me.InvokeAsync("Cursos_BorrarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_Cursos}, Me.Cursos_BorrarRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnCursos_BorrarRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.Cursos_BorrarRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Cursos_BorrarRegistroCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/Cursos_ModificarRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub Cursos_ModificarRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Cursos As EntCursos)
            Me.Invoke("Cursos_ModificarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_Cursos})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Cursos_ModificarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Cursos As EntCursos)
            Me.Cursos_ModificarRegistroAsync(pvc_Usuario, pvc_Clave, pvo_Cursos, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Cursos_ModificarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_Cursos As EntCursos, ByVal userState As Object)
            If (Me.Cursos_ModificarRegistroOperationCompleted Is Nothing) Then
                Me.Cursos_ModificarRegistroOperationCompleted = AddressOf Me.OnCursos_ModificarRegistroOperationCompleted
            End If
            Me.InvokeAsync("Cursos_ModificarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_Cursos}, Me.Cursos_ModificarRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnCursos_ModificarRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.Cursos_ModificarRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Cursos_ModificarRegistroCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/EmpCursos_ListarRegistros", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EmpCursos_ListarRegistros(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("EmpCursos_ListarRegistros", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EmpCursos_ListarRegistrosAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String)
            Me.EmpCursos_ListarRegistrosAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmpCursos_ListarRegistrosAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String, ByVal userState As Object)
            If (Me.EmpCursos_ListarRegistrosOperationCompleted Is Nothing) Then
                Me.EmpCursos_ListarRegistrosOperationCompleted = AddressOf Me.OnEmpCursos_ListarRegistrosOperationCompleted
            End If
            Me.InvokeAsync("EmpCursos_ListarRegistros", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden}, Me.EmpCursos_ListarRegistrosOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmpCursos_ListarRegistrosOperationCompleted(ByVal arg As Object)
            If (Not (Me.EmpCursos_ListarRegistrosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EmpCursos_ListarRegistrosCompleted(Me, New EmpCursos_ListarRegistrosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/EmpCursos_ListarRegistrosLista", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EmpCursos_ListarRegistrosLista(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("EmpCursos_ListarRegistrosLista", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EmpCursos_ListarRegistrosListaAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String)
            Me.EmpCursos_ListarRegistrosListaAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmpCursos_ListarRegistrosListaAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal pvc_Orden As String, ByVal userState As Object)
            If (Me.EmpCursos_ListarRegistrosListaOperationCompleted Is Nothing) Then
                Me.EmpCursos_ListarRegistrosListaOperationCompleted = AddressOf Me.OnEmpCursos_ListarRegistrosListaOperationCompleted
            End If
            Me.InvokeAsync("EmpCursos_ListarRegistrosLista", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden}, Me.EmpCursos_ListarRegistrosListaOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmpCursos_ListarRegistrosListaOperationCompleted(ByVal arg As Object)
            If (Not (Me.EmpCursos_ListarRegistrosListaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EmpCursos_ListarRegistrosListaCompleted(Me, New EmpCursos_ListarRegistrosListaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/EmpCursos_ObtenerRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EmpCursos_ObtenerRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String) As EntEmp_Cursos
            Dim results() As Object = Me.Invoke("EmpCursos_ObtenerRegistro", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion})
            Return CType(results(0),EntEmp_Cursos)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EmpCursos_ObtenerRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String)
            Me.EmpCursos_ObtenerRegistroAsync(pvc_Usuario, pvc_Clave, pvc_Condicion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmpCursos_ObtenerRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvc_Condicion As String, ByVal userState As Object)
            If (Me.EmpCursos_ObtenerRegistroOperationCompleted Is Nothing) Then
                Me.EmpCursos_ObtenerRegistroOperationCompleted = AddressOf Me.OnEmpCursos_ObtenerRegistroOperationCompleted
            End If
            Me.InvokeAsync("EmpCursos_ObtenerRegistro", New Object() {pvc_Usuario, pvc_Clave, pvc_Condicion}, Me.EmpCursos_ObtenerRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmpCursos_ObtenerRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.EmpCursos_ObtenerRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EmpCursos_ObtenerRegistroCompleted(Me, New EmpCursos_ObtenerRegistroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://eu.ucr.ac.cr/EU_Curriculo/EmpCursos_InsertarRegistro", RequestNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", ResponseNamespace:="http://eu.ucr.ac.cr/EU_Curriculo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub EmpCursos_InsertarRegistro(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EmpCursos As EntEmp_Cursos)
            Me.Invoke("EmpCursos_InsertarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_EmpCursos})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmpCursos_InsertarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EmpCursos As EntEmp_Cursos)
            Me.EmpCursos_InsertarRegistroAsync(pvc_Usuario, pvc_Clave, pvo_EmpCursos, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmpCursos_InsertarRegistroAsync(ByVal pvc_Usuario As String, ByVal pvc_Clave As String, ByVal pvo_EmpCursos As EntEmp_Cursos, ByVal userState As Object)
            If (Me.EmpCursos_InsertarRegistroOperationCompleted Is Nothing) Then
                Me.EmpCursos_InsertarRegistroOperationCompleted = AddressOf Me.OnEmpCursos_InsertarRegistroOperationCompleted
            End If
            Me.InvokeAsync("EmpCursos_InsertarRegistro", New Object() {pvc_Usuario, pvc_Clave, pvo_EmpCursos}, Me.EmpCursos_InsertarRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmpCursos_InsertarRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.EmpCursos_InsertarRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EmpCursos_InsertarRegistroCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://eu.ucr.ac.cr/EU_Curriculo")>  _
    Partial Public Class EntEmp_Reconocimientos
        
        Private nUM_EMPLEADOField As Integer
        
        Private cONS_RECONOCIMIENTOSField As Integer
        
        Private iD_TIPO_RECONOCIMIENTOField As String
        
        Private dESCRECONOCIMIENTOField As String
        
        Private cODIGO_NACIONField As String
        
        Private nOMBRE_NACIONField As String
        
        Private oTORGADO_PORField As String
        
        Private nOMBREField As String
        
        Private mOTIVOField As String
        
        Private aNNOField As Integer
        
        Private sUBTIPOField As String
        
        Private oBSERVACIONESField As String
        
        Private uSR_REVISIONField As String
        
        Private fEC_REVISIONField As Date
        
        Private eSTADO_REVISIONField As String
        
        Private dESCESTADOField As String
        
        Private tIME_STAMPField As String
        
        Private existeField As Boolean
        
        '''<remarks/>
        Public Property NUM_EMPLEADO() As Integer
            Get
                Return Me.nUM_EMPLEADOField
            End Get
            Set
                Me.nUM_EMPLEADOField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CONS_RECONOCIMIENTOS() As Integer
            Get
                Return Me.cONS_RECONOCIMIENTOSField
            End Get
            Set
                Me.cONS_RECONOCIMIENTOSField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ID_TIPO_RECONOCIMIENTO() As String
            Get
                Return Me.iD_TIPO_RECONOCIMIENTOField
            End Get
            Set
                Me.iD_TIPO_RECONOCIMIENTOField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DESCRECONOCIMIENTO() As String
            Get
                Return Me.dESCRECONOCIMIENTOField
            End Get
            Set
                Me.dESCRECONOCIMIENTOField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CODIGO_NACION() As String
            Get
                Return Me.cODIGO_NACIONField
            End Get
            Set
                Me.cODIGO_NACIONField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NOMBRE_NACION() As String
            Get
                Return Me.nOMBRE_NACIONField
            End Get
            Set
                Me.nOMBRE_NACIONField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property OTORGADO_POR() As String
            Get
                Return Me.oTORGADO_PORField
            End Get
            Set
                Me.oTORGADO_PORField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NOMBRE() As String
            Get
                Return Me.nOMBREField
            End Get
            Set
                Me.nOMBREField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MOTIVO() As String
            Get
                Return Me.mOTIVOField
            End Get
            Set
                Me.mOTIVOField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ANNO() As Integer
            Get
                Return Me.aNNOField
            End Get
            Set
                Me.aNNOField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SUBTIPO() As String
            Get
                Return Me.sUBTIPOField
            End Get
            Set
                Me.sUBTIPOField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property OBSERVACIONES() As String
            Get
                Return Me.oBSERVACIONESField
            End Get
            Set
                Me.oBSERVACIONESField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property USR_REVISION() As String
            Get
                Return Me.uSR_REVISIONField
            End Get
            Set
                Me.uSR_REVISIONField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FEC_REVISION() As Date
            Get
                Return Me.fEC_REVISIONField
            End Get
            Set
                Me.fEC_REVISIONField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ESTADO_REVISION() As String
            Get
                Return Me.eSTADO_REVISIONField
            End Get
            Set
                Me.eSTADO_REVISIONField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DESCESTADO() As String
            Get
                Return Me.dESCESTADOField
            End Get
            Set
                Me.dESCESTADOField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TIME_STAMP() As String
            Get
                Return Me.tIME_STAMPField
            End Get
            Set
                Me.tIME_STAMPField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Existe() As Boolean
            Get
                Return Me.existeField
            End Get
            Set
                Me.existeField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://eu.ucr.ac.cr/EU_Curriculo")>  _
    Partial Public Class EntCursos
        
        Private cOD_CURSOField As Integer
        
        Private dESCRIPCIONField As String
        
        Private eSTADOField As String
        
        Private iNDICADOR_REGIMENField As String
        
        Private uSUARIO_ULTI_MODIField As String
        
        Private fECHA_ULTI_MODIField As Date
        
        Private time_stampField As String
        
        Private existeField As Boolean
        
        '''<remarks/>
        Public Property COD_CURSO() As Integer
            Get
                Return Me.cOD_CURSOField
            End Get
            Set
                Me.cOD_CURSOField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DESCRIPCION() As String
            Get
                Return Me.dESCRIPCIONField
            End Get
            Set
                Me.dESCRIPCIONField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ESTADO() As String
            Get
                Return Me.eSTADOField
            End Get
            Set
                Me.eSTADOField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property INDICADOR_REGIMEN() As String
            Get
                Return Me.iNDICADOR_REGIMENField
            End Get
            Set
                Me.iNDICADOR_REGIMENField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property USUARIO_ULTI_MODI() As String
            Get
                Return Me.uSUARIO_ULTI_MODIField
            End Get
            Set
                Me.uSUARIO_ULTI_MODIField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FECHA_ULTI_MODI() As Date
            Get
                Return Me.fECHA_ULTI_MODIField
            End Get
            Set
                Me.fECHA_ULTI_MODIField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Time_stamp() As String
            Get
                Return Me.time_stampField
            End Get
            Set
                Me.time_stampField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Existe() As Boolean
            Get
                Return Me.existeField
            End Get
            Set
                Me.existeField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://eu.ucr.ac.cr/EU_Curriculo")>  _
    Partial Public Class EntNacion
        
        Private cODIGO_NACIONField As String
        
        Private nOMBRE_NACIONField As String
        
        Private cOD_PAIS_TECField As String
        
        Private gENTILICIOField As String
        
        '''<remarks/>
        Public Property CODIGO_NACION() As String
            Get
                Return Me.cODIGO_NACIONField
            End Get
            Set
                Me.cODIGO_NACIONField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NOMBRE_NACION() As String
            Get
                Return Me.nOMBRE_NACIONField
            End Get
            Set
                Me.nOMBRE_NACIONField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property COD_PAIS_TEC() As String
            Get
                Return Me.cOD_PAIS_TECField
            End Get
            Set
                Me.cOD_PAIS_TECField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property GENTILICIO() As String
            Get
                Return Me.gENTILICIOField
            End Get
            Set
                Me.gENTILICIOField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://eu.ucr.ac.cr/EU_Curriculo")>  _
    Partial Public Class EntEmp_Idioma_Titulos_Aut
        
        Private nUM_EMPLEADOField As Integer
        
        Private cOD_IDIOMAField As String
        
        Private cONS_IDIOMA_TITULOSField As Integer
        
        Private cONS_AUTORIZACIONField As Integer
        
        Private uSUARIO_APROBACIONField As String
        
        Private fECHA_APROBACIONField As Date
        
        Private aREAField As String
        
        Private time_stampField As String
        
        '''<remarks/>
        Public Property NUM_EMPLEADO() As Integer
            Get
                Return Me.nUM_EMPLEADOField
            End Get
            Set
                Me.nUM_EMPLEADOField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property COD_IDIOMA() As String
            Get
                Return Me.cOD_IDIOMAField
            End Get
            Set
                Me.cOD_IDIOMAField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CONS_IDIOMA_TITULOS() As Integer
            Get
                Return Me.cONS_IDIOMA_TITULOSField
            End Get
            Set
                Me.cONS_IDIOMA_TITULOSField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CONS_AUTORIZACION() As Integer
            Get
                Return Me.cONS_AUTORIZACIONField
            End Get
            Set
                Me.cONS_AUTORIZACIONField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property USUARIO_APROBACION() As String
            Get
                Return Me.uSUARIO_APROBACIONField
            End Get
            Set
                Me.uSUARIO_APROBACIONField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FECHA_APROBACION() As Date
            Get
                Return Me.fECHA_APROBACIONField
            End Get
            Set
                Me.fECHA_APROBACIONField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AREA() As String
            Get
                Return Me.aREAField
            End Get
            Set
                Me.aREAField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Time_stamp() As String
            Get
                Return Me.time_stampField
            End Get
            Set
                Me.time_stampField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://eu.ucr.ac.cr/EU_Curriculo")>  _
    Partial Public Class EntEmp_Idioma_Titulos
        
        Private nUM_EMPLEADOField As Integer
        
        Private cOD_IDIOMAField As Integer
        
        Private dESC_COD_IDIOMAField As String
        
        Private cONS_IDIOMA_TITULOSField As Integer
        
        Private dESCRIPCIONField As String
        
        Private iNSTITUCIONField As String
        
        Private pERIODOField As String
        
        Private iMAGEN_TITULOField As Object
        
        Private uSUARIO_ULTI_MODIField As String
        
        Private fECHA_ULTI_MODIField As Date
        
        Private time_stampField As String
        
        Private existeField As Boolean
        
        '''<remarks/>
        Public Property NUM_EMPLEADO() As Integer
            Get
                Return Me.nUM_EMPLEADOField
            End Get
            Set
                Me.nUM_EMPLEADOField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property COD_IDIOMA() As Integer
            Get
                Return Me.cOD_IDIOMAField
            End Get
            Set
                Me.cOD_IDIOMAField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DESC_COD_IDIOMA() As String
            Get
                Return Me.dESC_COD_IDIOMAField
            End Get
            Set
                Me.dESC_COD_IDIOMAField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CONS_IDIOMA_TITULOS() As Integer
            Get
                Return Me.cONS_IDIOMA_TITULOSField
            End Get
            Set
                Me.cONS_IDIOMA_TITULOSField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DESCRIPCION() As String
            Get
                Return Me.dESCRIPCIONField
            End Get
            Set
                Me.dESCRIPCIONField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property INSTITUCION() As String
            Get
                Return Me.iNSTITUCIONField
            End Get
            Set
                Me.iNSTITUCIONField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PERIODO() As String
            Get
                Return Me.pERIODOField
            End Get
            Set
                Me.pERIODOField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IMAGEN_TITULO() As Object
            Get
                Return Me.iMAGEN_TITULOField
            End Get
            Set
                Me.iMAGEN_TITULOField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property USUARIO_ULTI_MODI() As String
            Get
                Return Me.uSUARIO_ULTI_MODIField
            End Get
            Set
                Me.uSUARIO_ULTI_MODIField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FECHA_ULTI_MODI() As Date
            Get
                Return Me.fECHA_ULTI_MODIField
            End Get
            Set
                Me.fECHA_ULTI_MODIField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Time_stamp() As String
            Get
                Return Me.time_stampField
            End Get
            Set
                Me.time_stampField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Existe() As Boolean
            Get
                Return Me.existeField
            End Get
            Set
                Me.existeField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://eu.ucr.ac.cr/EU_Curriculo")>  _
    Partial Public Class EntEmp_Idiomas
        
        Private nUM_EMPLEADOField As Integer
        
        Private cOD_IDIOMAField As Integer
        
        Private dESCRIPCIONField As String
        
        Private pORC_LEEField As Integer
        
        Private pORC_ESCRIBEField As Integer
        
        Private pORC_CONVERSAField As Integer
        
        Private uSUARIO_ULTI_MODIField As String
        
        Private fECHA_ULTI_MODIField As Date
        
        Private time_stampField As String
        
        Private existeField As Boolean
        
        '''<remarks/>
        Public Property NUM_EMPLEADO() As Integer
            Get
                Return Me.nUM_EMPLEADOField
            End Get
            Set
                Me.nUM_EMPLEADOField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property COD_IDIOMA() As Integer
            Get
                Return Me.cOD_IDIOMAField
            End Get
            Set
                Me.cOD_IDIOMAField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DESCRIPCION() As String
            Get
                Return Me.dESCRIPCIONField
            End Get
            Set
                Me.dESCRIPCIONField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PORC_LEE() As Integer
            Get
                Return Me.pORC_LEEField
            End Get
            Set
                Me.pORC_LEEField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PORC_ESCRIBE() As Integer
            Get
                Return Me.pORC_ESCRIBEField
            End Get
            Set
                Me.pORC_ESCRIBEField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PORC_CONVERSA() As Integer
            Get
                Return Me.pORC_CONVERSAField
            End Get
            Set
                Me.pORC_CONVERSAField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property USUARIO_ULTI_MODI() As String
            Get
                Return Me.uSUARIO_ULTI_MODIField
            End Get
            Set
                Me.uSUARIO_ULTI_MODIField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FECHA_ULTI_MODI() As Date
            Get
                Return Me.fECHA_ULTI_MODIField
            End Get
            Set
                Me.fECHA_ULTI_MODIField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Time_stamp() As String
            Get
                Return Me.time_stampField
            End Get
            Set
                Me.time_stampField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Existe() As Boolean
            Get
                Return Me.existeField
            End Get
            Set
                Me.existeField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://eu.ucr.ac.cr/EU_Curriculo")>  _
    Partial Public Class EntEmp_Est_Formales_Aut
        
        Private nUM_EMPLEADOField As Integer
        
        Private cOD_NIVEL_EDUCATIVOField As Integer
        
        Private cOD_CARRERAField As Integer
        
        Private cONS_AUTORIZACIONField As Integer
        
        Private uSUARIO_APROBACIONField As String
        
        Private fECHA_APROBACIONField As Date
        
        Private eSTADO_APROBACIONField As String
        
        Private aREAField As String
        
        Private time_stampField As String
        
        Private existeField As Boolean
        
        '''<remarks/>
        Public Property NUM_EMPLEADO() As Integer
            Get
                Return Me.nUM_EMPLEADOField
            End Get
            Set
                Me.nUM_EMPLEADOField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property COD_NIVEL_EDUCATIVO() As Integer
            Get
                Return Me.cOD_NIVEL_EDUCATIVOField
            End Get
            Set
                Me.cOD_NIVEL_EDUCATIVOField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property COD_CARRERA() As Integer
            Get
                Return Me.cOD_CARRERAField
            End Get
            Set
                Me.cOD_CARRERAField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CONS_AUTORIZACION() As Integer
            Get
                Return Me.cONS_AUTORIZACIONField
            End Get
            Set
                Me.cONS_AUTORIZACIONField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property USUARIO_APROBACION() As String
            Get
                Return Me.uSUARIO_APROBACIONField
            End Get
            Set
                Me.uSUARIO_APROBACIONField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FECHA_APROBACION() As Date
            Get
                Return Me.fECHA_APROBACIONField
            End Get
            Set
                Me.fECHA_APROBACIONField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ESTADO_APROBACION() As String
            Get
                Return Me.eSTADO_APROBACIONField
            End Get
            Set
                Me.eSTADO_APROBACIONField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AREA() As String
            Get
                Return Me.aREAField
            End Get
            Set
                Me.aREAField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Time_stamp() As String
            Get
                Return Me.time_stampField
            End Get
            Set
                Me.time_stampField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Existe() As Boolean
            Get
                Return Me.existeField
            End Get
            Set
                Me.existeField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://eu.ucr.ac.cr/EU_Curriculo")>  _
    Partial Public Class EntEmp_Est_Formales
        
        Private nUM_EMPLEADOField As Integer
        
        Private cOD_NIVEL_EDUCATIVOField As Integer
        
        Private dESC_COD_NIVEL_EDUCATIVOField As String
        
        Private cOD_CARRERAField As String
        
        Private dESC_COD_CARRERAField As String
        
        Private cODIGO_NACIONField As String
        
        Private nOMBRE_NACIONField As String
        
        Private tITULOField As String
        
        Private aNNO_FINALIZACIONField As Integer
        
        Private fECHA_GRADUACIONField As Date
        
        Private iNSTITUCIONField As String
        
        Private dESC_CARRERAField As String
        
        Private aREA_ESPECIALIDADField As String
        
        Private pROMEDIOField As Decimal
        
        Private tEMA_TESISField As String
        
        Private iMAGEN_TITULOField As Object
        
        Private uSR_REVISIONField As String
        
        Private fEC_REVISIONField As Date
        
        Private eSTADO_REVISIONField As String
        
        Private uSUARIO_ULTI_MODIField As String
        
        Private fECHA_ULTI_MODIField As Date
        
        Private time_stampField As String
        
        Private existeField As Boolean
        
        '''<remarks/>
        Public Property NUM_EMPLEADO() As Integer
            Get
                Return Me.nUM_EMPLEADOField
            End Get
            Set
                Me.nUM_EMPLEADOField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property COD_NIVEL_EDUCATIVO() As Integer
            Get
                Return Me.cOD_NIVEL_EDUCATIVOField
            End Get
            Set
                Me.cOD_NIVEL_EDUCATIVOField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DESC_COD_NIVEL_EDUCATIVO() As String
            Get
                Return Me.dESC_COD_NIVEL_EDUCATIVOField
            End Get
            Set
                Me.dESC_COD_NIVEL_EDUCATIVOField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property COD_CARRERA() As String
            Get
                Return Me.cOD_CARRERAField
            End Get
            Set
                Me.cOD_CARRERAField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DESC_COD_CARRERA() As String
            Get
                Return Me.dESC_COD_CARRERAField
            End Get
            Set
                Me.dESC_COD_CARRERAField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CODIGO_NACION() As String
            Get
                Return Me.cODIGO_NACIONField
            End Get
            Set
                Me.cODIGO_NACIONField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NOMBRE_NACION() As String
            Get
                Return Me.nOMBRE_NACIONField
            End Get
            Set
                Me.nOMBRE_NACIONField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TITULO() As String
            Get
                Return Me.tITULOField
            End Get
            Set
                Me.tITULOField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ANNO_FINALIZACION() As Integer
            Get
                Return Me.aNNO_FINALIZACIONField
            End Get
            Set
                Me.aNNO_FINALIZACIONField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FECHA_GRADUACION() As Date
            Get
                Return Me.fECHA_GRADUACIONField
            End Get
            Set
                Me.fECHA_GRADUACIONField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property INSTITUCION() As String
            Get
                Return Me.iNSTITUCIONField
            End Get
            Set
                Me.iNSTITUCIONField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DESC_CARRERA() As String
            Get
                Return Me.dESC_CARRERAField
            End Get
            Set
                Me.dESC_CARRERAField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AREA_ESPECIALIDAD() As String
            Get
                Return Me.aREA_ESPECIALIDADField
            End Get
            Set
                Me.aREA_ESPECIALIDADField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PROMEDIO() As Decimal
            Get
                Return Me.pROMEDIOField
            End Get
            Set
                Me.pROMEDIOField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TEMA_TESIS() As String
            Get
                Return Me.tEMA_TESISField
            End Get
            Set
                Me.tEMA_TESISField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IMAGEN_TITULO() As Object
            Get
                Return Me.iMAGEN_TITULOField
            End Get
            Set
                Me.iMAGEN_TITULOField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property USR_REVISION() As String
            Get
                Return Me.uSR_REVISIONField
            End Get
            Set
                Me.uSR_REVISIONField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FEC_REVISION() As Date
            Get
                Return Me.fEC_REVISIONField
            End Get
            Set
                Me.fEC_REVISIONField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ESTADO_REVISION() As String
            Get
                Return Me.eSTADO_REVISIONField
            End Get
            Set
                Me.eSTADO_REVISIONField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property USUARIO_ULTI_MODI() As String
            Get
                Return Me.uSUARIO_ULTI_MODIField
            End Get
            Set
                Me.uSUARIO_ULTI_MODIField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FECHA_ULTI_MODI() As Date
            Get
                Return Me.fECHA_ULTI_MODIField
            End Get
            Set
                Me.fECHA_ULTI_MODIField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Time_stamp() As String
            Get
                Return Me.time_stampField
            End Get
            Set
                Me.time_stampField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Existe() As Boolean
            Get
                Return Me.existeField
            End Get
            Set
                Me.existeField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://eu.ucr.ac.cr/EU_Curriculo")>  _
    Partial Public Class EntEmp_Exp_Laboral
        
        Private nUM_EMPLEADOField As Integer
        
        Private cODIGO_UBICAField As Integer
        
        Private cONS_EXPERIENCIAField As Integer
        
        Private lUGAR_TRABAJOField As String
        
        Private tELEFONOField As String
        
        Private tELF_EXTENSIONField As String
        
        Private nOMBRE_PUESTOField As String
        
        Private fECHA_INGRESOField As Date
        
        Private fECHA_SALIDAField As Date
        
        Private hORAS_X_SEMANAField As Integer
        
        Private mOTIVO_SALIDAField As String
        
        Private fUNCIONES_DESEMPField As String
        
        Private nOMBRE_JEFEField As String
        
        Private pUESTO_JEFEField As String
        
        Private eMPLE_OBSERVACIONESField As String
        
        Private cARGO_DOCENTEField As Integer
        
        Private uSR_REVISIONField As String
        
        Private fEC_REVISIONField As Date
        
        Private eSTADO_REVISIONField As String
        
        Private uSUARIO_ULTI_MODIField As String
        
        Private fECHA_ULTI_MODIField As Date
        
        Private time_stampField As String
        
        Private existeField As Boolean
        
        '''<remarks/>
        Public Property NUM_EMPLEADO() As Integer
            Get
                Return Me.nUM_EMPLEADOField
            End Get
            Set
                Me.nUM_EMPLEADOField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CODIGO_UBICA() As Integer
            Get
                Return Me.cODIGO_UBICAField
            End Get
            Set
                Me.cODIGO_UBICAField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CONS_EXPERIENCIA() As Integer
            Get
                Return Me.cONS_EXPERIENCIAField
            End Get
            Set
                Me.cONS_EXPERIENCIAField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property LUGAR_TRABAJO() As String
            Get
                Return Me.lUGAR_TRABAJOField
            End Get
            Set
                Me.lUGAR_TRABAJOField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TELEFONO() As String
            Get
                Return Me.tELEFONOField
            End Get
            Set
                Me.tELEFONOField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TELF_EXTENSION() As String
            Get
                Return Me.tELF_EXTENSIONField
            End Get
            Set
                Me.tELF_EXTENSIONField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NOMBRE_PUESTO() As String
            Get
                Return Me.nOMBRE_PUESTOField
            End Get
            Set
                Me.nOMBRE_PUESTOField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FECHA_INGRESO() As Date
            Get
                Return Me.fECHA_INGRESOField
            End Get
            Set
                Me.fECHA_INGRESOField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FECHA_SALIDA() As Date
            Get
                Return Me.fECHA_SALIDAField
            End Get
            Set
                Me.fECHA_SALIDAField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property HORAS_X_SEMANA() As Integer
            Get
                Return Me.hORAS_X_SEMANAField
            End Get
            Set
                Me.hORAS_X_SEMANAField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MOTIVO_SALIDA() As String
            Get
                Return Me.mOTIVO_SALIDAField
            End Get
            Set
                Me.mOTIVO_SALIDAField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FUNCIONES_DESEMP() As String
            Get
                Return Me.fUNCIONES_DESEMPField
            End Get
            Set
                Me.fUNCIONES_DESEMPField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NOMBRE_JEFE() As String
            Get
                Return Me.nOMBRE_JEFEField
            End Get
            Set
                Me.nOMBRE_JEFEField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PUESTO_JEFE() As String
            Get
                Return Me.pUESTO_JEFEField
            End Get
            Set
                Me.pUESTO_JEFEField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EMPLE_OBSERVACIONES() As String
            Get
                Return Me.eMPLE_OBSERVACIONESField
            End Get
            Set
                Me.eMPLE_OBSERVACIONESField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CARGO_DOCENTE() As Integer
            Get
                Return Me.cARGO_DOCENTEField
            End Get
            Set
                Me.cARGO_DOCENTEField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property USR_REVISION() As String
            Get
                Return Me.uSR_REVISIONField
            End Get
            Set
                Me.uSR_REVISIONField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FEC_REVISION() As Date
            Get
                Return Me.fEC_REVISIONField
            End Get
            Set
                Me.fEC_REVISIONField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ESTADO_REVISION() As String
            Get
                Return Me.eSTADO_REVISIONField
            End Get
            Set
                Me.eSTADO_REVISIONField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property USUARIO_ULTI_MODI() As String
            Get
                Return Me.uSUARIO_ULTI_MODIField
            End Get
            Set
                Me.uSUARIO_ULTI_MODIField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FECHA_ULTI_MODI() As Date
            Get
                Return Me.fECHA_ULTI_MODIField
            End Get
            Set
                Me.fECHA_ULTI_MODIField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Time_stamp() As String
            Get
                Return Me.time_stampField
            End Get
            Set
                Me.time_stampField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Existe() As Boolean
            Get
                Return Me.existeField
            End Get
            Set
                Me.existeField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://eu.ucr.ac.cr/EU_Curriculo")>  _
    Partial Public Class EntEmp_Telefonos
        
        Private nUM_EMPLEADOField As Integer
        
        Private cONS_TELEFONOSField As Integer
        
        Private iD_TIPO_TELEFONOField As String
        
        Private dES_TIPO_TELEFONOField As String
        
        Private tELEFONOField As String
        
        Private uSUARIO_ULTI_MODIField As String
        
        Private fECHA_ULTI_MODIField As Date
        
        Private time_stampField As String
        
        '''<remarks/>
        Public Property NUM_EMPLEADO() As Integer
            Get
                Return Me.nUM_EMPLEADOField
            End Get
            Set
                Me.nUM_EMPLEADOField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CONS_TELEFONOS() As Integer
            Get
                Return Me.cONS_TELEFONOSField
            End Get
            Set
                Me.cONS_TELEFONOSField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ID_TIPO_TELEFONO() As String
            Get
                Return Me.iD_TIPO_TELEFONOField
            End Get
            Set
                Me.iD_TIPO_TELEFONOField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DES_TIPO_TELEFONO() As String
            Get
                Return Me.dES_TIPO_TELEFONOField
            End Get
            Set
                Me.dES_TIPO_TELEFONOField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TELEFONO() As String
            Get
                Return Me.tELEFONOField
            End Get
            Set
                Me.tELEFONOField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property USUARIO_ULTI_MODI() As String
            Get
                Return Me.uSUARIO_ULTI_MODIField
            End Get
            Set
                Me.uSUARIO_ULTI_MODIField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FECHA_ULTI_MODI() As Date
            Get
                Return Me.fECHA_ULTI_MODIField
            End Get
            Set
                Me.fECHA_ULTI_MODIField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Time_stamp() As String
            Get
                Return Me.time_stampField
            End Get
            Set
                Me.time_stampField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://eu.ucr.ac.cr/EU_Curriculo")>  _
    Partial Public Class EntNivel_Educativo
        
        Private cOD_NIVEL_EDUCATIVOField As Integer
        
        Private dESCRIPCIONField As String
        
        Private pESOField As Integer
        
        Private tIPO_NIVEL_EDUField As String
        
        Private pUNTOS_ACADEMICOSField As Integer
        
        Private eSTADOField As String
        
        Private uSUARIO_ULTI_MODIField As String
        
        Private fECHA_ULTI_MODIField As Date
        
        Private time_stampField As String
        
        Private existeField As Boolean
        
        '''<remarks/>
        Public Property COD_NIVEL_EDUCATIVO() As Integer
            Get
                Return Me.cOD_NIVEL_EDUCATIVOField
            End Get
            Set
                Me.cOD_NIVEL_EDUCATIVOField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DESCRIPCION() As String
            Get
                Return Me.dESCRIPCIONField
            End Get
            Set
                Me.dESCRIPCIONField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PESO() As Integer
            Get
                Return Me.pESOField
            End Get
            Set
                Me.pESOField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TIPO_NIVEL_EDU() As String
            Get
                Return Me.tIPO_NIVEL_EDUField
            End Get
            Set
                Me.tIPO_NIVEL_EDUField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PUNTOS_ACADEMICOS() As Integer
            Get
                Return Me.pUNTOS_ACADEMICOSField
            End Get
            Set
                Me.pUNTOS_ACADEMICOSField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ESTADO() As String
            Get
                Return Me.eSTADOField
            End Get
            Set
                Me.eSTADOField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property USUARIO_ULTI_MODI() As String
            Get
                Return Me.uSUARIO_ULTI_MODIField
            End Get
            Set
                Me.uSUARIO_ULTI_MODIField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FECHA_ULTI_MODI() As Date
            Get
                Return Me.fECHA_ULTI_MODIField
            End Get
            Set
                Me.fECHA_ULTI_MODIField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Time_stamp() As String
            Get
                Return Me.time_stampField
            End Get
            Set
                Me.time_stampField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Existe() As Boolean
            Get
                Return Me.existeField
            End Get
            Set
                Me.existeField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://eu.ucr.ac.cr/EU_Curriculo")>  _
    Partial Public Class EntCarreras
        
        Private cOD_CARRERAField As Integer
        
        Private dESCRIPCIONField As String
        
        Private eSTADOField As String
        
        Private uSUARIO_ULTI_MODIField As String
        
        Private fECHA_ULTI_MODIField As Date
        
        Private time_stampField As String
        
        Private existeField As Boolean
        
        '''<remarks/>
        Public Property COD_CARRERA() As Integer
            Get
                Return Me.cOD_CARRERAField
            End Get
            Set
                Me.cOD_CARRERAField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DESCRIPCION() As String
            Get
                Return Me.dESCRIPCIONField
            End Get
            Set
                Me.dESCRIPCIONField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ESTADO() As String
            Get
                Return Me.eSTADOField
            End Get
            Set
                Me.eSTADOField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property USUARIO_ULTI_MODI() As String
            Get
                Return Me.uSUARIO_ULTI_MODIField
            End Get
            Set
                Me.uSUARIO_ULTI_MODIField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FECHA_ULTI_MODI() As Date
            Get
                Return Me.fECHA_ULTI_MODIField
            End Get
            Set
                Me.fECHA_ULTI_MODIField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property time_stamp() As String
            Get
                Return Me.time_stampField
            End Get
            Set
                Me.time_stampField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Existe() As Boolean
            Get
                Return Me.existeField
            End Get
            Set
                Me.existeField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://eu.ucr.ac.cr/EU_Curriculo")>  _
    Partial Public Class EntEU_UNIDAD
        
        Private cODIGO_UBICAField As Integer
        
        Private dESCRIPCION_AMPLIADAField As String
        
        Private dESCRIPCIONField As String
        
        Private tIME_STAMPField As Date
        
        '''<remarks/>
        Public Property CODIGO_UBICA() As Integer
            Get
                Return Me.cODIGO_UBICAField
            End Get
            Set
                Me.cODIGO_UBICAField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DESCRIPCION_AMPLIADA() As String
            Get
                Return Me.dESCRIPCION_AMPLIADAField
            End Get
            Set
                Me.dESCRIPCION_AMPLIADAField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DESCRIPCION() As String
            Get
                Return Me.dESCRIPCIONField
            End Get
            Set
                Me.dESCRIPCIONField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TIME_STAMP() As Date
            Get
                Return Me.tIME_STAMPField
            End Get
            Set
                Me.tIME_STAMPField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://eu.ucr.ac.cr/EU_Curriculo")>  _
    Partial Public Class EntEmp_Licencia_Conducir
        
        Private nUM_EMPLEADOField As Integer
        
        Private iD_TIPO_LICENCIAField As String
        
        Private dES_TIPO_LICENCIAField As String
        
        Private fECHA_EMISIONField As Date
        
        Private uSR_REVISIONField As String
        
        Private fEC_REVISIONField As Date
        
        Private eSTADO_REVISIONField As String
        
        Private fECHA_VENCIMIENTOField As Date
        
        Private uSUARIO_ULTI_MODIField As String
        
        Private fECHA_ULTI_MODIField As Date
        
        Private time_stampField As String
        
        Private existeField As Boolean
        
        '''<remarks/>
        Public Property NUM_EMPLEADO() As Integer
            Get
                Return Me.nUM_EMPLEADOField
            End Get
            Set
                Me.nUM_EMPLEADOField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ID_TIPO_LICENCIA() As String
            Get
                Return Me.iD_TIPO_LICENCIAField
            End Get
            Set
                Me.iD_TIPO_LICENCIAField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DES_TIPO_LICENCIA() As String
            Get
                Return Me.dES_TIPO_LICENCIAField
            End Get
            Set
                Me.dES_TIPO_LICENCIAField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FECHA_EMISION() As Date
            Get
                Return Me.fECHA_EMISIONField
            End Get
            Set
                Me.fECHA_EMISIONField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property USR_REVISION() As String
            Get
                Return Me.uSR_REVISIONField
            End Get
            Set
                Me.uSR_REVISIONField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FEC_REVISION() As Date
            Get
                Return Me.fEC_REVISIONField
            End Get
            Set
                Me.fEC_REVISIONField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ESTADO_REVISION() As String
            Get
                Return Me.eSTADO_REVISIONField
            End Get
            Set
                Me.eSTADO_REVISIONField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FECHA_VENCIMIENTO() As Date
            Get
                Return Me.fECHA_VENCIMIENTOField
            End Get
            Set
                Me.fECHA_VENCIMIENTOField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property USUARIO_ULTI_MODI() As String
            Get
                Return Me.uSUARIO_ULTI_MODIField
            End Get
            Set
                Me.uSUARIO_ULTI_MODIField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FECHA_ULTI_MODI() As Date
            Get
                Return Me.fECHA_ULTI_MODIField
            End Get
            Set
                Me.fECHA_ULTI_MODIField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Time_stamp() As String
            Get
                Return Me.time_stampField
            End Get
            Set
                Me.time_stampField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Existe() As Boolean
            Get
                Return Me.existeField
            End Get
            Set
                Me.existeField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://eu.ucr.ac.cr/EU_Curriculo")>  _
    Partial Public Class EntEmp_Requisitos
        
        Private cOD_REQUISITOField As Integer
        
        Private tIPO_REQUISITOField As String
        
        Private nUM_EMPLEADOField As Integer
        
        Private fECHA_EMISIONField As Date
        
        Private fECHA_VENCIMIENTOField As Date
        
        Private fEC_REVISIONField As Date
        
        Private uSR_REVISIONField As String
        
        Private eSTADO_REVISIONField As String
        
        Private uSUARIO_ULTI_MODIField As String
        
        Private fECHA_ULTI_MODIField As Date
        
        Private tIME_STAMPField As Date
        
        Private existeField As Boolean
        
        '''<remarks/>
        Public Property COD_REQUISITO() As Integer
            Get
                Return Me.cOD_REQUISITOField
            End Get
            Set
                Me.cOD_REQUISITOField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TIPO_REQUISITO() As String
            Get
                Return Me.tIPO_REQUISITOField
            End Get
            Set
                Me.tIPO_REQUISITOField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NUM_EMPLEADO() As Integer
            Get
                Return Me.nUM_EMPLEADOField
            End Get
            Set
                Me.nUM_EMPLEADOField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FECHA_EMISION() As Date
            Get
                Return Me.fECHA_EMISIONField
            End Get
            Set
                Me.fECHA_EMISIONField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FECHA_VENCIMIENTO() As Date
            Get
                Return Me.fECHA_VENCIMIENTOField
            End Get
            Set
                Me.fECHA_VENCIMIENTOField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FEC_REVISION() As Date
            Get
                Return Me.fEC_REVISIONField
            End Get
            Set
                Me.fEC_REVISIONField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property USR_REVISION() As String
            Get
                Return Me.uSR_REVISIONField
            End Get
            Set
                Me.uSR_REVISIONField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ESTADO_REVISION() As String
            Get
                Return Me.eSTADO_REVISIONField
            End Get
            Set
                Me.eSTADO_REVISIONField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property USUARIO_ULTI_MODI() As String
            Get
                Return Me.uSUARIO_ULTI_MODIField
            End Get
            Set
                Me.uSUARIO_ULTI_MODIField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FECHA_ULTI_MODI() As Date
            Get
                Return Me.fECHA_ULTI_MODIField
            End Get
            Set
                Me.fECHA_ULTI_MODIField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TIME_STAMP() As Date
            Get
                Return Me.tIME_STAMPField
            End Get
            Set
                Me.tIME_STAMPField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Existe() As Boolean
            Get
                Return Me.existeField
            End Get
            Set
                Me.existeField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://eu.ucr.ac.cr/EU_Curriculo")>  _
    Partial Public Class EntRequisitos
        
        Private cOD_REQUISITOField As Integer
        
        Private tIPO_REQUISITOField As String
        
        Private dESCRIPCIONField As String
        
        Private eSTADOField As String
        
        Private uSUARIO_ULTI_MODIField As String
        
        Private fECHA_ULTI_MODIField As Date
        
        Private tIME_STAMPField As Date
        
        Private existeField As Boolean
        
        '''<remarks/>
        Public Property COD_REQUISITO() As Integer
            Get
                Return Me.cOD_REQUISITOField
            End Get
            Set
                Me.cOD_REQUISITOField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TIPO_REQUISITO() As String
            Get
                Return Me.tIPO_REQUISITOField
            End Get
            Set
                Me.tIPO_REQUISITOField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DESCRIPCION() As String
            Get
                Return Me.dESCRIPCIONField
            End Get
            Set
                Me.dESCRIPCIONField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ESTADO() As String
            Get
                Return Me.eSTADOField
            End Get
            Set
                Me.eSTADOField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property USUARIO_ULTI_MODI() As String
            Get
                Return Me.uSUARIO_ULTI_MODIField
            End Get
            Set
                Me.uSUARIO_ULTI_MODIField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FECHA_ULTI_MODI() As Date
            Get
                Return Me.fECHA_ULTI_MODIField
            End Get
            Set
                Me.fECHA_ULTI_MODIField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TIME_STAMP() As Date
            Get
                Return Me.tIME_STAMPField
            End Get
            Set
                Me.tIME_STAMPField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Existe() As Boolean
            Get
                Return Me.existeField
            End Get
            Set
                Me.existeField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://eu.ucr.ac.cr/EU_Curriculo")>  _
    Partial Public Class EntParentesco
        
        Private cOD_PARENTESCOField As Integer
        
        Private dESCRIPCIONField As String
        
        Private tIPOField As String
        
        Private gRADOField As String
        
        Private uSUARIO_ULTI_MODIField As String
        
        Private fECHA_ULTI_MODIField As Date
        
        Private tIME_STAMPField As Date
        
        Private existeField As Boolean
        
        '''<remarks/>
        Public Property COD_PARENTESCO() As Integer
            Get
                Return Me.cOD_PARENTESCOField
            End Get
            Set
                Me.cOD_PARENTESCOField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DESCRIPCION() As String
            Get
                Return Me.dESCRIPCIONField
            End Get
            Set
                Me.dESCRIPCIONField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TIPO() As String
            Get
                Return Me.tIPOField
            End Get
            Set
                Me.tIPOField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property GRADO() As String
            Get
                Return Me.gRADOField
            End Get
            Set
                Me.gRADOField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property USUARIO_ULTI_MODI() As String
            Get
                Return Me.uSUARIO_ULTI_MODIField
            End Get
            Set
                Me.uSUARIO_ULTI_MODIField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FECHA_ULTI_MODI() As Date
            Get
                Return Me.fECHA_ULTI_MODIField
            End Get
            Set
                Me.fECHA_ULTI_MODIField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TIME_STAMP() As Date
            Get
                Return Me.tIME_STAMPField
            End Get
            Set
                Me.tIME_STAMPField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Existe() As Boolean
            Get
                Return Me.existeField
            End Get
            Set
                Me.existeField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://eu.ucr.ac.cr/EU_Curriculo")>  _
    Partial Public Class EntEmp_Parientes
        
        Private nUM_EMPLEADOField As Integer
        
        Private nUM_EMPLEADO_PARIENField As Integer
        
        Private cOD_PARENTESCOField As Integer
        
        Private uSUARIO_ULTI_MODIField As String
        
        Private fECHA_ULTI_MODIField As Date
        
        Private tIME_STAMPField As Date
        
        Private existeField As Boolean
        
        '''<remarks/>
        Public Property NUM_EMPLEADO() As Integer
            Get
                Return Me.nUM_EMPLEADOField
            End Get
            Set
                Me.nUM_EMPLEADOField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NUM_EMPLEADO_PARIEN() As Integer
            Get
                Return Me.nUM_EMPLEADO_PARIENField
            End Get
            Set
                Me.nUM_EMPLEADO_PARIENField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property COD_PARENTESCO() As Integer
            Get
                Return Me.cOD_PARENTESCOField
            End Get
            Set
                Me.cOD_PARENTESCOField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property USUARIO_ULTI_MODI() As String
            Get
                Return Me.uSUARIO_ULTI_MODIField
            End Get
            Set
                Me.uSUARIO_ULTI_MODIField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FECHA_ULTI_MODI() As Date
            Get
                Return Me.fECHA_ULTI_MODIField
            End Get
            Set
                Me.fECHA_ULTI_MODIField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TIME_STAMP() As Date
            Get
                Return Me.tIME_STAMPField
            End Get
            Set
                Me.tIME_STAMPField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Existe() As Boolean
            Get
                Return Me.existeField
            End Get
            Set
                Me.existeField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://eu.ucr.ac.cr/EU_Curriculo")>  _
    Partial Public Class EntFuncionario
        
        Private iD_TIPO_IDENTIFICACIONField As Integer
        
        Private iD_PERSONALField As String
        
        Private nOMBREField As String
        
        Private aPELLIDO1Field As String
        
        Private aPELLIDO2Field As String
        
        Private iD_TIPO_EMPLEADOField As Integer
        
        Private existeField As Boolean
        
        '''<remarks/>
        Public Property ID_TIPO_IDENTIFICACION() As Integer
            Get
                Return Me.iD_TIPO_IDENTIFICACIONField
            End Get
            Set
                Me.iD_TIPO_IDENTIFICACIONField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ID_PERSONAL() As String
            Get
                Return Me.iD_PERSONALField
            End Get
            Set
                Me.iD_PERSONALField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NOMBRE() As String
            Get
                Return Me.nOMBREField
            End Get
            Set
                Me.nOMBREField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property APELLIDO1() As String
            Get
                Return Me.aPELLIDO1Field
            End Get
            Set
                Me.aPELLIDO1Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property APELLIDO2() As String
            Get
                Return Me.aPELLIDO2Field
            End Get
            Set
                Me.aPELLIDO2Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ID_TIPO_EMPLEADO() As Integer
            Get
                Return Me.iD_TIPO_EMPLEADOField
            End Get
            Set
                Me.iD_TIPO_EMPLEADOField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Existe() As Boolean
            Get
                Return Me.existeField
            End Get
            Set
                Me.existeField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://eu.ucr.ac.cr/EU_Curriculo")>  _
    Partial Public Class EntEmpleados
        
        Private nUM_EMPLEADOField As Integer
        
        Private cODIGO_NACIONField As String
        
        Private iD_TIPO_IDENTIFICACIONField As Integer
        
        Private nACIONField As String
        
        Private gENTILICIOField As String
        
        Private iD_PERSONALField As String
        
        Private nOMBREField As String
        
        Private aPELLIDO1Field As String
        
        Private aPELLIDO2Field As String
        
        Private iD_SEXOField As String
        
        Private fECHA_NACIMIENTOField As Date
        
        Private iD_ESTADO_CIVILField As String
        
        Private pERMISO_CONDUCIR_UNIVField As Integer
        
        Private nUM_ASEGURADOField As String
        
        Private nUM_HIJOSField As Integer
        
        Private cORREO_INSTITUCIONALField As String
        
        Private cORREO_PERSONALField As String
        
        Private aPTDOField As String
        
        Private pROVINCIAField As String
        
        Private dESC_PROVINCIAField As String
        
        Private cANTONField As String
        
        Private dESC_CANTONField As String
        
        Private dISTRITOField As String
        
        Private dESC_DISTRITOField As String
        
        Private dIREC_DOMICILIOField As String
        
        Private rEGIMENField As String
        
        Private fECHA_INGRESOField As Date
        
        Private fECHA_SALIDAField As Date
        
        Private iD_TIPO_EMPLEADOField As Integer
        
        Private eSTADO_EUField As String
        
        Private cOD_ESTADOField As String
        
        Private iMAGEN_FOTOField As Object
        
        Private iMAGEN_CEDULAField As Object
        
        Private uSUARIO_CREACIONField As String
        
        Private fECHA_CREACIONField As Date
        
        Private uSUARIO_ULTI_MODIField As String
        
        Private fECHA_ULTI_MODIField As Date
        
        Private time_stampField As String
        
        Private existeField As Boolean
        
        '''<remarks/>
        Public Property NUM_EMPLEADO() As Integer
            Get
                Return Me.nUM_EMPLEADOField
            End Get
            Set
                Me.nUM_EMPLEADOField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CODIGO_NACION() As String
            Get
                Return Me.cODIGO_NACIONField
            End Get
            Set
                Me.cODIGO_NACIONField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ID_TIPO_IDENTIFICACION() As Integer
            Get
                Return Me.iD_TIPO_IDENTIFICACIONField
            End Get
            Set
                Me.iD_TIPO_IDENTIFICACIONField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NACION() As String
            Get
                Return Me.nACIONField
            End Get
            Set
                Me.nACIONField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property GENTILICIO() As String
            Get
                Return Me.gENTILICIOField
            End Get
            Set
                Me.gENTILICIOField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ID_PERSONAL() As String
            Get
                Return Me.iD_PERSONALField
            End Get
            Set
                Me.iD_PERSONALField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NOMBRE() As String
            Get
                Return Me.nOMBREField
            End Get
            Set
                Me.nOMBREField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property APELLIDO1() As String
            Get
                Return Me.aPELLIDO1Field
            End Get
            Set
                Me.aPELLIDO1Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property APELLIDO2() As String
            Get
                Return Me.aPELLIDO2Field
            End Get
            Set
                Me.aPELLIDO2Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ID_SEXO() As String
            Get
                Return Me.iD_SEXOField
            End Get
            Set
                Me.iD_SEXOField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FECHA_NACIMIENTO() As Date
            Get
                Return Me.fECHA_NACIMIENTOField
            End Get
            Set
                Me.fECHA_NACIMIENTOField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ID_ESTADO_CIVIL() As String
            Get
                Return Me.iD_ESTADO_CIVILField
            End Get
            Set
                Me.iD_ESTADO_CIVILField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PERMISO_CONDUCIR_UNIV() As Integer
            Get
                Return Me.pERMISO_CONDUCIR_UNIVField
            End Get
            Set
                Me.pERMISO_CONDUCIR_UNIVField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NUM_ASEGURADO() As String
            Get
                Return Me.nUM_ASEGURADOField
            End Get
            Set
                Me.nUM_ASEGURADOField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NUM_HIJOS() As Integer
            Get
                Return Me.nUM_HIJOSField
            End Get
            Set
                Me.nUM_HIJOSField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CORREO_INSTITUCIONAL() As String
            Get
                Return Me.cORREO_INSTITUCIONALField
            End Get
            Set
                Me.cORREO_INSTITUCIONALField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CORREO_PERSONAL() As String
            Get
                Return Me.cORREO_PERSONALField
            End Get
            Set
                Me.cORREO_PERSONALField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property APTDO() As String
            Get
                Return Me.aPTDOField
            End Get
            Set
                Me.aPTDOField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PROVINCIA() As String
            Get
                Return Me.pROVINCIAField
            End Get
            Set
                Me.pROVINCIAField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DESC_PROVINCIA() As String
            Get
                Return Me.dESC_PROVINCIAField
            End Get
            Set
                Me.dESC_PROVINCIAField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CANTON() As String
            Get
                Return Me.cANTONField
            End Get
            Set
                Me.cANTONField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DESC_CANTON() As String
            Get
                Return Me.dESC_CANTONField
            End Get
            Set
                Me.dESC_CANTONField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DISTRITO() As String
            Get
                Return Me.dISTRITOField
            End Get
            Set
                Me.dISTRITOField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DESC_DISTRITO() As String
            Get
                Return Me.dESC_DISTRITOField
            End Get
            Set
                Me.dESC_DISTRITOField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DIREC_DOMICILIO() As String
            Get
                Return Me.dIREC_DOMICILIOField
            End Get
            Set
                Me.dIREC_DOMICILIOField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property REGIMEN() As String
            Get
                Return Me.rEGIMENField
            End Get
            Set
                Me.rEGIMENField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FECHA_INGRESO() As Date
            Get
                Return Me.fECHA_INGRESOField
            End Get
            Set
                Me.fECHA_INGRESOField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FECHA_SALIDA() As Date
            Get
                Return Me.fECHA_SALIDAField
            End Get
            Set
                Me.fECHA_SALIDAField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ID_TIPO_EMPLEADO() As Integer
            Get
                Return Me.iD_TIPO_EMPLEADOField
            End Get
            Set
                Me.iD_TIPO_EMPLEADOField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ESTADO_EU() As String
            Get
                Return Me.eSTADO_EUField
            End Get
            Set
                Me.eSTADO_EUField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property COD_ESTADO() As String
            Get
                Return Me.cOD_ESTADOField
            End Get
            Set
                Me.cOD_ESTADOField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IMAGEN_FOTO() As Object
            Get
                Return Me.iMAGEN_FOTOField
            End Get
            Set
                Me.iMAGEN_FOTOField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IMAGEN_CEDULA() As Object
            Get
                Return Me.iMAGEN_CEDULAField
            End Get
            Set
                Me.iMAGEN_CEDULAField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property USUARIO_CREACION() As String
            Get
                Return Me.uSUARIO_CREACIONField
            End Get
            Set
                Me.uSUARIO_CREACIONField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FECHA_CREACION() As Date
            Get
                Return Me.fECHA_CREACIONField
            End Get
            Set
                Me.fECHA_CREACIONField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property USUARIO_ULTI_MODI() As String
            Get
                Return Me.uSUARIO_ULTI_MODIField
            End Get
            Set
                Me.uSUARIO_ULTI_MODIField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FECHA_ULTI_MODI() As Date
            Get
                Return Me.fECHA_ULTI_MODIField
            End Get
            Set
                Me.fECHA_ULTI_MODIField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Time_stamp() As String
            Get
                Return Me.time_stampField
            End Get
            Set
                Me.time_stampField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Existe() As Boolean
            Get
                Return Me.existeField
            End Get
            Set
                Me.existeField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://eu.ucr.ac.cr/EU_Curriculo")>  _
    Partial Public Class EntEmp_Certificaciones_Aut
        
        Private nUM_EMPLEADOField As Integer
        
        Private cONS_CERTIFICACIONESField As Integer
        
        Private cONS_AUTORIZACIONField As Integer
        
        Private uSUARIO_APROBACIONField As String
        
        Private fECHA_APROBACIONField As Date
        
        Private eSTADO_APROBACIONField As String
        
        Private aREAField As String
        
        Private time_stampField As String
        
        Private existeField As Boolean
        
        '''<remarks/>
        Public Property NUM_EMPLEADO() As Integer
            Get
                Return Me.nUM_EMPLEADOField
            End Get
            Set
                Me.nUM_EMPLEADOField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CONS_CERTIFICACIONES() As Integer
            Get
                Return Me.cONS_CERTIFICACIONESField
            End Get
            Set
                Me.cONS_CERTIFICACIONESField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CONS_AUTORIZACION() As Integer
            Get
                Return Me.cONS_AUTORIZACIONField
            End Get
            Set
                Me.cONS_AUTORIZACIONField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property USUARIO_APROBACION() As String
            Get
                Return Me.uSUARIO_APROBACIONField
            End Get
            Set
                Me.uSUARIO_APROBACIONField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FECHA_APROBACION() As Date
            Get
                Return Me.fECHA_APROBACIONField
            End Get
            Set
                Me.fECHA_APROBACIONField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ESTADO_APROBACION() As String
            Get
                Return Me.eSTADO_APROBACIONField
            End Get
            Set
                Me.eSTADO_APROBACIONField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AREA() As String
            Get
                Return Me.aREAField
            End Get
            Set
                Me.aREAField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Time_stamp() As String
            Get
                Return Me.time_stampField
            End Get
            Set
                Me.time_stampField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Existe() As Boolean
            Get
                Return Me.existeField
            End Get
            Set
                Me.existeField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://eu.ucr.ac.cr/EU_Curriculo")>  _
    Partial Public Class EntEmp_Certificaciones
        
        Private nUM_EMPLEADOField As Integer
        
        Private cONS_CERTIFICACIONESField As Integer
        
        Private tITULOField As String
        
        Private eSPECIALIDADField As String
        
        Private eMISORField As String
        
        Private fECHA_EMISIONField As Date
        
        Private iMAGEN_CERTIFICACIONField As Object
        
        Private uSUARIO_ULTI_MODIField As String
        
        Private fECHA_ULTI_MODIField As Date
        
        Private time_stampField As String
        
        Private existeField As Boolean
        
        '''<remarks/>
        Public Property NUM_EMPLEADO() As Integer
            Get
                Return Me.nUM_EMPLEADOField
            End Get
            Set
                Me.nUM_EMPLEADOField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CONS_CERTIFICACIONES() As Integer
            Get
                Return Me.cONS_CERTIFICACIONESField
            End Get
            Set
                Me.cONS_CERTIFICACIONESField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TITULO() As String
            Get
                Return Me.tITULOField
            End Get
            Set
                Me.tITULOField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ESPECIALIDAD() As String
            Get
                Return Me.eSPECIALIDADField
            End Get
            Set
                Me.eSPECIALIDADField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EMISOR() As String
            Get
                Return Me.eMISORField
            End Get
            Set
                Me.eMISORField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FECHA_EMISION() As Date
            Get
                Return Me.fECHA_EMISIONField
            End Get
            Set
                Me.fECHA_EMISIONField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IMAGEN_CERTIFICACION() As Object
            Get
                Return Me.iMAGEN_CERTIFICACIONField
            End Get
            Set
                Me.iMAGEN_CERTIFICACIONField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property USUARIO_ULTI_MODI() As String
            Get
                Return Me.uSUARIO_ULTI_MODIField
            End Get
            Set
                Me.uSUARIO_ULTI_MODIField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FECHA_ULTI_MODI() As Date
            Get
                Return Me.fECHA_ULTI_MODIField
            End Get
            Set
                Me.fECHA_ULTI_MODIField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Time_stamp() As String
            Get
                Return Me.time_stampField
            End Get
            Set
                Me.time_stampField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Existe() As Boolean
            Get
                Return Me.existeField
            End Get
            Set
                Me.existeField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://eu.ucr.ac.cr/EU_Curriculo")>  _
    Partial Public Class EntEmp_Cursos_Aut
        
        Private nUM_EMPLEADOField As Integer
        
        Private cONS_CURSOSField As Integer
        
        Private cONS_AUTORIZACIONField As Integer
        
        Private uSUARIO_APROBACIONField As String
        
        Private fECHA_APROBACIONField As Date
        
        Private eSTADO_APROBACIONField As String
        
        Private aREAField As String
        
        Private time_stampField As String
        
        Private existeField As Boolean
        
        '''<remarks/>
        Public Property NUM_EMPLEADO() As Integer
            Get
                Return Me.nUM_EMPLEADOField
            End Get
            Set
                Me.nUM_EMPLEADOField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CONS_CURSOS() As Integer
            Get
                Return Me.cONS_CURSOSField
            End Get
            Set
                Me.cONS_CURSOSField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CONS_AUTORIZACION() As Integer
            Get
                Return Me.cONS_AUTORIZACIONField
            End Get
            Set
                Me.cONS_AUTORIZACIONField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property USUARIO_APROBACION() As String
            Get
                Return Me.uSUARIO_APROBACIONField
            End Get
            Set
                Me.uSUARIO_APROBACIONField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FECHA_APROBACION() As Date
            Get
                Return Me.fECHA_APROBACIONField
            End Get
            Set
                Me.fECHA_APROBACIONField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ESTADO_APROBACION() As String
            Get
                Return Me.eSTADO_APROBACIONField
            End Get
            Set
                Me.eSTADO_APROBACIONField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AREA() As String
            Get
                Return Me.aREAField
            End Get
            Set
                Me.aREAField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Time_stamp() As String
            Get
                Return Me.time_stampField
            End Get
            Set
                Me.time_stampField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Existe() As Boolean
            Get
                Return Me.existeField
            End Get
            Set
                Me.existeField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://eu.ucr.ac.cr/EU_Curriculo")>  _
    Partial Public Class EntEmp_Cursos
        
        Private nUM_EMPLEADOField As Integer
        
        Private cONS_CURSOSField As Integer
        
        Private cOD_CURSOField As Integer
        
        Private dESC_CURSOField As String
        
        Private dESCRIPCIONField As String
        
        Private iNSTITUCIONField As String
        
        Private cANT_HORASField As Integer
        
        Private fECHA_CURSOField As Date
        
        Private oFICIOField As String
        
        Private pERIODOField As String
        
        Private aNNOField As Integer
        
        Private iMAGEN_TITULOField As Object
        
        Private uSR_REVISIONField As String
        
        Private fEC_REVISIONField As Date
        
        Private eSTADO_REVISIONField As String
        
        Private uSUARIO_ULTI_MODIField As String
        
        Private fECHA_ULTI_MODIField As Date
        
        Private time_stampField As String
        
        Private existeField As Boolean
        
        '''<remarks/>
        Public Property NUM_EMPLEADO() As Integer
            Get
                Return Me.nUM_EMPLEADOField
            End Get
            Set
                Me.nUM_EMPLEADOField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CONS_CURSOS() As Integer
            Get
                Return Me.cONS_CURSOSField
            End Get
            Set
                Me.cONS_CURSOSField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property COD_CURSO() As Integer
            Get
                Return Me.cOD_CURSOField
            End Get
            Set
                Me.cOD_CURSOField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DESC_CURSO() As String
            Get
                Return Me.dESC_CURSOField
            End Get
            Set
                Me.dESC_CURSOField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DESCRIPCION() As String
            Get
                Return Me.dESCRIPCIONField
            End Get
            Set
                Me.dESCRIPCIONField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property INSTITUCION() As String
            Get
                Return Me.iNSTITUCIONField
            End Get
            Set
                Me.iNSTITUCIONField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CANT_HORAS() As Integer
            Get
                Return Me.cANT_HORASField
            End Get
            Set
                Me.cANT_HORASField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FECHA_CURSO() As Date
            Get
                Return Me.fECHA_CURSOField
            End Get
            Set
                Me.fECHA_CURSOField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property OFICIO() As String
            Get
                Return Me.oFICIOField
            End Get
            Set
                Me.oFICIOField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PERIODO() As String
            Get
                Return Me.pERIODOField
            End Get
            Set
                Me.pERIODOField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ANNO() As Integer
            Get
                Return Me.aNNOField
            End Get
            Set
                Me.aNNOField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IMAGEN_TITULO() As Object
            Get
                Return Me.iMAGEN_TITULOField
            End Get
            Set
                Me.iMAGEN_TITULOField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property USR_REVISION() As String
            Get
                Return Me.uSR_REVISIONField
            End Get
            Set
                Me.uSR_REVISIONField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FEC_REVISION() As Date
            Get
                Return Me.fEC_REVISIONField
            End Get
            Set
                Me.fEC_REVISIONField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ESTADO_REVISION() As String
            Get
                Return Me.eSTADO_REVISIONField
            End Get
            Set
                Me.eSTADO_REVISIONField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property USUARIO_ULTI_MODI() As String
            Get
                Return Me.uSUARIO_ULTI_MODIField
            End Get
            Set
                Me.uSUARIO_ULTI_MODIField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FECHA_ULTI_MODI() As Date
            Get
                Return Me.fECHA_ULTI_MODIField
            End Get
            Set
                Me.fECHA_ULTI_MODIField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Time_stamp() As String
            Get
                Return Me.time_stampField
            End Get
            Set
                Me.time_stampField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Existe() As Boolean
            Get
                Return Me.existeField
            End Get
            Set
                Me.existeField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://eu.ucr.ac.cr/EU_Curriculo")>  _
    Partial Public Class EntReconocimiento
        
        Private iD_TIPO_RECONOCIMIENTOField As String
        
        Private dESCRIPCIONField As String
        
        Private existeField As Boolean
        
        '''<remarks/>
        Public Property ID_TIPO_RECONOCIMIENTO() As String
            Get
                Return Me.iD_TIPO_RECONOCIMIENTOField
            End Get
            Set
                Me.iD_TIPO_RECONOCIMIENTOField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DESCRIPCION() As String
            Get
                Return Me.dESCRIPCIONField
            End Get
            Set
                Me.dESCRIPCIONField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Existe() As Boolean
            Get
                Return Me.existeField
            End Get
            Set
                Me.existeField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://eu.ucr.ac.cr/EU_Curriculo")>  _
    Partial Public Class EntTipo_Vehiculo_Produccion
        
        Private iD_TIPO_VEHICULO_PRODUCField As Integer
        
        Private iD_TIPO_PRODUCCIONField As String
        
        Private dESCRIPCIONField As String
        
        Private tIME_STAMPField As Date
        
        '''<remarks/>
        Public Property ID_TIPO_VEHICULO_PRODUC() As Integer
            Get
                Return Me.iD_TIPO_VEHICULO_PRODUCField
            End Get
            Set
                Me.iD_TIPO_VEHICULO_PRODUCField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ID_TIPO_PRODUCCION() As String
            Get
                Return Me.iD_TIPO_PRODUCCIONField
            End Get
            Set
                Me.iD_TIPO_PRODUCCIONField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DESCRIPCION() As String
            Get
                Return Me.dESCRIPCIONField
            End Get
            Set
                Me.dESCRIPCIONField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TIME_STAMP() As Date
            Get
                Return Me.tIME_STAMPField
            End Get
            Set
                Me.tIME_STAMPField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://eu.ucr.ac.cr/EU_Curriculo")>  _
    Partial Public Class EntProduccion_Autor_Externo
        
        Private cONS_PRODUCCIONESField As Integer
        
        Private iD_AUTOR_EXTERNOField As Integer
        
        Private pORCENTAJE_PARTICIPACIONField As Decimal
        
        Private tIME_STAMPField As Date
        
        Private existeField As Boolean
        
        '''<remarks/>
        Public Property CONS_PRODUCCIONES() As Integer
            Get
                Return Me.cONS_PRODUCCIONESField
            End Get
            Set
                Me.cONS_PRODUCCIONESField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ID_AUTOR_EXTERNO() As Integer
            Get
                Return Me.iD_AUTOR_EXTERNOField
            End Get
            Set
                Me.iD_AUTOR_EXTERNOField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PORCENTAJE_PARTICIPACION() As Decimal
            Get
                Return Me.pORCENTAJE_PARTICIPACIONField
            End Get
            Set
                Me.pORCENTAJE_PARTICIPACIONField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TIME_STAMP() As Date
            Get
                Return Me.tIME_STAMPField
            End Get
            Set
                Me.tIME_STAMPField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Existe() As Boolean
            Get
                Return Me.existeField
            End Get
            Set
                Me.existeField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://eu.ucr.ac.cr/EU_Curriculo")>  _
    Partial Public Class EntEmp_Produccion_Empleado
        
        Private cONS_PRODUCCIONESField As Integer
        
        Private nUM_EMPLEADOField As Integer
        
        Private pORCENTAJE_PARTICIPACIONField As Decimal
        
        Private tIME_STAMPField As Date
        
        Private existeField As Boolean
        
        '''<remarks/>
        Public Property CONS_PRODUCCIONES() As Integer
            Get
                Return Me.cONS_PRODUCCIONESField
            End Get
            Set
                Me.cONS_PRODUCCIONESField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NUM_EMPLEADO() As Integer
            Get
                Return Me.nUM_EMPLEADOField
            End Get
            Set
                Me.nUM_EMPLEADOField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PORCENTAJE_PARTICIPACION() As Decimal
            Get
                Return Me.pORCENTAJE_PARTICIPACIONField
            End Get
            Set
                Me.pORCENTAJE_PARTICIPACIONField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TIME_STAMP() As Date
            Get
                Return Me.tIME_STAMPField
            End Get
            Set
                Me.tIME_STAMPField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Existe() As Boolean
            Get
                Return Me.existeField
            End Get
            Set
                Me.existeField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://eu.ucr.ac.cr/EU_Curriculo")>  _
    Partial Public Class EntAutor_Externo
        
        Private iD_AUTOR_EXTERNOField As Integer
        
        Private iD_TIPO_IDENTIFICACIONField As Integer
        
        Private iD_PERSONALField As String
        
        Private nOMBREField As String
        
        Private aPELLIDO1Field As String
        
        Private aPELLIDO2Field As String
        
        Private tIME_STAMPField As Date
        
        Private existeField As Boolean
        
        '''<remarks/>
        Public Property ID_AUTOR_EXTERNO() As Integer
            Get
                Return Me.iD_AUTOR_EXTERNOField
            End Get
            Set
                Me.iD_AUTOR_EXTERNOField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ID_TIPO_IDENTIFICACION() As Integer
            Get
                Return Me.iD_TIPO_IDENTIFICACIONField
            End Get
            Set
                Me.iD_TIPO_IDENTIFICACIONField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ID_PERSONAL() As String
            Get
                Return Me.iD_PERSONALField
            End Get
            Set
                Me.iD_PERSONALField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NOMBRE() As String
            Get
                Return Me.nOMBREField
            End Get
            Set
                Me.nOMBREField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property APELLIDO1() As String
            Get
                Return Me.aPELLIDO1Field
            End Get
            Set
                Me.aPELLIDO1Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property APELLIDO2() As String
            Get
                Return Me.aPELLIDO2Field
            End Get
            Set
                Me.aPELLIDO2Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TIME_STAMP() As Date
            Get
                Return Me.tIME_STAMPField
            End Get
            Set
                Me.tIME_STAMPField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Existe() As Boolean
            Get
                Return Me.existeField
            End Get
            Set
                Me.existeField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://eu.ucr.ac.cr/EU_Curriculo")>  _
    Partial Public Class EntEmp_Producciones
        
        Private cONS_PRODUCCIONESField As Integer
        
        Private iD_TIPO_MEDIOField As Integer
        
        Private iD_TIPO_PRODUCCIONField As String
        
        Private nOMBRE_VEHICULOField As String
        
        Private nOMBREField As String
        
        Private tEMAField As String
        
        Private lUGAR_PRESENTACIONField As String
        
        Private eDITORIALField As String
        
        Private nUM_PRODUCCIONESField As Integer
        
        Private nUM_PRESENTACIONESField As Integer
        
        Private vOLUMENField As String
        
        Private aNNOField As Integer
        
        Private oBSERVACIONESField As String
        
        Private uSR_REVISIONField As String
        
        Private fEC_REVISIONField As Date
        
        Private eSTADO_REVISIONField As String
        
        Private tIME_STAMPField As Date
        
        Private iD_TIPO_VEHICULO_PRODUCField As Integer
        
        Private pUNTOS_ACADEMICOSField As Integer
        
        Private nUMEROField As String
        
        Private fECHA_PRESENTACIONField As Date
        
        Private dESCPRODUCCIONField As String
        
        Private dESCESTADOField As String
        
        Private dESCMEDIOField As String
        
        Private existeField As Boolean
        
        '''<remarks/>
        Public Property CONS_PRODUCCIONES() As Integer
            Get
                Return Me.cONS_PRODUCCIONESField
            End Get
            Set
                Me.cONS_PRODUCCIONESField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ID_TIPO_MEDIO() As Integer
            Get
                Return Me.iD_TIPO_MEDIOField
            End Get
            Set
                Me.iD_TIPO_MEDIOField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ID_TIPO_PRODUCCION() As String
            Get
                Return Me.iD_TIPO_PRODUCCIONField
            End Get
            Set
                Me.iD_TIPO_PRODUCCIONField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NOMBRE_VEHICULO() As String
            Get
                Return Me.nOMBRE_VEHICULOField
            End Get
            Set
                Me.nOMBRE_VEHICULOField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NOMBRE() As String
            Get
                Return Me.nOMBREField
            End Get
            Set
                Me.nOMBREField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TEMA() As String
            Get
                Return Me.tEMAField
            End Get
            Set
                Me.tEMAField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property LUGAR_PRESENTACION() As String
            Get
                Return Me.lUGAR_PRESENTACIONField
            End Get
            Set
                Me.lUGAR_PRESENTACIONField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EDITORIAL() As String
            Get
                Return Me.eDITORIALField
            End Get
            Set
                Me.eDITORIALField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NUM_PRODUCCIONES() As Integer
            Get
                Return Me.nUM_PRODUCCIONESField
            End Get
            Set
                Me.nUM_PRODUCCIONESField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NUM_PRESENTACIONES() As Integer
            Get
                Return Me.nUM_PRESENTACIONESField
            End Get
            Set
                Me.nUM_PRESENTACIONESField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property VOLUMEN() As String
            Get
                Return Me.vOLUMENField
            End Get
            Set
                Me.vOLUMENField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ANNO() As Integer
            Get
                Return Me.aNNOField
            End Get
            Set
                Me.aNNOField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property OBSERVACIONES() As String
            Get
                Return Me.oBSERVACIONESField
            End Get
            Set
                Me.oBSERVACIONESField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property USR_REVISION() As String
            Get
                Return Me.uSR_REVISIONField
            End Get
            Set
                Me.uSR_REVISIONField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FEC_REVISION() As Date
            Get
                Return Me.fEC_REVISIONField
            End Get
            Set
                Me.fEC_REVISIONField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ESTADO_REVISION() As String
            Get
                Return Me.eSTADO_REVISIONField
            End Get
            Set
                Me.eSTADO_REVISIONField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TIME_STAMP() As Date
            Get
                Return Me.tIME_STAMPField
            End Get
            Set
                Me.tIME_STAMPField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ID_TIPO_VEHICULO_PRODUC() As Integer
            Get
                Return Me.iD_TIPO_VEHICULO_PRODUCField
            End Get
            Set
                Me.iD_TIPO_VEHICULO_PRODUCField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PUNTOS_ACADEMICOS() As Integer
            Get
                Return Me.pUNTOS_ACADEMICOSField
            End Get
            Set
                Me.pUNTOS_ACADEMICOSField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NUMERO() As String
            Get
                Return Me.nUMEROField
            End Get
            Set
                Me.nUMEROField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FECHA_PRESENTACION() As Date
            Get
                Return Me.fECHA_PRESENTACIONField
            End Get
            Set
                Me.fECHA_PRESENTACIONField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DESCPRODUCCION() As String
            Get
                Return Me.dESCPRODUCCIONField
            End Get
            Set
                Me.dESCPRODUCCIONField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DESCESTADO() As String
            Get
                Return Me.dESCESTADOField
            End Get
            Set
                Me.dESCESTADOField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DESCMEDIO() As String
            Get
                Return Me.dESCMEDIOField
            End Get
            Set
                Me.dESCMEDIOField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Existe() As Boolean
            Get
                Return Me.existeField
            End Get
            Set
                Me.existeField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://eu.ucr.ac.cr/EU_Curriculo")>  _
    Partial Public Class EntEstado
        
        Private iD_ESTADOField As String
        
        Private dESCRIPCIONField As String
        
        Private existeField As Boolean
        
        '''<remarks/>
        Public Property ID_ESTADO() As String
            Get
                Return Me.iD_ESTADOField
            End Get
            Set
                Me.iD_ESTADOField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DESCRIPCION() As String
            Get
                Return Me.dESCRIPCIONField
            End Get
            Set
                Me.dESCRIPCIONField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Existe() As Boolean
            Get
                Return Me.existeField
            End Get
            Set
                Me.existeField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://eu.ucr.ac.cr/EU_Curriculo")>  _
    Partial Public Class EntMedio
        
        Private iD_TIPO_MEDIOField As Integer
        
        Private dESCRIPCIONField As String
        
        Private iD_TIPO_PRODUCCIONField As String
        
        Private dESCRIPCION_PRODUCCIONField As String
        
        Private existeField As Boolean
        
        '''<remarks/>
        Public Property ID_TIPO_MEDIO() As Integer
            Get
                Return Me.iD_TIPO_MEDIOField
            End Get
            Set
                Me.iD_TIPO_MEDIOField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DESCRIPCION() As String
            Get
                Return Me.dESCRIPCIONField
            End Get
            Set
                Me.dESCRIPCIONField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ID_TIPO_PRODUCCION() As String
            Get
                Return Me.iD_TIPO_PRODUCCIONField
            End Get
            Set
                Me.iD_TIPO_PRODUCCIONField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DESCRIPCION_PRODUCCION() As String
            Get
                Return Me.dESCRIPCION_PRODUCCIONField
            End Get
            Set
                Me.dESCRIPCION_PRODUCCIONField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Existe() As Boolean
            Get
                Return Me.existeField
            End Get
            Set
                Me.existeField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://eu.ucr.ac.cr/EU_Curriculo")>  _
    Partial Public Class EntProduccion
        
        Private iD_TIPO_PRODUCCIONField As String
        
        Private dESCRIPCIONField As String
        
        Private existeField As Boolean
        
        '''<remarks/>
        Public Property ID_TIPO_PRODUCCION() As String
            Get
                Return Me.iD_TIPO_PRODUCCIONField
            End Get
            Set
                Me.iD_TIPO_PRODUCCIONField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DESCRIPCION() As String
            Get
                Return Me.dESCRIPCIONField
            End Get
            Set
                Me.dESCRIPCIONField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Existe() As Boolean
            Get
                Return Me.existeField
            End Get
            Set
                Me.existeField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://eu.ucr.ac.cr/EU_Curriculo")>  _
    Partial Public Class EntGbl_Idiomas
        
        Private cOD_IDIOMAField As String
        
        Private dESCRIPCIONField As String
        
        Private existeField As Boolean
        
        '''<remarks/>
        Public Property COD_IDIOMA() As String
            Get
                Return Me.cOD_IDIOMAField
            End Get
            Set
                Me.cOD_IDIOMAField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DESCRIPCION() As String
            Get
                Return Me.dESCRIPCIONField
            End Get
            Set
                Me.dESCRIPCIONField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Existe() As Boolean
            Get
                Return Me.existeField
            End Get
            Set
                Me.existeField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://eu.ucr.ac.cr/EU_Curriculo")>  _
    Partial Public Class EntGbl_Estado_Civil
        
        Private iD_ESTADO_CIVILField As String
        
        Private dSC_ESTADO_CIVILField As String
        
        '''<remarks/>
        Public Property ID_ESTADO_CIVIL() As String
            Get
                Return Me.iD_ESTADO_CIVILField
            End Get
            Set
                Me.iD_ESTADO_CIVILField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DSC_ESTADO_CIVIL() As String
            Get
                Return Me.dSC_ESTADO_CIVILField
            End Get
            Set
                Me.dSC_ESTADO_CIVILField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://eu.ucr.ac.cr/EU_Curriculo")>  _
    Partial Public Class EntGbl_Tipo_Licencia
        
        Private iD_TIPO_LICENCIAField As String
        
        Private dSC_TIPO_LICENCIAField As String
        
        '''<remarks/>
        Public Property ID_TIPO_LICENCIA() As String
            Get
                Return Me.iD_TIPO_LICENCIAField
            End Get
            Set
                Me.iD_TIPO_LICENCIAField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DSC_TIPO_LICENCIA() As String
            Get
                Return Me.dSC_TIPO_LICENCIAField
            End Get
            Set
                Me.dSC_TIPO_LICENCIAField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://eu.ucr.ac.cr/EU_Curriculo")>  _
    Partial Public Class EntGbl_Tipo_Identificacion
        
        Private iD_TIPO_IDENTIFICACIONField As Integer
        
        Private dSC_IDENTIFICACIONField As String
        
        '''<remarks/>
        Public Property ID_TIPO_IDENTIFICACION() As Integer
            Get
                Return Me.iD_TIPO_IDENTIFICACIONField
            End Get
            Set
                Me.iD_TIPO_IDENTIFICACIONField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DSC_IDENTIFICACION() As String
            Get
                Return Me.dSC_IDENTIFICACIONField
            End Get
            Set
                Me.dSC_IDENTIFICACIONField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://eu.ucr.ac.cr/EU_Curriculo")>  _
    Partial Public Class EntEmp_Tipo
        
        Private iD_TIPO_EMPLEADOField As Integer
        
        Private dSC_TIPO_EMPLEADOField As String
        
        '''<remarks/>
        Public Property ID_TIPO_EMPLEADO() As Integer
            Get
                Return Me.iD_TIPO_EMPLEADOField
            End Get
            Set
                Me.iD_TIPO_EMPLEADOField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DSC_TIPO_EMPLEADO() As String
            Get
                Return Me.dSC_TIPO_EMPLEADOField
            End Get
            Set
                Me.dSC_TIPO_EMPLEADOField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://eu.ucr.ac.cr/EU_Curriculo")>  _
    Partial Public Class EntGbl_Tipo_Telefono
        
        Private iD_TIPO_TELEFONOField As String
        
        Private dSC_TIPO_LICENCIAField As String
        
        '''<remarks/>
        Public Property ID_TIPO_TELEFONO() As String
            Get
                Return Me.iD_TIPO_TELEFONOField
            End Get
            Set
                Me.iD_TIPO_TELEFONOField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DSC_TIPO_LICENCIA() As String
            Get
                Return Me.dSC_TIPO_LICENCIAField
            End Get
            Set
                Me.dSC_TIPO_LICENCIAField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://eu.ucr.ac.cr/EU_Curriculo")>  _
    Partial Public Class EntEmpleado_Estado
        
        Private cOD_ESTADOField As String
        
        Private dESCRIPCIONField As String
        
        '''<remarks/>
        Public Property COD_ESTADO() As String
            Get
                Return Me.cOD_ESTADOField
            End Get
            Set
                Me.cOD_ESTADOField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DESCRIPCION() As String
            Get
                Return Me.dESCRIPCIONField
            End Get
            Set
                Me.dESCRIPCIONField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://eu.ucr.ac.cr/EU_Curriculo")>  _
    Partial Public Class EntDistrito
        
        Private pROVINCIAField As String
        
        Private cANTONField As String
        
        Private dISTRITOField As String
        
        Private dESCRIPCIONField As String
        
        Private iNDICE_REZAGO_SOCIALField As Integer
        
        Private tIEMPO_TRASLADOField As Integer
        
        Private cODIGO_ZONA_PROCEDENCIAField As Integer
        
        Private zONA_TRANSPORTEField As Integer
        
        '''<remarks/>
        Public Property PROVINCIA() As String
            Get
                Return Me.pROVINCIAField
            End Get
            Set
                Me.pROVINCIAField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CANTON() As String
            Get
                Return Me.cANTONField
            End Get
            Set
                Me.cANTONField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DISTRITO() As String
            Get
                Return Me.dISTRITOField
            End Get
            Set
                Me.dISTRITOField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DESCRIPCION() As String
            Get
                Return Me.dESCRIPCIONField
            End Get
            Set
                Me.dESCRIPCIONField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property INDICE_REZAGO_SOCIAL() As Integer
            Get
                Return Me.iNDICE_REZAGO_SOCIALField
            End Get
            Set
                Me.iNDICE_REZAGO_SOCIALField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TIEMPO_TRASLADO() As Integer
            Get
                Return Me.tIEMPO_TRASLADOField
            End Get
            Set
                Me.tIEMPO_TRASLADOField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CODIGO_ZONA_PROCEDENCIA() As Integer
            Get
                Return Me.cODIGO_ZONA_PROCEDENCIAField
            End Get
            Set
                Me.cODIGO_ZONA_PROCEDENCIAField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ZONA_TRANSPORTE() As Integer
            Get
                Return Me.zONA_TRANSPORTEField
            End Get
            Set
                Me.zONA_TRANSPORTEField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://eu.ucr.ac.cr/EU_Curriculo")>  _
    Partial Public Class EntCanton
        
        Private pROVINCIAField As String
        
        Private cANTONField As String
        
        Private dESCRIPCIONField As String
        
        '''<remarks/>
        Public Property PROVINCIA() As String
            Get
                Return Me.pROVINCIAField
            End Get
            Set
                Me.pROVINCIAField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CANTON() As String
            Get
                Return Me.cANTONField
            End Get
            Set
                Me.cANTONField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DESCRIPCION() As String
            Get
                Return Me.dESCRIPCIONField
            End Get
            Set
                Me.dESCRIPCIONField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://eu.ucr.ac.cr/EU_Curriculo")>  _
    Partial Public Class EntProvincia
        
        Private pROVINCIAField As String
        
        Private dESCRIPCIONField As String
        
        '''<remarks/>
        Public Property PROVINCIA() As String
            Get
                Return Me.pROVINCIAField
            End Get
            Set
                Me.pROVINCIAField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DESCRIPCION() As String
            Get
                Return Me.dESCRIPCIONField
            End Get
            Set
                Me.dESCRIPCIONField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://eu.ucr.ac.cr/EU_Curriculo")>  _
    Partial Public Class EntEu_Imagen_Carnet
        
        Private cARNE_GENERADOField As String
        
        Private cODIGO_HUELLA_1Field As String
        
        Private cODIGO_HUELLA_2Field As String
        
        Private fECHA_CAPTURAField As Date
        
        Private fECHA_EMISION_CARNEField As Date
        
        Private iD_PERSONALField As Object
        
        Private iD_TIPO_IDENTIFICACIONField As Integer
        
        Private iMAGEN_FIRMAField As Object
        
        Private iMAGEN_FOTOField As Object
        
        Private nUM_EMPLEADOField As Integer
        
        Private pLANTILLA_HUELLA_1Field As Object
        
        Private pLANTILLA_HUELLA_2Field As Object
        
        Private wSQ_HUELLA_1Field As Object
        
        Private wSQ_HUELLA_2Field As Object
        
        Private time_stampField As String
        
        Private existeField As Boolean
        
        '''<remarks/>
        Public Property CARNE_GENERADO() As String
            Get
                Return Me.cARNE_GENERADOField
            End Get
            Set
                Me.cARNE_GENERADOField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CODIGO_HUELLA_1() As String
            Get
                Return Me.cODIGO_HUELLA_1Field
            End Get
            Set
                Me.cODIGO_HUELLA_1Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CODIGO_HUELLA_2() As String
            Get
                Return Me.cODIGO_HUELLA_2Field
            End Get
            Set
                Me.cODIGO_HUELLA_2Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FECHA_CAPTURA() As Date
            Get
                Return Me.fECHA_CAPTURAField
            End Get
            Set
                Me.fECHA_CAPTURAField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FECHA_EMISION_CARNE() As Date
            Get
                Return Me.fECHA_EMISION_CARNEField
            End Get
            Set
                Me.fECHA_EMISION_CARNEField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ID_PERSONAL() As Object
            Get
                Return Me.iD_PERSONALField
            End Get
            Set
                Me.iD_PERSONALField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ID_TIPO_IDENTIFICACION() As Integer
            Get
                Return Me.iD_TIPO_IDENTIFICACIONField
            End Get
            Set
                Me.iD_TIPO_IDENTIFICACIONField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IMAGEN_FIRMA() As Object
            Get
                Return Me.iMAGEN_FIRMAField
            End Get
            Set
                Me.iMAGEN_FIRMAField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IMAGEN_FOTO() As Object
            Get
                Return Me.iMAGEN_FOTOField
            End Get
            Set
                Me.iMAGEN_FOTOField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NUM_EMPLEADO() As Integer
            Get
                Return Me.nUM_EMPLEADOField
            End Get
            Set
                Me.nUM_EMPLEADOField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PLANTILLA_HUELLA_1() As Object
            Get
                Return Me.pLANTILLA_HUELLA_1Field
            End Get
            Set
                Me.pLANTILLA_HUELLA_1Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PLANTILLA_HUELLA_2() As Object
            Get
                Return Me.pLANTILLA_HUELLA_2Field
            End Get
            Set
                Me.pLANTILLA_HUELLA_2Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property WSQ_HUELLA_1() As Object
            Get
                Return Me.wSQ_HUELLA_1Field
            End Get
            Set
                Me.wSQ_HUELLA_1Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property WSQ_HUELLA_2() As Object
            Get
                Return Me.wSQ_HUELLA_2Field
            End Get
            Set
                Me.wSQ_HUELLA_2Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Time_stamp() As String
            Get
                Return Me.time_stampField
            End Get
            Set
                Me.time_stampField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Existe() As Boolean
            Get
                Return Me.existeField
            End Get
            Set
                Me.existeField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://eu.ucr.ac.cr/EU_Curriculo")>  _
    Partial Public Class EntEU_SINCRO_SIRH
        
        Private cONS_DESDEField As Integer
        
        Private cONS_HASTAField As Integer
        
        Private fECHAField As Date
        
        Private tIPOField As String
        
        Private rESULTADOField As String
        
        Private oBSERVACIONField As String
        
        Private tIME_STAMPField As Date
        
        Private existeField As Boolean
        
        '''<remarks/>
        Public Property CONS_DESDE() As Integer
            Get
                Return Me.cONS_DESDEField
            End Get
            Set
                Me.cONS_DESDEField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CONS_HASTA() As Integer
            Get
                Return Me.cONS_HASTAField
            End Get
            Set
                Me.cONS_HASTAField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FECHA() As Date
            Get
                Return Me.fECHAField
            End Get
            Set
                Me.fECHAField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TIPO() As String
            Get
                Return Me.tIPOField
            End Get
            Set
                Me.tIPOField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property RESULTADO() As String
            Get
                Return Me.rESULTADOField
            End Get
            Set
                Me.rESULTADOField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property OBSERVACION() As String
            Get
                Return Me.oBSERVACIONField
            End Get
            Set
                Me.oBSERVACIONField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TIME_STAMP() As Date
            Get
                Return Me.tIME_STAMPField
            End Get
            Set
                Me.tIME_STAMPField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Existe() As Boolean
            Get
                Return Me.existeField
            End Get
            Set
                Me.existeField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub EmpReconocimientos_ListarRegistrosCompletedEventHandler(ByVal sender As Object, ByVal e As EmpReconocimientos_ListarRegistrosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EmpReconocimientos_ListarRegistrosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub EmpReconocimientos_ListarRegistrosListaCompletedEventHandler(ByVal sender As Object, ByVal e As EmpReconocimientos_ListarRegistrosListaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EmpReconocimientos_ListarRegistrosListaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub EmpReconocimientos_ObtenerRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As EmpReconocimientos_ObtenerRegistroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EmpReconocimientos_ObtenerRegistroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As EntEmp_Reconocimientos
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),EntEmp_Reconocimientos)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub EmpReconocimientos_InsertarRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub EmpReconocimientos_BorrarRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub EmpReconocimientos_ModificarRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub EmpReconocimientos_Rpt_CurriculoCompletedEventHandler(ByVal sender As Object, ByVal e As EmpReconocimientos_Rpt_CurriculoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EmpReconocimientos_Rpt_CurriculoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub EntEU_SINCRO_SIRH_InsertarRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub EU_SINCRO_SIRH_BorrarRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub EU_SINCRO_SIRH_ModificarRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub EU_SINCRO_SIRH_ListarRegistrosCompletedEventHandler(ByVal sender As Object, ByVal e As EU_SINCRO_SIRH_ListarRegistrosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EU_SINCRO_SIRH_ListarRegistrosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub EU_SINCRO_SIRH_ListarRegistrosListaCompletedEventHandler(ByVal sender As Object, ByVal e As EU_SINCRO_SIRH_ListarRegistrosListaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EU_SINCRO_SIRH_ListarRegistrosListaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub EU_SINCRO_SIRH_ObtenerRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As EU_SINCRO_SIRH_ObtenerRegistroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EU_SINCRO_SIRH_ObtenerRegistroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As EntEU_SINCRO_SIRH
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),EntEU_SINCRO_SIRH)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub EU_SINCRO_SIRH_SincronizarRevisionAtestadosCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub EU_SINCRO_SIRH_SincronizarCatalogosCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub EU_SINCRO_SIRH_SincronizarCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub EU_IMAGEN_CARNE_ReimprimirCarneCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub Eu_Imagen_Carne_ListarRegistroReporteTomaCarnetsCompletedEventHandler(ByVal sender As Object, ByVal e As Eu_Imagen_Carne_ListarRegistroReporteTomaCarnetsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Eu_Imagen_Carne_ListarRegistroReporteTomaCarnetsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub Eu_Imagen_Carne_ObtenerRegistroBasicoCompletedEventHandler(ByVal sender As Object, ByVal e As Eu_Imagen_Carne_ObtenerRegistroBasicoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Eu_Imagen_Carne_ObtenerRegistroBasicoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As EntEu_Imagen_Carnet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),EntEu_Imagen_Carnet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub ObtenerGradoAcademicoFuncionarioCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerGradoAcademicoFuncionarioCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerGradoAcademicoFuncionarioCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub Provincia_ObtenerRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As Provincia_ObtenerRegistroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Provincia_ObtenerRegistroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As EntProvincia
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),EntProvincia)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub Canton_ListarRegistrosCompletedEventHandler(ByVal sender As Object, ByVal e As Canton_ListarRegistrosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Canton_ListarRegistrosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub Canton_ListarRegistrosListaCompletedEventHandler(ByVal sender As Object, ByVal e As Canton_ListarRegistrosListaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Canton_ListarRegistrosListaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub Canton_ObtenerRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As Canton_ObtenerRegistroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Canton_ObtenerRegistroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As EntCanton
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),EntCanton)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub Distrito_ListarRegistrosCompletedEventHandler(ByVal sender As Object, ByVal e As Distrito_ListarRegistrosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Distrito_ListarRegistrosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub Distrito_ListarRegistrosListaCompletedEventHandler(ByVal sender As Object, ByVal e As Distrito_ListarRegistrosListaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Distrito_ListarRegistrosListaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub Distrito_ObtenerRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As Distrito_ObtenerRegistroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Distrito_ObtenerRegistroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As EntDistrito
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),EntDistrito)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub EmpleadoEstado_ListarRegistrosCompletedEventHandler(ByVal sender As Object, ByVal e As EmpleadoEstado_ListarRegistrosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EmpleadoEstado_ListarRegistrosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub EmpleadoEstado_ListarRegistrosListaCompletedEventHandler(ByVal sender As Object, ByVal e As EmpleadoEstado_ListarRegistrosListaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EmpleadoEstado_ListarRegistrosListaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub EmpleadoEstado_ObtenerRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As EmpleadoEstado_ObtenerRegistroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EmpleadoEstado_ObtenerRegistroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As EntEmpleado_Estado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),EntEmpleado_Estado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub EmpleadoEstado_InsertarRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub EmpleadoEstado_BorrarRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub EmpleadoEstado_ModificarRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub Gbl_Tipo_Telefono_ListarRegistrosCompletedEventHandler(ByVal sender As Object, ByVal e As Gbl_Tipo_Telefono_ListarRegistrosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Gbl_Tipo_Telefono_ListarRegistrosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub Gbl_Tipo_Telefono_ListarRegistrosListaCompletedEventHandler(ByVal sender As Object, ByVal e As Gbl_Tipo_Telefono_ListarRegistrosListaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Gbl_Tipo_Telefono_ListarRegistrosListaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub Gbl_Tipo_Telefono_ObtenerRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As Gbl_Tipo_Telefono_ObtenerRegistroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Gbl_Tipo_Telefono_ObtenerRegistroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As EntGbl_Tipo_Telefono
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),EntGbl_Tipo_Telefono)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub EU_EMP_TIPO_ListarRegistrosCompletedEventHandler(ByVal sender As Object, ByVal e As EU_EMP_TIPO_ListarRegistrosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EU_EMP_TIPO_ListarRegistrosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub EU_EMP_TIPO_ListarRegistrosListaCompletedEventHandler(ByVal sender As Object, ByVal e As EU_EMP_TIPO_ListarRegistrosListaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EU_EMP_TIPO_ListarRegistrosListaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub EU_EMP_TIPO_ObtenerRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As EU_EMP_TIPO_ObtenerRegistroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EU_EMP_TIPO_ObtenerRegistroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As EntEmp_Tipo
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),EntEmp_Tipo)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub Gbl_Tipo_Identificacion_ListarRegistrosCompletedEventHandler(ByVal sender As Object, ByVal e As Gbl_Tipo_Identificacion_ListarRegistrosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Gbl_Tipo_Identificacion_ListarRegistrosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub Gbl_Tipo_Identificacion_ListarRegistrosListaCompletedEventHandler(ByVal sender As Object, ByVal e As Gbl_Tipo_Identificacion_ListarRegistrosListaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Gbl_Tipo_Identificacion_ListarRegistrosListaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub Gbl_Tipo_Identificacion_ObtenerRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As Gbl_Tipo_Identificacion_ObtenerRegistroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Gbl_Tipo_Identificacion_ObtenerRegistroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As EntGbl_Tipo_Identificacion
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),EntGbl_Tipo_Identificacion)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub Gbl_Tipo_Licencia_ListarRegistrosCompletedEventHandler(ByVal sender As Object, ByVal e As Gbl_Tipo_Licencia_ListarRegistrosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Gbl_Tipo_Licencia_ListarRegistrosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub Gbl_Tipo_Licencia_ListarRegistrosListaCompletedEventHandler(ByVal sender As Object, ByVal e As Gbl_Tipo_Licencia_ListarRegistrosListaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Gbl_Tipo_Licencia_ListarRegistrosListaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub Gbl_Tipo_Licencia_ObtenerRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As Gbl_Tipo_Licencia_ObtenerRegistroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Gbl_Tipo_Licencia_ObtenerRegistroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As EntGbl_Tipo_Licencia
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),EntGbl_Tipo_Licencia)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub Gbl_Estado_Civil_ListarRegistrosCompletedEventHandler(ByVal sender As Object, ByVal e As Gbl_Estado_Civil_ListarRegistrosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Gbl_Estado_Civil_ListarRegistrosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub Gbl_Estado_Civil_ListarRegistrosListaCompletedEventHandler(ByVal sender As Object, ByVal e As Gbl_Estado_Civil_ListarRegistrosListaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Gbl_Estado_Civil_ListarRegistrosListaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub Gbl_Estado_Civil_ObtenerRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As Gbl_Estado_Civil_ObtenerRegistroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Gbl_Estado_Civil_ObtenerRegistroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As EntGbl_Estado_Civil
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),EntGbl_Estado_Civil)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub Gbl_Idiomas_ListarRegistrosCompletedEventHandler(ByVal sender As Object, ByVal e As Gbl_Idiomas_ListarRegistrosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Gbl_Idiomas_ListarRegistrosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub Gbl_Idiomas_ListarRegistrosListaCompletedEventHandler(ByVal sender As Object, ByVal e As Gbl_Idiomas_ListarRegistrosListaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Gbl_Idiomas_ListarRegistrosListaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub Gbl_Idiomas_ObtenerRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As Gbl_Idiomas_ObtenerRegistroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Gbl_Idiomas_ObtenerRegistroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As EntGbl_Idiomas
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),EntGbl_Idiomas)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub Produccion_ListarRegistrosCompletedEventHandler(ByVal sender As Object, ByVal e As Produccion_ListarRegistrosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Produccion_ListarRegistrosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub Produccion_ListarRegistrosListaCompletedEventHandler(ByVal sender As Object, ByVal e As Produccion_ListarRegistrosListaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Produccion_ListarRegistrosListaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub Produccion_ObtenerRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As Produccion_ObtenerRegistroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Produccion_ObtenerRegistroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As EntProduccion
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),EntProduccion)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub Produccion_InsertarRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub Produccion_BorrarRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub Produccion_ModificarRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub Medio_ListarRegistrosCompletedEventHandler(ByVal sender As Object, ByVal e As Medio_ListarRegistrosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Medio_ListarRegistrosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub Medio_ListarRegistrosListaCompletedEventHandler(ByVal sender As Object, ByVal e As Medio_ListarRegistrosListaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Medio_ListarRegistrosListaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub Medio_ObtenerRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As Medio_ObtenerRegistroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Medio_ObtenerRegistroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As EntMedio
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),EntMedio)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub Medio_InsertarRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub Medio_BorrarRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub Medio_ModificarRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub Estado_ListarRegistrosCompletedEventHandler(ByVal sender As Object, ByVal e As Estado_ListarRegistrosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Estado_ListarRegistrosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub Estado_ListarRegistrosListaCompletedEventHandler(ByVal sender As Object, ByVal e As Estado_ListarRegistrosListaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Estado_ListarRegistrosListaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub Estado_ObtenerRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As Estado_ObtenerRegistroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Estado_ObtenerRegistroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As EntEstado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),EntEstado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub EU_EMP_PRODUC_EMPLEADO_ListarAutoresInternosExternosCompletedEventHandler(ByVal sender As Object, ByVal e As EU_EMP_PRODUC_EMPLEADO_ListarAutoresInternosExternosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EU_EMP_PRODUC_EMPLEADO_ListarAutoresInternosExternosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub EmpProducciones_ListarRegistrosCompletedEventHandler(ByVal sender As Object, ByVal e As EmpProducciones_ListarRegistrosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EmpProducciones_ListarRegistrosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub EmpProducciones_ListarRegistrosListaCompletedEventHandler(ByVal sender As Object, ByVal e As EmpProducciones_ListarRegistrosListaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EmpProducciones_ListarRegistrosListaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub EmpProducciones_ObtenerRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As EmpProducciones_ObtenerRegistroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EmpProducciones_ObtenerRegistroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As EntEmp_Producciones
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),EntEmp_Producciones)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub EmpProducciones_InsertarRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As EmpProducciones_InsertarRegistroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EmpProducciones_InsertarRegistroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub EmpProducciones_BorrarRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub EmpProducciones_ModificarRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub EmpProducciones_ListarRegistrosCantidadCompletedEventHandler(ByVal sender As Object, ByVal e As EmpProducciones_ListarRegistrosCantidadCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EmpProducciones_ListarRegistrosCantidadCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub EmpProducciones_Rpt_CurriculoCompletedEventHandler(ByVal sender As Object, ByVal e As EmpProducciones_Rpt_CurriculoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EmpProducciones_Rpt_CurriculoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub EU_AUTOR_EXTERNO_InsertarRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As EU_AUTOR_EXTERNO_InsertarRegistroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EU_AUTOR_EXTERNO_InsertarRegistroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub EU_AUTOR_EXTERNO_BorrarRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As EU_AUTOR_EXTERNO_BorrarRegistroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EU_AUTOR_EXTERNO_BorrarRegistroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub EU_AUTOR_EXTERNO_ModificarRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As EU_AUTOR_EXTERNO_ModificarRegistroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EU_AUTOR_EXTERNO_ModificarRegistroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub EU_AUTOR_EXTERNO_ListarRegistrosCompletedEventHandler(ByVal sender As Object, ByVal e As EU_AUTOR_EXTERNO_ListarRegistrosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EU_AUTOR_EXTERNO_ListarRegistrosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub EU_AUTOR_EXTERNO_ListarRegistrosListaCompletedEventHandler(ByVal sender As Object, ByVal e As EU_AUTOR_EXTERNO_ListarRegistrosListaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EU_AUTOR_EXTERNO_ListarRegistrosListaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub EU_AUTOR_EXTERNO_ObtenerRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As EU_AUTOR_EXTERNO_ObtenerRegistroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EU_AUTOR_EXTERNO_ObtenerRegistroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As EntAutor_Externo
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),EntAutor_Externo)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub EU_EMP_PRODUC_EMPLEADO_InsertarRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As EU_EMP_PRODUC_EMPLEADO_InsertarRegistroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EU_EMP_PRODUC_EMPLEADO_InsertarRegistroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub EU_EMP_PRODUC_EMPLEADO_BorrarRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As EU_EMP_PRODUC_EMPLEADO_BorrarRegistroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EU_EMP_PRODUC_EMPLEADO_BorrarRegistroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub EU_EMP_PRODUC_EMPLEADO_ModificarRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As EU_EMP_PRODUC_EMPLEADO_ModificarRegistroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EU_EMP_PRODUC_EMPLEADO_ModificarRegistroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub EU_EMP_PRODUC_EMPLEADO_ListarRegistrosCompletedEventHandler(ByVal sender As Object, ByVal e As EU_EMP_PRODUC_EMPLEADO_ListarRegistrosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EU_EMP_PRODUC_EMPLEADO_ListarRegistrosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub EU_EMP_PRODUC_EMPLEADO_ListarRegistrosListaCompletedEventHandler(ByVal sender As Object, ByVal e As EU_EMP_PRODUC_EMPLEADO_ListarRegistrosListaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EU_EMP_PRODUC_EMPLEADO_ListarRegistrosListaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub EU_EMP_PRODUC_EMPLEADO_ObtenerRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As EU_EMP_PRODUC_EMPLEADO_ObtenerRegistroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EU_EMP_PRODUC_EMPLEADO_ObtenerRegistroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As EntEmp_Produccion_Empleado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),EntEmp_Produccion_Empleado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub EU_PRODUC_AUTOR_EXTERNO_InsertarRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As EU_PRODUC_AUTOR_EXTERNO_InsertarRegistroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EU_PRODUC_AUTOR_EXTERNO_InsertarRegistroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub EU_PRODUC_AUTOR_EXTERNO_BorrarRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As EU_PRODUC_AUTOR_EXTERNO_BorrarRegistroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EU_PRODUC_AUTOR_EXTERNO_BorrarRegistroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub EU_PRODUC_AUTOR_EXTERNO_ModificarRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As EU_PRODUC_AUTOR_EXTERNO_ModificarRegistroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EU_PRODUC_AUTOR_EXTERNO_ModificarRegistroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub EU_PRODUC_AUTOR_EXTERNO_ListarRegistrosCompletedEventHandler(ByVal sender As Object, ByVal e As EU_PRODUC_AUTOR_EXTERNO_ListarRegistrosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EU_PRODUC_AUTOR_EXTERNO_ListarRegistrosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub EU_PRODUC_AUTOR_EXTERNO_ListarRegistrosListaCompletedEventHandler(ByVal sender As Object, ByVal e As EU_PRODUC_AUTOR_EXTERNO_ListarRegistrosListaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EU_PRODUC_AUTOR_EXTERNO_ListarRegistrosListaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub EU_PRODUC_AUTOR_EXTERNO_ObtenerRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As EU_PRODUC_AUTOR_EXTERNO_ObtenerRegistroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EU_PRODUC_AUTOR_EXTERNO_ObtenerRegistroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As EntProduccion_Autor_Externo
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),EntProduccion_Autor_Externo)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub EU_TIPO_VEHICULO_PRODUC_InsertarRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As EU_TIPO_VEHICULO_PRODUC_InsertarRegistroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EU_TIPO_VEHICULO_PRODUC_InsertarRegistroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub EU_TIPO_VEHICULO_PRODUC_BorrarRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As EU_TIPO_VEHICULO_PRODUC_BorrarRegistroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EU_TIPO_VEHICULO_PRODUC_BorrarRegistroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub EU_TIPO_VEHICULO_PRODUC_ModificarRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As EU_TIPO_VEHICULO_PRODUC_ModificarRegistroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EU_TIPO_VEHICULO_PRODUC_ModificarRegistroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub EU_TIPO_VEHICULO_PRODUC_ListarRegistrosCompletedEventHandler(ByVal sender As Object, ByVal e As EU_TIPO_VEHICULO_PRODUC_ListarRegistrosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EU_TIPO_VEHICULO_PRODUC_ListarRegistrosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub EU_TIPO_VEHICULO_PRODUC_ListarRegistrosListaCompletedEventHandler(ByVal sender As Object, ByVal e As EU_TIPO_VEHICULO_PRODUC_ListarRegistrosListaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EU_TIPO_VEHICULO_PRODUC_ListarRegistrosListaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub EU_TIPO_VEHICULO_PRODUC_ObtenerRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As EU_TIPO_VEHICULO_PRODUC_ObtenerRegistroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EU_TIPO_VEHICULO_PRODUC_ObtenerRegistroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As EntTipo_Vehiculo_Produccion
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),EntTipo_Vehiculo_Produccion)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub Reconocimientos_ListarRegistrosCompletedEventHandler(ByVal sender As Object, ByVal e As Reconocimientos_ListarRegistrosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Reconocimientos_ListarRegistrosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub Reconocimientos_ListarRegistrosListaCompletedEventHandler(ByVal sender As Object, ByVal e As Reconocimientos_ListarRegistrosListaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Reconocimientos_ListarRegistrosListaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub Reconocimientos_ObtenerRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As Reconocimientos_ObtenerRegistroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Reconocimientos_ObtenerRegistroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As EntReconocimiento
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),EntReconocimiento)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub Reconocimientos_InsertarRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub Reconocimientos_BorrarRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub Reconocimientos_ModificarRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub EmpCursos_BorrarRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub EmpCursos_ModificarRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub EmpCursos_ModificarTituloCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub EmpCursos_ObtenerTituloCompletedEventHandler(ByVal sender As Object, ByVal e As EmpCursos_ObtenerTituloCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EmpCursos_ObtenerTituloCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Byte()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Byte())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub EmpCursos_Rpt_CurriculoCompletedEventHandler(ByVal sender As Object, ByVal e As EmpCursos_Rpt_CurriculoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EmpCursos_Rpt_CurriculoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub EmpCursosAut_ListarRegistrosCompletedEventHandler(ByVal sender As Object, ByVal e As EmpCursosAut_ListarRegistrosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EmpCursosAut_ListarRegistrosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub EmpCursosAut_ListarRegistrosListaCompletedEventHandler(ByVal sender As Object, ByVal e As EmpCursosAut_ListarRegistrosListaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EmpCursosAut_ListarRegistrosListaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub EmpCursosAut_ObtenerRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As EmpCursosAut_ObtenerRegistroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EmpCursosAut_ObtenerRegistroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As EntEmp_Cursos_Aut
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),EntEmp_Cursos_Aut)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub EmpCursosAut_InsertarRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub EmpCursosAut_BorrarRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub EmpCursosAut_ModificarRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub EmpCertificaciones_ListarRegistrosCompletedEventHandler(ByVal sender As Object, ByVal e As EmpCertificaciones_ListarRegistrosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EmpCertificaciones_ListarRegistrosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub EmpCertificaciones_ListarRegistrosListaCompletedEventHandler(ByVal sender As Object, ByVal e As EmpCertificaciones_ListarRegistrosListaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EmpCertificaciones_ListarRegistrosListaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub EmpCertificaciones_ObtenerRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As EmpCertificaciones_ObtenerRegistroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EmpCertificaciones_ObtenerRegistroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As EntEmp_Certificaciones
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),EntEmp_Certificaciones)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub EmpCertificaciones_InsertarRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub EmpCertificaciones_BorrarRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub EmpCertificaciones_ModificarRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub EmpCertificaciones_ModificarTituloCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub EmpCertificaciones_ObtenerTituloCompletedEventHandler(ByVal sender As Object, ByVal e As EmpCertificaciones_ObtenerTituloCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EmpCertificaciones_ObtenerTituloCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Byte()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Byte())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub EmpCertificaciones_Rpt_CurriculoCompletedEventHandler(ByVal sender As Object, ByVal e As EmpCertificaciones_Rpt_CurriculoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EmpCertificaciones_Rpt_CurriculoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub EmpCertificacionesAut_ListarRegistrosCompletedEventHandler(ByVal sender As Object, ByVal e As EmpCertificacionesAut_ListarRegistrosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EmpCertificacionesAut_ListarRegistrosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub EmpCertificacionesAut_ListarRegistrosListaCompletedEventHandler(ByVal sender As Object, ByVal e As EmpCertificacionesAut_ListarRegistrosListaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EmpCertificacionesAut_ListarRegistrosListaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub EmpCertificacionesAut_ObtenerRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As EmpCertificacionesAut_ObtenerRegistroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EmpCertificacionesAut_ObtenerRegistroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As EntEmp_Certificaciones_Aut
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),EntEmp_Certificaciones_Aut)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub EmpCertificacionesAut_InsertarRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub EmpCertificacionesAut_BorrarRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub EmpCertificacionesAut_ModificarRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub Empleados_ObtenerFotografiaYCarneCompletedEventHandler(ByVal sender As Object, ByVal e As Empleados_ObtenerFotografiaYCarneCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Empleados_ObtenerFotografiaYCarneCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub Empleados_ListarRegistrosCompletedEventHandler(ByVal sender As Object, ByVal e As Empleados_ListarRegistrosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Empleados_ListarRegistrosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub Empleados_ListarRegistrosListaCompletedEventHandler(ByVal sender As Object, ByVal e As Empleados_ListarRegistrosListaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Empleados_ListarRegistrosListaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub Empleados_ObtenerRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As Empleados_ObtenerRegistroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Empleados_ObtenerRegistroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As EntEmpleados
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),EntEmpleados)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub Empleados_InsertarRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub Empleados_BorrarRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub Empleados_ModificarRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub Empleados_ModificarRegistroImagenCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub Empleados_ModificarFotoCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub Empleados_ObtenerFotoCompletedEventHandler(ByVal sender As Object, ByVal e As Empleados_ObtenerFotoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Empleados_ObtenerFotoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Byte()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Byte())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub Empleados_Rpt_CurriculoCompletedEventHandler(ByVal sender As Object, ByVal e As Empleados_Rpt_CurriculoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Empleados_Rpt_CurriculoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub Empleados_Actualizacion_SIRH_EU_DatosCompletedEventHandler(ByVal sender As Object, ByVal e As Empleados_Actualizacion_SIRH_EU_DatosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Empleados_Actualizacion_SIRH_EU_DatosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub Empleados_Actualizacion_SIRH_EU_TipoEmpleadoCompletedEventHandler(ByVal sender As Object, ByVal e As Empleados_Actualizacion_SIRH_EU_TipoEmpleadoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Empleados_Actualizacion_SIRH_EU_TipoEmpleadoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub Empleados_Actualizacion_SIRH_EU_EmpleadoNuevoCompletedEventHandler(ByVal sender As Object, ByVal e As Empleados_Actualizacion_SIRH_EU_EmpleadoNuevoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Empleados_Actualizacion_SIRH_EU_EmpleadoNuevoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub Empleados_Actualizacion_SIRH_EU_EmpleadoCorreoCompletedEventHandler(ByVal sender As Object, ByVal e As Empleados_Actualizacion_SIRH_EU_EmpleadoCorreoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Empleados_Actualizacion_SIRH_EU_EmpleadoCorreoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub Empleados_Actualizacion_SIRH_EU_EmpleadoCompletedEventHandler(ByVal sender As Object, ByVal e As Empleados_Actualizacion_SIRH_EU_EmpleadoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Empleados_Actualizacion_SIRH_EU_EmpleadoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub Empleados_SincronizarEuSirhCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub Empleados_SincronizarEuSirh_EmpleadosNuevosCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub Empleados_SincronizarEuSirh_CambioDatosCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub Empleados_SincronizarEuSirh_TipoEmpleadoCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub Empleados_SincronizarEuSirh_CorreoEmpleadoCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub Empleados_Actualizacion_SIRH_EU_EmpleadoJubiladoCompletedEventHandler(ByVal sender As Object, ByVal e As Empleados_Actualizacion_SIRH_EU_EmpleadoJubiladoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Empleados_Actualizacion_SIRH_EU_EmpleadoJubiladoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub Empleados_ListarEmpleadosPorRoleCompletedEventHandler(ByVal sender As Object, ByVal e As Empleados_ListarEmpleadosPorRoleCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Empleados_ListarEmpleadosPorRoleCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub Funcionarios_ListarRegistrosListaCompletedEventHandler(ByVal sender As Object, ByVal e As Funcionarios_ListarRegistrosListaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Funcionarios_ListarRegistrosListaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub Funcionarios_ObtenerRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As Funcionarios_ObtenerRegistroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Funcionarios_ObtenerRegistroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As EntFuncionario
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),EntFuncionario)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub Emp_Parientes_InsertarRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub Emp_Parientes_BorrarRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub Emp_Parientes_ModificarRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub Emp_Parientes_ListarRegistrosCompletedEventHandler(ByVal sender As Object, ByVal e As Emp_Parientes_ListarRegistrosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Emp_Parientes_ListarRegistrosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub Emp_Parientes_ListarRegistrosListaCompletedEventHandler(ByVal sender As Object, ByVal e As Emp_Parientes_ListarRegistrosListaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Emp_Parientes_ListarRegistrosListaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub Emp_Parientes_ObtenerRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As Emp_Parientes_ObtenerRegistroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Emp_Parientes_ObtenerRegistroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As EntEmp_Parientes
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),EntEmp_Parientes)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub Parentesco_BorrarRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub Parentesco_ModificarRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub Parentesco_InsertarRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As Parentesco_InsertarRegistroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Parentesco_InsertarRegistroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub Parentesco_ListarRegistrosCompletedEventHandler(ByVal sender As Object, ByVal e As Parentesco_ListarRegistrosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Parentesco_ListarRegistrosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub Parentesco_ListarRegistrosListaCompletedEventHandler(ByVal sender As Object, ByVal e As Parentesco_ListarRegistrosListaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Parentesco_ListarRegistrosListaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub Parentesco_ObtenerRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As Parentesco_ObtenerRegistroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Parentesco_ObtenerRegistroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As EntParentesco
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),EntParentesco)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub Requisitos_BorrarRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub Requisitos_ModificarRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub Requisitos_InsertarRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As Requisitos_InsertarRegistroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Requisitos_InsertarRegistroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub Requisitos_ListarRegistrosCompletedEventHandler(ByVal sender As Object, ByVal e As Requisitos_ListarRegistrosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Requisitos_ListarRegistrosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub Requisitos_ListarRegistrosListaCompletedEventHandler(ByVal sender As Object, ByVal e As Requisitos_ListarRegistrosListaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Requisitos_ListarRegistrosListaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub Requisitos_ObtenerRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As Requisitos_ObtenerRegistroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Requisitos_ObtenerRegistroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As EntRequisitos
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),EntRequisitos)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub Emp_Requisitos_InsertarRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub Emp_Requisitos_BorrarRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub Emp_Requisitos_ModificarRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub Emp_Requisitos_ListarRegistrosCompletedEventHandler(ByVal sender As Object, ByVal e As Emp_Requisitos_ListarRegistrosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Emp_Requisitos_ListarRegistrosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub Emp_Requisitos_ListarRegistrosListaCompletedEventHandler(ByVal sender As Object, ByVal e As Emp_Requisitos_ListarRegistrosListaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Emp_Requisitos_ListarRegistrosListaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub Emp_Requisitos_ObtenerRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As Emp_Requisitos_ObtenerRegistroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Emp_Requisitos_ObtenerRegistroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As EntEmp_Requisitos
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),EntEmp_Requisitos)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub Emp_Requisitos_Rpt_CurriculoCompletedEventHandler(ByVal sender As Object, ByVal e As Emp_Requisitos_Rpt_CurriculoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Emp_Requisitos_Rpt_CurriculoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub Emp_Licencia_Conducir_ListarRegistrosCompletedEventHandler(ByVal sender As Object, ByVal e As Emp_Licencia_Conducir_ListarRegistrosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Emp_Licencia_Conducir_ListarRegistrosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub Emp_Licencia_Conducir_ListarRegistrosListaCompletedEventHandler(ByVal sender As Object, ByVal e As Emp_Licencia_Conducir_ListarRegistrosListaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Emp_Licencia_Conducir_ListarRegistrosListaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub Emp_Licencia_Conducir_ObtenerRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As Emp_Licencia_Conducir_ObtenerRegistroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Emp_Licencia_Conducir_ObtenerRegistroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As EntEmp_Licencia_Conducir
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),EntEmp_Licencia_Conducir)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub Emp_Licencia_Conducir_InsertarRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub Emp_Licencia_Conducir_BorrarRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub Emp_Licencia_Conducir_ModificarRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub Licencia_Conducir_Rpt_CurriculoCompletedEventHandler(ByVal sender As Object, ByVal e As Licencia_Conducir_Rpt_CurriculoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Licencia_Conducir_Rpt_CurriculoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub Provincia_ListarRegistrosCompletedEventHandler(ByVal sender As Object, ByVal e As Provincia_ListarRegistrosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Provincia_ListarRegistrosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub Provincia_ListarRegistrosListaCompletedEventHandler(ByVal sender As Object, ByVal e As Provincia_ListarRegistrosListaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Provincia_ListarRegistrosListaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub EU_UNIDAD_InsertarRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As EU_UNIDAD_InsertarRegistroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EU_UNIDAD_InsertarRegistroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub EU_UNIDAD_BorrarRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As EU_UNIDAD_BorrarRegistroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EU_UNIDAD_BorrarRegistroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub EU_UNIDAD_ModificarRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As EU_UNIDAD_ModificarRegistroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EU_UNIDAD_ModificarRegistroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub EU_UNIDAD_ListarRegistrosCompletedEventHandler(ByVal sender As Object, ByVal e As EU_UNIDAD_ListarRegistrosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EU_UNIDAD_ListarRegistrosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub EU_UNIDAD_ListarRegistrosListaCompletedEventHandler(ByVal sender As Object, ByVal e As EU_UNIDAD_ListarRegistrosListaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EU_UNIDAD_ListarRegistrosListaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub EU_UNIDAD_ObtenerRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As EU_UNIDAD_ObtenerRegistroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EU_UNIDAD_ObtenerRegistroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As EntEU_UNIDAD
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),EntEU_UNIDAD)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub Carreras_ListarRegistrosCompletedEventHandler(ByVal sender As Object, ByVal e As Carreras_ListarRegistrosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Carreras_ListarRegistrosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub Carreras_ListarRegistrosListaCompletedEventHandler(ByVal sender As Object, ByVal e As Carreras_ListarRegistrosListaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Carreras_ListarRegistrosListaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub Carreras_ObtenerRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As Carreras_ObtenerRegistroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Carreras_ObtenerRegistroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As EntCarreras
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),EntCarreras)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub Carreras_InsertarRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub Carreras_BorrarRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub Carreras_ModificarRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub NivelEducativo_ListarRegistrosCompletedEventHandler(ByVal sender As Object, ByVal e As NivelEducativo_ListarRegistrosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class NivelEducativo_ListarRegistrosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub NivelEducativo_ListarRegistrosListaCompletedEventHandler(ByVal sender As Object, ByVal e As NivelEducativo_ListarRegistrosListaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class NivelEducativo_ListarRegistrosListaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub NivelEducativo_ObtenerRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As NivelEducativo_ObtenerRegistroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class NivelEducativo_ObtenerRegistroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As EntNivel_Educativo
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),EntNivel_Educativo)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub NivelEducativo_InsertarRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub NivelEducativo_BorrarRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub NivelEducativo_ModificarRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub Telefonos_ListarRegistrosCompletedEventHandler(ByVal sender As Object, ByVal e As Telefonos_ListarRegistrosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Telefonos_ListarRegistrosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub Telefonos_ListarRegistrosListaCompletedEventHandler(ByVal sender As Object, ByVal e As Telefonos_ListarRegistrosListaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Telefonos_ListarRegistrosListaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub Telefonos_ObtenerRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As Telefonos_ObtenerRegistroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Telefonos_ObtenerRegistroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As EntEmp_Telefonos
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),EntEmp_Telefonos)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub Telefonos_InsertarRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub Telefonos_BorrarRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub Telefonos_ModificarRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub Telefonos_Rpt_CurriculoCompletedEventHandler(ByVal sender As Object, ByVal e As Telefonos_Rpt_CurriculoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Telefonos_Rpt_CurriculoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub ExpLaboral_ListarRegistrosCompletedEventHandler(ByVal sender As Object, ByVal e As ExpLaboral_ListarRegistrosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ExpLaboral_ListarRegistrosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub ExpLaboral_ListarRegistrosListaCompletedEventHandler(ByVal sender As Object, ByVal e As ExpLaboral_ListarRegistrosListaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ExpLaboral_ListarRegistrosListaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub ExpLaboral_ObtenerRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As ExpLaboral_ObtenerRegistroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ExpLaboral_ObtenerRegistroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As EntEmp_Exp_Laboral
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),EntEmp_Exp_Laboral)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub ExpLaboral_InsertarRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub ExpLaboral_BorrarRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub ExpLaboral_ModificarRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub ExpLaboral_Rpt_CurriculoCompletedEventHandler(ByVal sender As Object, ByVal e As ExpLaboral_Rpt_CurriculoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ExpLaboral_Rpt_CurriculoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub EmpEstFormales_ListarRegistrosCompletedEventHandler(ByVal sender As Object, ByVal e As EmpEstFormales_ListarRegistrosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EmpEstFormales_ListarRegistrosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub EmpEstFormales_ListarRegistrosListaCompletedEventHandler(ByVal sender As Object, ByVal e As EmpEstFormales_ListarRegistrosListaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EmpEstFormales_ListarRegistrosListaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub EmpEstFormales_ObtenerRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As EmpEstFormales_ObtenerRegistroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EmpEstFormales_ObtenerRegistroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As EntEmp_Est_Formales
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),EntEmp_Est_Formales)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub EmpEstFormales_InsertarRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub EmpEstFormales_BorrarRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub EmpEstFormales_ModificarRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub EmpEstFormales_ModificarTituloCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub EmpEstFormales_ObtenerTituloCompletedEventHandler(ByVal sender As Object, ByVal e As EmpEstFormales_ObtenerTituloCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EmpEstFormales_ObtenerTituloCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Byte()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Byte())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub EmpEstFormales_Rpt_CurriculoCompletedEventHandler(ByVal sender As Object, ByVal e As EmpEstFormales_Rpt_CurriculoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EmpEstFormales_Rpt_CurriculoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub EmpEstFormalesAut_ListarRegistrosCompletedEventHandler(ByVal sender As Object, ByVal e As EmpEstFormalesAut_ListarRegistrosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EmpEstFormalesAut_ListarRegistrosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub EmpEstFormalesAut_ListarRegistrosListaCompletedEventHandler(ByVal sender As Object, ByVal e As EmpEstFormalesAut_ListarRegistrosListaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EmpEstFormalesAut_ListarRegistrosListaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub EmpEstFormalesAut_ObtenerRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As EmpEstFormalesAut_ObtenerRegistroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EmpEstFormalesAut_ObtenerRegistroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As EntEmp_Est_Formales_Aut
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),EntEmp_Est_Formales_Aut)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub EmpEstFormalesAut_InsertarRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub EmpEstFormalesAut_BorrarRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub EmpEstFormalesAut_ModificarRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub Idiomas_ListarRegistrosCompletedEventHandler(ByVal sender As Object, ByVal e As Idiomas_ListarRegistrosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Idiomas_ListarRegistrosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub Idiomas_ListarRegistrosListaCompletedEventHandler(ByVal sender As Object, ByVal e As Idiomas_ListarRegistrosListaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Idiomas_ListarRegistrosListaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub Idiomas_ObtenerRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As Idiomas_ObtenerRegistroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Idiomas_ObtenerRegistroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As EntGbl_Idiomas
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),EntGbl_Idiomas)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub EmpIdiomas_ListarRegistrosCompletedEventHandler(ByVal sender As Object, ByVal e As EmpIdiomas_ListarRegistrosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EmpIdiomas_ListarRegistrosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub EmpIdiomas_ListarRegistrosListaCompletedEventHandler(ByVal sender As Object, ByVal e As EmpIdiomas_ListarRegistrosListaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EmpIdiomas_ListarRegistrosListaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub EmpIdiomas_ObtenerRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As EmpIdiomas_ObtenerRegistroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EmpIdiomas_ObtenerRegistroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As EntEmp_Idiomas
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),EntEmp_Idiomas)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub EmpIdiomas_InsertarRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub EmpIdiomas_BorrarRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub EmpIdiomas_ModificarRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub EmpIdiomas_Rpt_CurriculoCompletedEventHandler(ByVal sender As Object, ByVal e As EmpIdiomas_Rpt_CurriculoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EmpIdiomas_Rpt_CurriculoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub EmpIdiomaTitulos_ListarRegistrosCompletedEventHandler(ByVal sender As Object, ByVal e As EmpIdiomaTitulos_ListarRegistrosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EmpIdiomaTitulos_ListarRegistrosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub EmpIdiomaTitulos_ListarRegistrosListaCompletedEventHandler(ByVal sender As Object, ByVal e As EmpIdiomaTitulos_ListarRegistrosListaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EmpIdiomaTitulos_ListarRegistrosListaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub EmpIdiomaTitulos_ObtenerRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As EmpIdiomaTitulos_ObtenerRegistroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EmpIdiomaTitulos_ObtenerRegistroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As EntEmp_Idioma_Titulos
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),EntEmp_Idioma_Titulos)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub EmpIdiomaTitulos_InsertarRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub EmpIdiomaTitulos_BorrarRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub EmpIdiomaTitulos_ModificarRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub EmpIdiomaTitulos_ModificarTituloCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub EmpIdiomaTitulos_ObtenerTituloCompletedEventHandler(ByVal sender As Object, ByVal e As EmpIdiomaTitulos_ObtenerTituloCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EmpIdiomaTitulos_ObtenerTituloCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Byte()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Byte())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub EmpIdiomaTitulosAut_ListarRegistrosCompletedEventHandler(ByVal sender As Object, ByVal e As EmpIdiomaTitulosAut_ListarRegistrosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EmpIdiomaTitulosAut_ListarRegistrosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub EmpIdiomaTitulosAut_ListarRegistrosListaCompletedEventHandler(ByVal sender As Object, ByVal e As EmpIdiomaTitulosAut_ListarRegistrosListaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EmpIdiomaTitulosAut_ListarRegistrosListaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub EmpIdiomaTitulosAut_ObtenerRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As EmpIdiomaTitulosAut_ObtenerRegistroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EmpIdiomaTitulosAut_ObtenerRegistroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As EntEmp_Idioma_Titulos_Aut
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),EntEmp_Idioma_Titulos_Aut)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub EmpIdiomaTitulosAut_InsertarRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub EmpIdiomaTitulosAut_BorrarRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub EmpIdiomaTitulosAut_ModificarRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub Nacion_ListarRegistrosCompletedEventHandler(ByVal sender As Object, ByVal e As Nacion_ListarRegistrosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Nacion_ListarRegistrosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub Nacion_ListarRegistrosListaCompletedEventHandler(ByVal sender As Object, ByVal e As Nacion_ListarRegistrosListaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Nacion_ListarRegistrosListaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub Nacion_ObtenerRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As Nacion_ObtenerRegistroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Nacion_ObtenerRegistroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As EntNacion
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),EntNacion)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub Cursos_ListarRegistrosCompletedEventHandler(ByVal sender As Object, ByVal e As Cursos_ListarRegistrosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Cursos_ListarRegistrosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub Cursos_ListarRegistrosListaCompletedEventHandler(ByVal sender As Object, ByVal e As Cursos_ListarRegistrosListaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Cursos_ListarRegistrosListaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub Cursos_ObtenerRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As Cursos_ObtenerRegistroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Cursos_ObtenerRegistroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As EntCursos
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),EntCursos)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub Cursos_InsertarRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub Cursos_BorrarRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub Cursos_ModificarRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub EmpCursos_ListarRegistrosCompletedEventHandler(ByVal sender As Object, ByVal e As EmpCursos_ListarRegistrosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EmpCursos_ListarRegistrosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub EmpCursos_ListarRegistrosListaCompletedEventHandler(ByVal sender As Object, ByVal e As EmpCursos_ListarRegistrosListaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EmpCursos_ListarRegistrosListaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub EmpCursos_ObtenerRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As EmpCursos_ObtenerRegistroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EmpCursos_ObtenerRegistroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As EntEmp_Cursos
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),EntEmp_Cursos)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub EmpCursos_InsertarRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
End Namespace
