Imports System.Web
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Data
Imports Utilerias.Genericos
Imports Microsoft.Practices.EnterpriseLibrary.ExceptionHandling
Imports OrdenesDeTrabajo.EntidadNegocio.OrdenesDeTrabajo
Imports OrdenesDeTrabajo.EntidadNegocio.Catalogos
Imports OrdenesDeTrabajo.AccesoDatos.OrdenesDeTrabajo
Imports OrdenesDeTrabajo.LogicaNegocio.OrdenesDeTrabajo
Imports Utilerias.OrdenesDeTrabajo

<System.Web.Script.Services.ScriptService()> _
<WebService(Namespace:="http://Ordenesdetrabajo.ucr.ac.cr/Sla_Ordenesdetrabajo/Ws_OT_OrdenesDeTrabajo")> _
<WebServiceBinding(ConformsTo:=WsiProfiles.BasicProfile1_1)> _
<Global.Microsoft.VisualBasic.CompilerServices.DesignerGenerated()> _
Public Class Ws_OT_OrdenesDeTrabajo
    Inherits System.Web.Services.WebService

#Region "OTF_REVISION_ORDEN_TRABAJ"
    ''' <summary>
    ''' Permite agregar un registro en la tabla OTF_REVISION_ORDEN_TRABAJ
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>31/08/2015 08:25:27 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_REVISION_ORDEN_TRABAJ_InsertarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtfRevisionOrdenTrabaj) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtfRevisionOrdenTrabaj As New BllOtfRevisionOrdenTrabaj(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_INSERTAR)

            Return vlo_BllOtfRevisionOrdenTrabaj.InsertarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite agregar un registro en la tabla OTF_REVISION_ORDEN_TRABAJ, y enviar un correo de notificación
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns></returns>
    ''' <remarks></remarks>
    ''' <author>Carlos Gómez Ondoy</author>
    ''' <creationDate>08/09/2015</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_REVISION_ORDEN_TRABAJ_InsertarRevisionEnvioCorreo(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtfRevisionOrdenTrabaj, pvn_NumeroEmpleado As Integer, pvc_Descripcion As String, pvc_Motivo As String, pvo_FechaHoraSolicita As Date) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtfRevisionOrdenTrabaj As New BllOtfRevisionOrdenTrabaj(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_INSERTAR)

            Return vlo_BllOtfRevisionOrdenTrabaj.InsertarRevisionEnvioCorreo(pvo_Registro, pvn_NumeroEmpleado, pvc_Descripcion, pvc_Motivo, pvo_FechaHoraSolicita)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTF_REVISION_ORDEN_TRABAJ
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>31/08/2015 08:25:27 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_REVISION_ORDEN_TRABAJ_BorrarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtfRevisionOrdenTrabaj) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtfRevisionOrdenTrabaj As New DalOtfRevisionOrdenTrabaj(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_BORRAR)

            Return vlo_DalOtfRevisionOrdenTrabaj.BorrarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTF_REVISION_ORDEN_TRABAJ
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>31/08/2015 08:25:27 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_REVISION_ORDEN_TRABAJ_ModificarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtfRevisionOrdenTrabaj) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtfRevisionOrdenTrabaj As New DalOtfRevisionOrdenTrabaj(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_MODIFICAR)

            Return vlo_DalOtfRevisionOrdenTrabaj.ModificarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTF_REVISION_ORDEN_TRABAJ según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>31/08/2015 08:25:27 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_REVISION_ORDEN_TRABAJ_ListarRegistros(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtfRevisionOrdenTrabaj As New DalOtfRevisionOrdenTrabaj(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtfRevisionOrdenTrabaj.ListarRegistros(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTF_REVISION_ORDEN_TRABAJ según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>31/08/2015 08:25:27 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_REVISION_ORDEN_TRABAJ_ObtenerDatosPaginacionVOtfRevisionOrdenTrabaj(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtfRevisionOrdenTrabaj As New DalOtfRevisionOrdenTrabaj(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtfRevisionOrdenTrabaj.ObtenerDatosPaginacionVOtfRevisionOrdenTrabaj(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTF_REVISION_ORDEN_TRABAJLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>31/08/2015 08:25:27 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_REVISION_ORDEN_TRABAJ_ListarRegistrosLista(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtfRevisionOrdenTrabaj As New DalOtfRevisionOrdenTrabaj(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtfRevisionOrdenTrabaj.ListarRegistrosLista(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTF_REVISION_ORDEN_TRABAJLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>31/08/2015 08:25:27 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_REVISION_ORDEN_TRABAJ_ObtenerDatosPaginacionVOtfRevisionOrdenTrabajlst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtfRevisionOrdenTrabaj As New DalOtfRevisionOrdenTrabaj(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtfRevisionOrdenTrabaj.ObtenerDatosPaginacionVOtfRevisionOrdenTrabajlst(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene un registro de la tabla OTF_REVISION_ORDEN_TRABAJ según el criterio indicado
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <returns>Entidad que representa la información obtenida al ejecutar la consulta</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>31/08/2015 08:25:27 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_REVISION_ORDEN_TRABAJ_ObtenerRegistro(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String) As EntOtfRevisionOrdenTrabaj
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtfRevisionOrdenTrabaj As New DalOtfRevisionOrdenTrabaj(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtfRevisionOrdenTrabaj.ObtenerRegistro(pvc_Condicion)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

#End Region

#Region "OTF_ADJUNTO_ORDEN_TRABAJO"
    ''' <summary>
    ''' Permite agregar un registro en la tabla OTF_ADJUNTO_ORDEN_TRABAJO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>31/08/2015 10:11:52 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_ADJUNTO_ORDEN_TRABAJO_InsertarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtfAdjuntoOrdenTrabajo) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtfAdjuntoOrdenTrabajo As New BllOtfAdjuntoOrdenTrabajo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_INSERTAR)

            Return vlo_BllOtfAdjuntoOrdenTrabajo.InsertarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTF_ADJUNTO_ORDEN_TRABAJO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>31/08/2015 10:11:52 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_ADJUNTO_ORDEN_TRABAJO_BorrarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtfAdjuntoOrdenTrabajo) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtfAdjuntoOrdenTrabajo As New DalOtfAdjuntoOrdenTrabajo(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_BORRAR)

            Return vlo_DalOtfAdjuntoOrdenTrabajo.BorrarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTF_ADJUNTO_ORDEN_TRABAJO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>31/08/2015 10:11:52 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_ADJUNTO_ORDEN_TRABAJO_ModificarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtfAdjuntoOrdenTrabajo) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtfAdjuntoOrdenTrabajo As New DalOtfAdjuntoOrdenTrabajo(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_MODIFICAR)

            Return vlo_DalOtfAdjuntoOrdenTrabajo.ModificarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTF_ADJUNTO_ORDEN_TRABAJO según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>31/08/2015 10:11:52 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_ADJUNTO_ORDEN_TRABAJO_ListarRegistros(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtfAdjuntoOrdenTrabajo As New DalOtfAdjuntoOrdenTrabajo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtfAdjuntoOrdenTrabajo.ListarRegistros(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTF_ADJUNTO_ORDEN_TRABAJO según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>31/08/2015 10:11:52 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_ADJUNTO_ORDEN_TRABAJO_ObtenerDatosPaginacionVOtfAdjuntoOrdenTrabajo(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtfAdjuntoOrdenTrabajo As New DalOtfAdjuntoOrdenTrabajo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtfAdjuntoOrdenTrabajo.ObtenerDatosPaginacionVOtfAdjuntoOrdenTrabajo(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTF_ADJUNTO_ORDEN_TRABAJOLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>31/08/2015 10:11:52 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_ADJUNTO_ORDEN_TRABAJO_ListarRegistrosLista(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtfAdjuntoOrdenTrabajo As New DalOtfAdjuntoOrdenTrabajo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtfAdjuntoOrdenTrabajo.ListarRegistrosLista(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTF_ADJUNTO_ORDEN_TRABAJOLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>31/08/2015 10:11:52 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_ADJUNTO_ORDEN_TRABAJO_ObtenerDatosPaginacionVOtfAdjuntoOrdenTrabajolst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtfAdjuntoOrdenTrabajo As New DalOtfAdjuntoOrdenTrabajo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtfAdjuntoOrdenTrabajo.ObtenerDatosPaginacionVOtfAdjuntoOrdenTrabajolst(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene un registro de la tabla OTF_ADJUNTO_ORDEN_TRABAJO según el criterio indicado
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <returns>Entidad que representa la información obtenida al ejecutar la consulta</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>31/08/2015 10:11:52 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_ADJUNTO_ORDEN_TRABAJO_ObtenerRegistro(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String) As EntOtfAdjuntoOrdenTrabajo
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtfAdjuntoOrdenTrabajo As New DalOtfAdjuntoOrdenTrabajo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtfAdjuntoOrdenTrabajo.ObtenerRegistro(pvc_Condicion)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

#End Region

#Region "OTF_PLANEACION_PREVENTIVO"
    ''' <summary>
    ''' Permite agregar un registro en la tabla OTF_PLANEACION_PREVENTIVO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>09/09/2015 03:12:05 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_PLANEACION_PREVENTIVO_InsertarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtfPlaneacionPreventivo) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtfPlaneacionPreventivo As New BllOtfPlaneacionPreventivo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_INSERTAR)

            Return vlo_BllOtfPlaneacionPreventivo.InsertarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTF_PLANEACION_PREVENTIVO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>09/09/2015 03:12:05 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_PLANEACION_PREVENTIVO_BorrarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtfPlaneacionPreventivo) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtfPlaneacionPreventivo As New DalOtfPlaneacionPreventivo(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_BORRAR)

            Return vlo_DalOtfPlaneacionPreventivo.BorrarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTF_PLANEACION_PREVENTIVO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>09/09/2015 03:12:05 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_PLANEACION_PREVENTIVO_ModificarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtfPlaneacionPreventivo) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtfPlaneacionPreventivo As New DalOtfPlaneacionPreventivo(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_MODIFICAR)

            Return vlo_DalOtfPlaneacionPreventivo.ModificarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTF_PLANEACION_PREVENTIVO según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>09/09/2015 03:12:05 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_PLANEACION_PREVENTIVO_ListarRegistros(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtfPlaneacionPreventivo As New DalOtfPlaneacionPreventivo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtfPlaneacionPreventivo.ListarRegistros(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTF_PLANEACION_PREVENTIVO según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>09/09/2015 03:12:05 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_PLANEACION_PREVENTIVO_ObtenerDatosPaginacionVOtfPlaneacionPreventivo(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtfPlaneacionPreventivo As New DalOtfPlaneacionPreventivo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtfPlaneacionPreventivo.ObtenerDatosPaginacionVOtfPlaneacionPreventivo(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTF_PLANEACION_PREVENTIVOLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>09/09/2015 03:12:05 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_PLANEACION_PREVENTIVO_ListarRegistrosLista(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtfPlaneacionPreventivo As New DalOtfPlaneacionPreventivo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtfPlaneacionPreventivo.ListarRegistrosLista(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene un registro de la tabla OTF_PLANEACION_PREVENTIVO según el criterio indicado
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <returns>Entidad que representa la información obtenida al ejecutar la consulta</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>09/09/2015 03:12:05 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_PLANEACION_PREVENTIVO_ObtenerRegistro(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String) As EntOtfPlaneacionPreventivo
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtfPlaneacionPreventivo As New DalOtfPlaneacionPreventivo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtfPlaneacionPreventivo.ObtenerRegistro(pvc_Condicion)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTF_PLANEACION_PREVENTIVOLST según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>09/09/2015 03:12:05 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_PLANEACION_PREVENTIVO_ListarVOtfPlaneacionPreventivolst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtfPlaneacionPreventivo As New DalOtfPlaneacionPreventivo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtfPlaneacionPreventivo.ListarVOtfPlaneacionPreventivolst(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTF_PLANEACION_PREVENTIVOLST según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>09/09/2015 03:12:05 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_PLANEACION_PREVENTIVO_ObtenerDatosPaginacionVOtfPlaneacionPreventivolst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtfPlaneacionPreventivo As New DalOtfPlaneacionPreventivo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtfPlaneacionPreventivo.ObtenerDatosPaginacionVOtfPlaneacionPreventivolst(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

#End Region

#Region "OTF_OPERARIO"
    ''' <summary>
    ''' Permite agregar un registro en la tabla OTF_OPERARIO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>10/09/2015 10:50:58 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_OPERARIO_InsertarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtfOperario) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtfOperario As New BllOtfOperario(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_INSERTAR)

            Return vlo_BllOtfOperario.InsertarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTF_OPERARIO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>10/09/2015 10:50:58 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_OPERARIO_BorrarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtfOperario) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtfOperario As New DalOtfOperario(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_BORRAR)

            Return vlo_DalOtfOperario.BorrarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTF_OPERARIO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>10/09/2015 10:50:58 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_OPERARIO_ModificarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtfOperario) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtfOperario As New BllOtfOperario(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_MODIFICAR)

            Return vlo_BllOtfOperario.ModificarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTF_OPERARIO según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>10/09/2015 10:50:58 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_OPERARIO_ListarRegistros(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtfOperario As New DalOtfOperario(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtfOperario.ListarRegistros(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTF_OPERARIO según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>10/09/2015 10:50:58 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_OPERARIO_ObtenerDatosPaginacionVOtfOperario(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtfOperario As New DalOtfOperario(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtfOperario.ObtenerDatosPaginacionVOtfOperario(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTF_OPERARIOLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>10/09/2015 10:50:58 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_OPERARIO_ListarRegistrosLista(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtfOperario As New BllOtfOperario(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_BllOtfOperario.ListarRegistrosLista(pvc_Usuario, pvc_Clave, pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTF_OPERARIOLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>10/09/2015 10:50:58 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_OPERARIO_ObtenerDatosPaginacionVOtfOperariolst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtfOperario As New DalOtfOperario(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtfOperario.ObtenerDatosPaginacionVOtfOperariolst(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene un registro de la tabla OTF_OPERARIO según el criterio indicado
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <returns>Entidad que representa la información obtenida al ejecutar la consulta</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>10/09/2015 10:50:58 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_OPERARIO_ObtenerRegistro(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String) As EntOtfOperario
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtfOperario As New DalOtfOperario(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtfOperario.ObtenerRegistro(pvc_Condicion)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

#End Region

#Region "OTF_UBICACION_FAVORITA"
    ''' <summary>
    ''' Permite agregar un registro en la tabla OTF_UBICACION_FAVORITA
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>06/10/2015 05:58:38 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_UBICACION_FAVORITA_InsertarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtfUbicacionFavorita) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtfUbicacionFavorita As New BllOtfUbicacionFavorita(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_INSERTAR)

            Return vlo_BllOtfUbicacionFavorita.InsertarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTF_UBICACION_FAVORITA
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>06/10/2015 05:58:38 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_UBICACION_FAVORITA_BorrarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtfUbicacionFavorita) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtfUbicacionFavorita As New DalOtfUbicacionFavorita(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_BORRAR)

            Return vlo_DalOtfUbicacionFavorita.BorrarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTF_UBICACION_FAVORITA
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>06/10/2015 05:58:38 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_UBICACION_FAVORITA_ModificarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtfUbicacionFavorita) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtfUbicacionFavorita As New DalOtfUbicacionFavorita(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_MODIFICAR)

            Return vlo_DalOtfUbicacionFavorita.ModificarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTF_UBICACION_FAVORITA según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>06/10/2015 05:58:38 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_UBICACION_FAVORITA_ListarRegistros(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtfUbicacionFavorita As New DalOtfUbicacionFavorita(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtfUbicacionFavorita.ListarRegistros(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTF_UBICACION_FAVORITALst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>06/10/2015 05:58:38 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_UBICACION_FAVORITA_ListarRegistrosLista(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtfUbicacionFavorita As New DalOtfUbicacionFavorita(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtfUbicacionFavorita.ListarRegistrosLista(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene un registro de la tabla OTF_UBICACION_FAVORITA según el criterio indicado
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <returns>Entidad que representa la información obtenida al ejecutar la consulta</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>06/10/2015 05:58:38 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_UBICACION_FAVORITA_ObtenerRegistro(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String) As EntOtfUbicacionFavorita
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtfUbicacionFavorita As New DalOtfUbicacionFavorita(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtfUbicacionFavorita.ObtenerRegistro(pvc_Condicion)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTF_UBICACION_FAVORITA según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>06/10/2015 05:58:38 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_UBICACION_FAVORITA_ListarVOtfUbicacionFavorita(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtfUbicacionFavorita As New DalOtfUbicacionFavorita(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtfUbicacionFavorita.ListarVOtfUbicacionFavorita(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTF_UBICACION_FAVORITA según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>06/10/2015 05:58:38 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_UBICACION_FAVORITA_ObtenerDatosPaginacionVOtfUbicacionFavorita(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtfUbicacionFavorita As New DalOtfUbicacionFavorita(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtfUbicacionFavorita.ObtenerDatosPaginacionVOtfUbicacionFavorita(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTF_UBICACION_FAVORITALST según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>06/10/2015 05:58:38 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_UBICACION_FAVORITA_ListarVOtfUbicacionFavoritalst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtfUbicacionFavorita As New DalOtfUbicacionFavorita(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtfUbicacionFavorita.ListarVOtfUbicacionFavoritalst(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTF_UBICACION_FAVORITALST según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>06/10/2015 05:58:38 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_UBICACION_FAVORITA_ObtenerDatosPaginacionVOtfUbicacionFavoritalst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtfUbicacionFavorita As New DalOtfUbicacionFavorita(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtfUbicacionFavorita.ObtenerDatosPaginacionVOtfUbicacionFavoritalst(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

#End Region

#Region "OTT_ADJUNTO_ORDEN_TRABAJO"

    ''' <summary>
    ''' Permite modificar un dataset en la tabla OTT_ORDN_TRAB_DEC_INICIAL, y modificar registro en ott_desicion_inicial
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Carlos Gómez Ondoy</author>
    ''' <creationDate>04/04/2016</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ADJUNTO_ORDEN_TRABAJO_ActualizarExpedienteTecnico(pvc_Usuario As String, pvc_Clave As String, pvo_DsAdjuntoOrdenTrabajo As Data.DataSet) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttAdjuntoOrdenTrabajo As New BllOttAdjuntoOrdenTrabajo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_INSERTAR)

            Return vlo_BllOttAdjuntoOrdenTrabajo.ActualizarExpedienteTecnico(pvo_DsAdjuntoOrdenTrabajo)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Ejecuta la función FN_OT_VERSION_ANTEPROYECTO
    ''' </summary>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>16/03/2016 04:38:19 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ANTEPROYECTO_ObtenerFnOtVersionAnteproyecto(pvc_Usuario As String, pvc_Clave As String, pvn_IdUbicacion As Integer, pvc_IdOrdentrabajo As String) As Double
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttAnteproyecto As New DalOttAnteproyecto(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttAnteproyecto.ObtenerFnOtVersionAnteproyecto(pvn_IdUbicacion, pvc_IdOrdentrabajo)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite agregar un registro en la tabla OTT_ADJUNTO_ORDEN_TRABAJO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>25/11/2015 04:13:29 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ADJUNTO_ORDEN_TRABAJO_InsertarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttAdjuntoOrdenTrabajo) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttAdjuntoOrdenTrabajo As New DalOttAdjuntoOrdenTrabajo(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_INSERTAR)

            Return vlo_DalOttAdjuntoOrdenTrabajo.InsertarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTT_ADJUNTO_ORDEN_TRABAJO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>25/11/2015 04:13:29 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ADJUNTO_ORDEN_TRABAJO_BorrarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttAdjuntoOrdenTrabajo) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttAdjuntoOrdenTrabajo As New DalOttAdjuntoOrdenTrabajo(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_BORRAR)

            Return vlo_DalOttAdjuntoOrdenTrabajo.BorrarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTT_ADJUNTO_ORDEN_TRABAJO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>25/11/2015 04:13:29 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ADJUNTO_ORDEN_TRABAJO_ModificarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttAdjuntoOrdenTrabajo) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttAdjuntoOrdenTrabajo As New DalOttAdjuntoOrdenTrabajo(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_MODIFICAR)

            Return vlo_DalOttAdjuntoOrdenTrabajo.ModificarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTT_ADJUNTO_ORDEN_TRABAJO según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>25/11/2015 04:13:29 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ADJUNTO_ORDEN_TRABAJO_ListarRegistros(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttAdjuntoOrdenTrabajo As New DalOttAdjuntoOrdenTrabajo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttAdjuntoOrdenTrabajo.ListarRegistros(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTT_ADJUNTO_ORDEN_TRABAJOLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>25/11/2015 04:13:29 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ADJUNTO_ORDEN_TRABAJO_ListarRegistrosLista(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttAdjuntoOrdenTrabajo As New DalOttAdjuntoOrdenTrabajo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttAdjuntoOrdenTrabajo.ListarRegistrosLista(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene un registro de la tabla OTT_ADJUNTO_ORDEN_TRABAJO según el criterio indicado
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <returns>Entidad que representa la información obtenida al ejecutar la consulta</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>25/11/2015 04:13:29 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ADJUNTO_ORDEN_TRABAJO_ObtenerRegistro(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String) As EntOttAdjuntoOrdenTrabajo
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttAdjuntoOrdenTrabajo As New DalOttAdjuntoOrdenTrabajo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttAdjuntoOrdenTrabajo.ObtenerRegistro(pvc_Condicion)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTTH_ADJUNTO_ORDEN_TRABAJO según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>25/11/2015 04:13:29 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ADJUNTO_ORDEN_TRABAJO_ListarVOtthAdjuntoOrdenTrabajo(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttAdjuntoOrdenTrabajo As New DalOttAdjuntoOrdenTrabajo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttAdjuntoOrdenTrabajo.ListarVOtthAdjuntoOrdenTrabajo(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTTH_ADJUNTO_ORDEN_TRABAJO según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>25/11/2015 04:13:29 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ADJUNTO_ORDEN_TRABAJO_ObtenerDatosPaginacionVOtthAdjuntoOrdenTrabajo(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttAdjuntoOrdenTrabajo As New DalOttAdjuntoOrdenTrabajo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttAdjuntoOrdenTrabajo.ObtenerDatosPaginacionVOtthAdjuntoOrdenTrabajo(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTT_ADJUNTO_ORDEN_TRABAJO según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>26/11/2015 09:03:26 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ADJUNTO_ORDEN_TRABAJO_ListarVOttAdjuntoOrdenTrabajo(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttAdjuntoOrdenTrabajo As New DalOttAdjuntoOrdenTrabajo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttAdjuntoOrdenTrabajo.ListarVOttAdjuntoOrdenTrabajo(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTT_ADJUNTO_ORDEN_TRABAJO según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>26/11/2015 09:03:26 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ADJUNTO_ORDEN_TRABAJO_ObtenerDatosPaginacionVOttAdjuntoOrdenTrabajo(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttAdjuntoOrdenTrabajo As New DalOttAdjuntoOrdenTrabajo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttAdjuntoOrdenTrabajo.ObtenerDatosPaginacionVOttAdjuntoOrdenTrabajo(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTT_ADJUNTO_ORDEN_TRABAJOLST según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>26/11/2015 09:03:26 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ADJUNTO_ORDEN_TRABAJO_ListarVOttAdjuntoOrdenTrabajolst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttAdjuntoOrdenTrabajo As New DalOttAdjuntoOrdenTrabajo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttAdjuntoOrdenTrabajo.ListarVOttAdjuntoOrdenTrabajolst(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTT_ADJUNTO_ORDEN_TRABAJOLST según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>26/11/2015 09:03:26 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ADJUNTO_ORDEN_TRABAJO_ObtenerDatosPaginacionVOttAdjuntoOrdenTrabajolst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttAdjuntoOrdenTrabajo As New DalOttAdjuntoOrdenTrabajo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttAdjuntoOrdenTrabajo.ObtenerDatosPaginacionVOttAdjuntoOrdenTrabajolst(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OT_ADJUNTO según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>15/03/2016 10:44:28 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ADJUNTO_ORDEN_TRABAJO_ListarVOtAdjunto(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttAdjuntoOrdenTrabajo As New DalOttAdjuntoOrdenTrabajo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttAdjuntoOrdenTrabajo.ListarVOtAdjunto(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OT_ADJUNTO según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>15/03/2016 10:44:28 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ADJUNTO_ORDEN_TRABAJO_ObtenerDatosPaginacionVOtAdjunto(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttAdjuntoOrdenTrabajo As New DalOttAdjuntoOrdenTrabajo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttAdjuntoOrdenTrabajo.ObtenerDatosPaginacionVOtAdjunto(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTT_ADJUNTO_LIGEROLST según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>18/05/2016 05:01:04 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ADJUNTO_ORDEN_TRABAJO_ListarVOttAdjuntoLigerolst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttAdjuntoOrdenTrabajo As New DalOttAdjuntoOrdenTrabajo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttAdjuntoOrdenTrabajo.ListarVOttAdjuntoLigerolst(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTT_ADJUNTO_LIGEROLST según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>18/05/2016 05:01:04 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ADJUNTO_ORDEN_TRABAJO_ObtenerDatosPaginacionVOttAdjuntoLigerolst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttAdjuntoOrdenTrabajo As New DalOttAdjuntoOrdenTrabajo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttAdjuntoOrdenTrabajo.ObtenerDatosPaginacionVOttAdjuntoLigerolst(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Ejecuta la función FN_OT_CANTIDAD_ADJUNTOS_ETAPA
    ''' </summary>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>14/09/2016 10:37:45 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ADJUNTO_ORDEN_TRABAJO_ObtenerFnOtCantidadAdjuntosEtapa(pvc_Usuario As String, pvc_Clave As String, pvn_IdUbicacion As Integer, pvc_IdOrdenTrabajo As String, pvn_IdEtapaOrdenTrabajo As Integer) As Double
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttAdjuntoOrdenTrabajo As New DalOttAdjuntoOrdenTrabajo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttAdjuntoOrdenTrabajo.ObtenerFnOtCantidadAdjuntosEtapa(pvn_IdUbicacion, pvc_IdOrdenTrabajo, pvn_IdEtapaOrdenTrabajo)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

#End Region

#Region "OTT_ORDEN_TRABAJO"

    ''' <summary>
    ''' Obtiene los registros de la vista V_OT_UNION_PRE_TRANS_HIST según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>26/04/2016 04:27:52 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ORDEN_TRABAJO_ListarVOtUnionPreTransHist(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttOrdenTrabajo As New DalOttOrdenTrabajo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttOrdenTrabajo.ListarVOtUnionPreTransHist(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OT_UNION_PRE_TRANS_HIST según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>26/04/2016 04:27:52 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ORDEN_TRABAJO_ObtenerDatosPaginacionVOtUnionPreTransHist(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttOrdenTrabajo As New DalOttOrdenTrabajo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttOrdenTrabajo.ObtenerDatosPaginacionVOtUnionPreTransHist(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite agregar un registro en la tabla OTF_REVISION_ORDEN_TRABAJ, y enviar un correo de notificación
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns></returns>
    ''' <remarks></remarks>
    ''' <author>Carlos Gómez Ondoy</author>
    ''' <creationDate>08/09/2015</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_REVISION_ORDEN_TRABAJ_InsertarRevisionEnvioCorreo(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttRevisionOrdenTrabaj, pvn_NumeroEmpleado As Integer, pvc_Descripcion As String, pvc_Motivo As String, pvo_FechaHoraSolicita As Date) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttRevisionOrdenTrabaj As New BllOttRevisionOrdenTrabaj(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_INSERTAR)

            Return vlo_BllOttRevisionOrdenTrabaj.InsertarRevisionEnvioCorreo(pvo_Registro, pvn_NumeroEmpleado, pvc_Descripcion, pvc_Motivo, pvo_FechaHoraSolicita)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' 
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <returns></returns>
    ''' <remarks></remarks>
    ''' <author>Carlos Gómez Ondoy</author>
    ''' <creationDate>19/10/2016</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ORDEN_TRABAJO_InsertarOrdenTrabajoEnPDAGO(pvc_Usuario As String, pvc_Clave As String, pvc_DesActividad As String, pvn_Categoria As Integer, pvn_OtMadre As Integer) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttOrdenTrabajo As New BllOttOrdenTrabajo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_INSERTAR)

            Return vlo_BllOttOrdenTrabajo.InsertarOrdenTrabajoEnPDAGO(pvc_DesActividad, pvn_Categoria, pvn_OtMadre)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' modificacion de la orden y insercon de trazabilidad
    ''' </summary>
    ''' <param name="pvc_Usuario"></param>
    ''' <param name="pvc_Clave"></param>
    ''' <param name="pvo_Registro"></param>
    ''' <param name="pvn_NumeroEmpleado"></param>
    ''' <param name="pvc_Descripcion"></param>
    ''' <param name="pvc_Motivo"></param>
    ''' <param name="pvo_FechaHoraSolicita"></param>
    ''' <returns></returns>
    ''' <remarks></remarks>
    <WebMethod()> _
    Public Function OTT_ORDEN_TRABAJO_EnviarParaRecibidoConforme(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttOrdenTrabajo, pvc_Descripcion As String, pvn_NumEmpleado As Integer) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttOrdenTrabajo As New BllOttOrdenTrabajo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_INSERTAR)

            Return vlo_BllOttOrdenTrabajo.EnviarParaRecibidoConforme(pvo_Registro, pvc_Descripcion, pvn_NumEmpleado)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Metodo encargado de retorna el resultado de la revision del presupuesto por parte del  coordinador
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <param name="pvb_Aprobar"></param>
    ''' <param name="pvc_justificacion">justificación de usuario</param>
    ''' <param name="pvc_UserName">identificacion de usuario que esta realizando la validacion</param>
    ''' <returns></returns>
    ''' <remarks></remarks>
    ''' <author>Carlos Gómez Ondoy</author>
    ''' <creationDate>07/04/2016</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ORDEN_TRABAJO_AprobacionPresupuestoCoordinador(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttOrdenTrabajo, pvb_Aprobar As Boolean, pvc_justificacion As String, pvc_UserName As String) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttOrdenTrabajo As New BllOttOrdenTrabajo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_INSERTAR)

            Return vlo_BllOttOrdenTrabajo.AprobacionPresupuestoCoordinador(pvo_Registro, pvb_Aprobar, pvc_justificacion, pvc_UserName)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Metodo encargado de retorna el resultado de la revision del presupuesto por parte de la jefatura
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <param name="pvb_Aprobar"></param>
    ''' <param name="pvc_justificacion">justificación de usuario</param>
    ''' <param name="pvc_UserName">identificacion de usuario que esta realizando la validacion</param>
    ''' <returns></returns>
    ''' <remarks></remarks>
    ''' <author>Carlos Gómez Ondoy</author>
    ''' <creationDate>08/04/2016</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ORDEN_TRABAJO_AprobacionPresupuestoJefatura(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttOrdenTrabajo, pvo_Adjunto As EntOttAdjuntoOrdenTrabajo, pvo_Informe As EntOttInformePresupuesto, pvb_Aprobar As Boolean, pvc_justificacion As String, pvc_UserName As String) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttOrdenTrabajo As New BllOttOrdenTrabajo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_INSERTAR)

            Return vlo_BllOttOrdenTrabajo.AprobacionPresupuestoJefatura(pvo_Registro, pvo_Adjunto, pvo_Informe, pvb_Aprobar, pvc_justificacion, pvc_UserName)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Metodo encargado de retorna el resultado de la validacion de oficios
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <param name="pvb_Gestionar"></param>
    ''' <param name="pvc_justificacion">justificación de usuario</param>
    ''' <param name="pvc_UserName">identificacion de usuario que esta realizando la validacion</param>
    ''' <returns></returns>
    ''' <remarks></remarks>
    ''' <author>Carlos Gómez Ondoy</author>
    ''' <creationDate>29/02/2016</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ORDEN_TRABAJO_ValidaOficio(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttOrdenTrabajo, pvb_Gestionar As Boolean, pvc_justificacion As String, pvc_UserName As String) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttOrdenTrabajo As New BllOttOrdenTrabajo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_INSERTAR)

            Return vlo_BllOttOrdenTrabajo.OTT_ORDEN_TRABAJO_ValidaOficio(pvo_Registro, pvb_Gestionar, pvc_justificacion, pvc_UserName)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' se encarga de actualizar el estado de la oreden, y actualizar los registros de operario OT, y y tiempo
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <param name="pvd_FechaFinalizacion"></param>
    ''' <param name="pvn_TiempoInvertido"></param>
    ''' <param name="pvn_UnidadTiempo"></param>
    ''' <returns></returns>
    ''' <remarks></remarks>
    ''' <author>Carlos Gómez Ondoy</author>
    ''' <creationDate>03/02/2016</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ORDEN_TRABAJO_EnviarParaRecibidoConformeActualizacionOperarios(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttOrdenTrabajo, pvd_FechaFinalizacion As DateTime, pvn_TiempoInvertido As Integer, pvn_UnidadTiempo As Integer, pvb_CambiaEstado As Boolean, pvc_UserName As String, pvn_NumEmpleado As Integer) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttOrdenTrabajo As New BllOttOrdenTrabajo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_INSERTAR)

            Return vlo_BllOttOrdenTrabajo.EnviarParaRecibidoConformeActualizacionOperarios(pvo_Registro, pvd_FechaFinalizacion, pvn_TiempoInvertido, pvn_UnidadTiempo, pvb_CambiaEstado, pvc_UserName, pvn_NumEmpleado)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite agregar un registro en la tabla OTT_ORDEN_TRABAJO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>25/11/2015 04:13:29 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ORDEN_TRABAJO_InsertarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttOrdenTrabajo) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttOrdenTrabajo As New BllOttOrdenTrabajo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_INSERTAR)

            Return vlo_BllOttOrdenTrabajo.InsertarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite agregar un registro en la tabla OTT_ORDEN_TRABAJO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Carlos Gomez Ondoy</author>
    ''' <creationDate>04/12/2015</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ORDEN_TRABAJO_InsertarOrdenTrabajoHija(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttOrdenTrabajo) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttOrdenTrabajo As New BllOttOrdenTrabajo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_INSERTAR)

            Return vlo_BllOttOrdenTrabajo.InsertarOrdenTrabajoHija(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite agregar registros en las tablas OTF_ORDEN_TRABAJO, OTM_ACTIVIDAD
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <param name="pvo_DsAdjunto">Dataset con los archivos adjuntos a la orden</param>
    ''' <returns></returns>
    ''' <remarks></remarks>
    ''' <author>Carlos Gómez Ondoy</author>
    ''' <creationDate>02/09/2015</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ORDEN_TRABAJO_InsertarOrdenTrabajoConAdjuntos(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttOrdenTrabajo, pvo_DsAdjunto As Data.DataSet, pvn_IdTipoDoc As Integer, pvn_IdEtapaOrdenTrabajo As Integer, pvc_Descripcion As String) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttOrdenTrabajo As New BllOttOrdenTrabajo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_INSERTAR)

            Return vlo_BllOttOrdenTrabajo.InsertarOrdenTrabajoConAdjuntos(pvo_Registro, pvo_DsAdjunto, pvn_IdTipoDoc, pvn_IdEtapaOrdenTrabajo, pvc_Descripcion)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite agregar registros en las tablas OTF_ORDEN_TRABAJO, OTM_ACTIVIDAD
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <param name="pvo_DsAdjunto">Dataset con los archivos adjuntos a la orden</param>
    ''' <returns></returns>
    ''' <remarks></remarks>
    ''' <author>Carlos Gómez Ondoy</author>
    ''' <creationDate>02/09/2015</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ORDEN_TRABAJO_InsertarOrdenTrabajoConAdjuntosCadena(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttOrdenTrabajo, pvo_DsAdjunto As Data.DataSet, pvn_IdTipoDoc As Integer, pvn_IdEtapaOrdenTrabajo As Integer, pvc_Descripcion As String) As String
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttOrdenTrabajo As New BllOttOrdenTrabajo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_INSERTAR)

            Return vlo_BllOttOrdenTrabajo.InsertarOrdenTrabajoConAdjuntosCadena(pvo_Registro, pvo_DsAdjunto, pvn_IdTipoDoc, pvn_IdEtapaOrdenTrabajo, pvc_Descripcion)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTT_ORDEN_TRABAJO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>25/11/2015 04:13:29 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ORDEN_TRABAJO_BorrarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttOrdenTrabajo) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttOrdenTrabajo As New BllOttOrdenTrabajo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_BORRAR)

            Return vlo_BllOttOrdenTrabajo.BorrarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTF_ORDEN_TRABAJO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Carlos Gómez Ondoy</author>
    ''' <creationDate>31/08/2015 </creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ORDEN_TRABAJO_BorradoLogico(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttOrdenTrabajo) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttOrdenTrabajo As New BllOttOrdenTrabajo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_MODIFICAR)

            Return vlo_BllOttOrdenTrabajo.BorradoLogico(pvo_Registro)

        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTT_ORDEN_TRABAJO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>25/11/2015 04:13:29 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ORDEN_TRABAJO_ModificarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttOrdenTrabajo) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttOrdenTrabajo As New DalOttOrdenTrabajo(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_MODIFICAR)

            Return vlo_DalOttOrdenTrabajo.ModificarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' 
    ''' </summary>
    ''' <param name="pvc_Usuario"></param>
    ''' <param name="pvc_Clave"></param>
    ''' <param name="pvo_Registro"></param>
    ''' <returns></returns>
    ''' <remarks></remarks>
    ''' <author>Carlos Andrés Gómez Ondoy</author>
    ''' <creationDate>02/11/2016</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ORDEN_TRABAJO_ModificarRegistroPDAGO(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttOrdenTrabajo) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttOrdenTrabajo As New BllOttOrdenTrabajo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_MODIFICAR)

            Return vlo_BllOttOrdenTrabajo.ModificarRegistroPDAGO(pvo_Registro)

        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite modificar un registro en la tabla OTT_ORDEN_TRABAJO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <param name="pvo_DsAdjunto">Dataset con los archivos adjuntos a la orden</param>
    ''' <returns></returns>
    ''' <remarks></remarks>
    ''' <author>Carlos Gómez Ondoy</author>
    ''' <creationDate>31/08/2015 10:11:52 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ORDEN_TRABAJO_ModificarOrdenTrabajoConAdjuntos(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttOrdenTrabajo, pvo_DsAdjunto As Data.DataSet, pvn_IdTipoDoc As Integer, pvn_IdEtapaOrdenTrabajo As Integer, pvc_Descripcion As String) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttOrdenTrabajo As New BllOttOrdenTrabajo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_INSERTAR)

            Return vlo_BllOttOrdenTrabajo.ModificarOrdenTrabajoConAdjuntos(pvo_Registro, pvo_DsAdjunto, pvn_IdTipoDoc, pvn_IdEtapaOrdenTrabajo, pvc_Descripcion)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite modificar un registro en la tabla OTT_ORDEN_TRABAJO, e insertar trazabilidad
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns></returns>
    ''' <remarks></remarks>
    ''' <author>Carlos Gómez Ondoy</author>
    ''' <creationDate>04/03/2016</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ORDEN_TRABAJO_DenegacionOrdenTrabajoHijaTrazabilidadInterna(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttOrdenTrabajo, pvc_Descripcion As String, pvn_NumEmpleado As Integer) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttOrdenTrabajo As New BllOttOrdenTrabajo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_INSERTAR)

            Return vlo_BllOttOrdenTrabajo.DenegacionOrdenTrabajoHijaTrazabilidadInterna(pvo_Registro, pvc_Descripcion, pvn_NumEmpleado)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite modificar un registro en la tabla OTT_ORDEN_TRABAJO, e insertar trazabilidad
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns></returns>
    ''' <remarks></remarks>
    ''' <author>Carlos Gómez Ondoy</author>
    ''' <creationDate>14/03/2016</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ORDEN_TRABAJO_RevisionAnteProyectoUsuario(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttOrdenTrabajo, pvc_Descripcion As String, pvn_NumEmpleado As Integer) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttOrdenTrabajo As New BllOttOrdenTrabajo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_INSERTAR)

            Return vlo_BllOttOrdenTrabajo.RevisionAnteProyectoUsuario(pvo_Registro, pvc_Descripcion, pvn_NumEmpleado)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite modificar un registro en la tabla OTT_ORDEN_TRABAJO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns></returns>
    ''' <remarks></remarks>
    ''' <author>Carlos Gómez Ondoy</author>
    ''' <creationDate>15/03/2016</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ORDEN_TRABAJO_ModificarRegistroRevisionAnteProyectoUsuarioAprobacion(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttOrdenTrabajo, pvc_UserName As String) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttOrdenTrabajo As New BllOttOrdenTrabajo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_INSERTAR)

            Return vlo_BllOttOrdenTrabajo.RevisionAnteProyectoUsuarioAprobacion(pvo_Registro, pvc_UserName)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite modificar un registro en la tabla OTT_ORDEN_TRABAJO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <param name="pvo_DsAdjunto">Dataset con los archivos adjuntos a la orden</param>
    ''' <returns></returns>
    ''' <remarks></remarks>
    ''' <author>Carlos Gómez Ondoy</author>
    ''' <creationDate>31/08/2015 10:11:52 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ORDEN_TRABAJO_RechazarOrdenTrabajo(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttOrdenTrabajo, pvn_idMotivoRechazo As Integer, pvn_NumEmpleado As Integer) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttOrdenTrabajo As New BllOttOrdenTrabajo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_INSERTAR)

            Return vlo_BllOttOrdenTrabajo.RechazarOrdenTrabajo(pvo_Registro, pvn_idMotivoRechazo, pvn_NumEmpleado)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTT_ORDEN_TRABAJO según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>25/11/2015 04:13:29 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ORDEN_TRABAJO_ListarRegistros(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttOrdenTrabajo As New DalOttOrdenTrabajo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttOrdenTrabajo.ListarRegistros(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTT_ORDEN_TRABAJOLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>25/11/2015 04:13:29 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ORDEN_TRABAJO_ListarRegistrosLista(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttOrdenTrabajo As New DalOttOrdenTrabajo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttOrdenTrabajo.ListarRegistrosLista(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Adjunta en el Bll los nombres del personal encargado de esta orden de trabajo separados por comás,
    ''' Este servicio solo se llamará para efectos del reporte.
    ''' </summary>
    ''' <param name="pvc_Usuario"></param>
    ''' <param name="pvc_Clave"></param>
    ''' <param name="pvc_Condicion"></param>
    ''' <param name="pvc_Orden"></param>
    ''' <param name="pvb_Paginar"></param>
    ''' <param name="pvn_NumeroPagina"></param>
    ''' <param name="pvn_TamanoPagina"></param>
    ''' <returns></returns>
    ''' <remarks></remarks>
    ''' <author>César Bermudez G</author>
    ''' <creationDate>05/04/2016</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ORDEN_TRABAJO_ListarRegistrosListaBoleta(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttOrdenTrabajo As New BllOttOrdenTrabajo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_BllOttOrdenTrabajo.ListarRegistrosLista(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene un registro de la tabla OTT_ORDEN_TRABAJO según el criterio indicado
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <returns>Entidad que representa la información obtenida al ejecutar la consulta</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>25/11/2015 04:13:29 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ORDEN_TRABAJO_ObtenerRegistro(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String) As EntOttOrdenTrabajo
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttOrdenTrabajo As New DalOttOrdenTrabajo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttOrdenTrabajo.ObtenerRegistro(pvc_Condicion)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene un registro de la vista V_OTT_ORDEN_TRABAJOLst según el criterio indicado
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <returns>Entidad VOttOrdenTrabajoLst</returns>
    ''' <author>César Bermudez G</author>
    ''' <creationDate>08/03/2016</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ORDEN_TRABAJO_ObtenerRegistroConsulta(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String) As EntOttOrdenTrabajo
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttOrdenTrabajo As New DalOttOrdenTrabajo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttOrdenTrabajo.ObtenerRegistroConsulta(pvc_Condicion)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTTH_ORDEN_TRABAJO según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>25/11/2015 04:13:29 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ORDEN_TRABAJO_ListarVOtthOrdenTrabajo(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttOrdenTrabajo As New DalOttOrdenTrabajo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttOrdenTrabajo.ListarVOtthOrdenTrabajo(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTTH_ORDEN_TRABAJO según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>25/11/2015 04:13:29 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ORDEN_TRABAJO_ObtenerDatosPaginacionVOtthOrdenTrabajo(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttOrdenTrabajo As New DalOttOrdenTrabajo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttOrdenTrabajo.ObtenerDatosPaginacionVOtthOrdenTrabajo(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTT_ORDEN_TRABAJO según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>26/11/2015 09:03:26 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ORDEN_TRABAJO_ObtenerDatosPaginacionVOttOrdenTrabajo(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttOrdenTrabajo As New DalOttOrdenTrabajo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttOrdenTrabajo.ObtenerDatosPaginacionVOttOrdenTrabajo(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTT_ORDEN_TRABAJOLST según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>26/11/2015 09:03:26 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ORDEN_TRABAJO_ObtenerDatosPaginacionVOttOrdenTrabajolst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttOrdenTrabajo As New DalOttOrdenTrabajo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttOrdenTrabajo.ObtenerDatosPaginacionVOttOrdenTrabajolst(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite obtener el nombre del encargado del tramite para una orden de trabajo
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_EstadoOrden">Estado a procesar</param>
    ''' <param name="pvc_CodigoSIRH"></param>
    ''' <param name="pvc_IdSectorTaller"></param>
    ''' <param name="pvc_NombreSolicitante"></param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Mauricio Salas Chaves</author>
    ''' <creationDate>21/09/2015</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ORDEN_TRABAJO_CargarEncargadoTramite(pvc_Usuario As String, pvc_Clave As String, ByVal pvc_EstadoOrden As String, pvc_CodigoSIRH As String, pvc_IdSectorTaller As String, pvc_NombreSolicitante As String) As String
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttOrdenTrabajo As New BllOttOrdenTrabajo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_BllOttOrdenTrabajo.ObtenerEncargadoTramite(pvc_EstadoOrden, pvc_CodigoSIRH, pvc_IdSectorTaller, pvc_NombreSolicitante)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite agregar un registro en la tabla OTF_ORDEN_TRABAJO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>31/08/2015 10:11:52 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ORDEN_TRABAJO_ListarVOttOstConFichalst(pvc_Usuario As String, pvc_Clave As String) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttOrdenTrabajo As New BllOttOrdenTrabajo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_BllOttOrdenTrabajo.ProcesoLiquidacionOrdenDeTrabajo()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite modificar un registro en la tabla OTF_ORDEN_TRABAJO y enviar notificacion email
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Carlos Gomez Ondoy</author>
    ''' <creationDate>01/10/2015</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ORDEN_TRABAJO_RecibidoConformeSolicitante(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttOrdenTrabajo, pvn_NumEmpleado As Integer) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttOrdenTrabajo As New BllOttOrdenTrabajo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_BORRAR)

            Return vlo_BllOttOrdenTrabajo.RecibidoConformeSolicitante(pvo_Registro, pvn_NumEmpleado)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function


    <WebMethod()> _
    Public Function OTT_ORDEN_TRABAJO_ActualizaEstadoConforme(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_OrdenTrabajo As EntOttOrdenTrabajo, pvo_Trazabilidad As EntOttTrazabilidadProceso) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttOrdenTrabajo As New BllOttOrdenTrabajo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_MODIFICAR)

            Return vlo_BllOttOrdenTrabajo.ActualizaEstadoConforme(pvo_OrdenTrabajo, pvo_Trazabilidad)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function


    ''' <summary>
    ''' Permite agregar un registro en la tabla OTF_ORDEN_TRABAJO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>31/08/2015 10:11:52 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ORDEN_TRABAJO_ModificarNumeroOT(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttOrdenTrabajo) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttOrdenTrabajo As New BllOttOrdenTrabajo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_INSERTAR)

            Return vlo_BllOttOrdenTrabajo.ModificarNumeroOT(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite agregar registros en las tablas OTF_ORDEN_TRABAJO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_UsuarioSesion"></param>
    ''' <param name="pvn_Anno"></param>
    ''' <returns></returns>
    ''' <remarks></remarks>
    ''' <author>Carlos Gómez Ondoy</author>
    ''' <creationDate>11/09/2015</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ORDEN_TRABAJO_InsertarOrdenTrabajoPreventivo(pvc_Usuario As String, pvc_Clave As String, pvc_UsuarioSesion As String, pvn_Anno As Integer) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttOrdenTrabajo As New BllOttOrdenTrabajo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_INSERTAR)

            Return vlo_BllOttOrdenTrabajo.InsertarOrdenTrabajoPreventivo(pvc_UsuarioSesion, pvn_Anno)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OT_UNION_HISTORIC_TRANSAC según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>08/12/2015 03:42:08 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ORDEN_TRABAJO_ListarVOtUnionHistoricTransac(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttOrdenTrabajo As New DalOttOrdenTrabajo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttOrdenTrabajo.ListarVOtUnionHistoricTransac(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OT_UNION_HISTORIC_TRANSAC según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>08/12/2015 03:42:08 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ORDEN_TRABAJO_ObtenerDatosPaginacionVOtUnionHistoricTransac(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttOrdenTrabajo As New DalOttOrdenTrabajo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttOrdenTrabajo.ObtenerDatosPaginacionVOtUnionHistoricTransac(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene un registro de la tabla OTH_ORDEN_TRABAJO según el criterio indicado
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <returns>Entidad que representa la información obtenida al ejecutar la consulta</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>09/12/2015 03:34:22 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTH_ORDEN_TRABAJO_ObtenerRegistro(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String) As EntOthOrdenTrabajo
        Return New EntOthOrdenTrabajo
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OT_RECHAZADAS según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>01/12/2015 03:09:58 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ORDEN_TRABAJO_ListarVOtRechazadas(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttOrdenTrabajo As New BllOttOrdenTrabajo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_BllOttOrdenTrabajo.ListarVOtRechazadas(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OT_RECHAZADAS según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>01/12/2015 03:09:58 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ORDEN_TRABAJO_ObtenerDatosPaginacionVOtRechazadas(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttOrdenTrabajo As New DalOttOrdenTrabajo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOttOrdenTrabajo.ObtenerDatosPaginacionVOtRechazadas(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Ejecuta el proceso para dar visto bueno al rechazo de una orden
    ''' </summary>
    ''' <param name="pvc_Usuario"></param>
    ''' <param name="pvc_Clave"></param>
    ''' <param name="pvn_IdOrdenTrabajo"></param>
    ''' <param name="pvc_NumEmpleado"></param>
    ''' <param name="pvc_MotivoRechazo"></param>
    ''' <returns></returns>
    ''' <remarks></remarks>
    ''' <author>César Bermudez García</author>
    ''' <creationDate>2/12/2015</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ORDEN_TRABAJO_VistoBuenoAlMotivoDeRechazo(pvc_Usuario As String, pvc_Clave As String, pvn_IdOrdenTrabajo As String, pvn_IdUbicacion As Integer, pvc_NumEmpleado As String, pvc_MotivoRechazo As String, pvc_UsuarioActual As String) As Boolean
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttOrdenTrabajo As New BllOttOrdenTrabajo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)


            Return vlo_BllOttOrdenTrabajo.VistoBuenoRechazo(pvn_IdOrdenTrabajo, pvn_IdUbicacion, pvc_NumEmpleado, pvc_MotivoRechazo, pvc_UsuarioActual)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try

    End Function

    ''' <summary>
    ''' Ejecuta el proceso para denegar un rechazo a una orden de trabajo
    ''' </summary>
    ''' <param name="pvc_Usuario"></param>
    ''' <param name="pvc_Clave"></param>
    ''' <param name="pvn_IdOrdenTrabajo"></param>
    ''' <param name="pvc_NumEmpleado"></param>
    ''' <param name="pvc_MotivoRechazo"></param>
    ''' <returns></returns>
    ''' <remarks></remarks>
    ''' <author>César Bermudez García</author>
    ''' <creationDate>2/12/2015</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ORDEN_TRABAJO_DenegacionAlMotivoDeRechazo(pvc_Usuario As String, pvc_Clave As String, pvn_IdOrdenTrabajo As String, pvn_IdUbicacion As Integer, pvc_NumEmpleado As String, pvc_MotivoRechazo As String, pvc_UsuarioActual As String) As Boolean
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttOrdenTrabajo As New BllOttOrdenTrabajo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)


            Return vlo_BllOttOrdenTrabajo.DenegacionMotivoRechazo(pvn_IdOrdenTrabajo, pvn_IdUbicacion, pvc_NumEmpleado, pvc_MotivoRechazo, pvc_UsuarioActual)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try

    End Function

    ''' <summary>
    ''' Visto Bueno a la orden de trabajo hija
    ''' </summary>
    ''' <param name="pvc_Usuario"></param>
    ''' <param name="pvc_Clave"></param>
    ''' <param name="pvn_IdOrdenTrabajo"></param>
    ''' <param name="pvc_NumEmpleado"></param>
    ''' <param name="pvc_MotivoRechazo"></param>
    ''' <returns></returns>
    ''' <remarks></remarks>
    ''' <author>César Bermudez García</author>
    ''' <creationDate>4/12/2015</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ORDEN_TRABAJO_VistoBuenoOrdenTrabajoHija(pvc_Usuario As String, pvc_Clave As String, pvn_IdOrdenTrabajo As String, pvc_NumEmpleado As String, pvc_MotivoRechazo As String) As Boolean
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttOrdenTrabajo As New BllOttOrdenTrabajo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)


            Return vlo_BllOttOrdenTrabajo.VistoBuenoRechazoOrdenTrabajoHija(pvn_IdOrdenTrabajo, pvc_NumEmpleado, pvc_MotivoRechazo)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try

    End Function

    ''' <summary>
    ''' Denegación a creación de la orden de trabajo hija
    ''' </summary>
    ''' <param name="pvc_Usuario"></param>
    ''' <param name="pvc_Clave"></param>
    ''' <param name="pvn_IdOrdenTrabajo"></param>
    ''' <param name="pvc_NumEmpleado"></param>
    ''' <param name="pvc_MotivoRechazo"></param>
    ''' <returns></returns>
    ''' <remarks></remarks>
    ''' <author>César Bermudez García</author>
    ''' <creationDate>4/12/2015</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ORDEN_TRABAJO_DenegacionOrdenTrabajoHija(pvc_Usuario As String, pvc_Clave As String, pvn_IdOrdenTrabajo As String, pvc_NumEmpleado As String, pvc_MotivoRechazo As String) As Boolean
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttOrdenTrabajo As New BllOttOrdenTrabajo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)


            Return vlo_BllOttOrdenTrabajo.DenegacionMotivoRechazoOrdenTrabajoHija(pvn_IdOrdenTrabajo, pvc_NumEmpleado, pvc_MotivoRechazo)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try

    End Function

    ''' <summary>
    ''' Ejecuta la función FN_OT_CONSULTA_LUGAR_TRABAJO
    ''' </summary>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>03/12/2015 10:55:38 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ORDEN_TRABAJO_ObtenerFnOtConsultaLugarTrabajo(pvc_Usuario As String, pvc_Clave As String, pvn_PvnIdcategoria As Double, pvn_PvnIdactividad As Double, pvn_PvnIdlugartrabajo As Double) As String
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttOrdenTrabajo As New DalOttOrdenTrabajo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOttOrdenTrabajo.ObtenerFnOtConsultaLugarTrabajo(pvn_PvnIdcategoria, pvn_PvnIdactividad, pvn_PvnIdlugartrabajo)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Valida la inclusion de categorias segun el periodo de cierre y devuelve la condición válida dependiendo del periodo de cierre y de las excepciones
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>César Bermúdez García</author>
    ''' <creationDate>21/01/2016</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ORDEN_TRABAJO_CategoriasPeriodoCierre(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_NumEmpleado As String) As String
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttOrdenTrabajo As New BllOttOrdenTrabajo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_BllOttOrdenTrabajo.ValidarCategoriasPeriodoCierre(pvc_Condicion, pvc_NumEmpleado)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OT_RESUMEN_OT según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>22/01/2016 09:19:16 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ORDEN_TRABAJO_ListarVOtResumenOt(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttOrdenTrabajo As New BllOttOrdenTrabajo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_BllOttOrdenTrabajo.ListarResumenOT(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    <WebMethod()> _
    Public Function OTT_ORDEN_TRABAJO_GuardarFinalizarPlanos(pvc_Usuario As String, pvc_Clave As String, pvo_EntOttOrdenTrabajo As EntOttOrdenTrabajo, pvo_DsAdjuntosInsertar As DataSet, pvo_DsAdjuntosBorrar As DataSet, pvb_Finalizar As Boolean) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttOrdenTrabajo As New BllOttOrdenTrabajo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_BllOttOrdenTrabajo.GuardarPlanos(pvo_EntOttOrdenTrabajo, pvo_DsAdjuntosInsertar, pvo_DsAdjuntosBorrar, pvb_Finalizar)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OT_RESPUESTAS_USUARIO según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>26/02/2016 09:14:11 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ORDEN_TRABAJO_ListarRespuestasPendientes(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttOrdenTrabajo As New BllOttOrdenTrabajo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_BllOttOrdenTrabajo.ListarRespuestasSolicitante(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OT_RESPUESTAS_USUARIO según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>26/02/2016 09:14:11 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ORDEN_TRABAJO_ObtenerDatosPaginacionRespuestasPendientes(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttOrdenTrabajo As New DalOttOrdenTrabajo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOttOrdenTrabajo.ObtenerDatosPaginacionRespuestaPendientes(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OT_UNION_ORDEN_PREORDEN según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>21/04/2016 01:55:23 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ORDEN_TRABAJO_ListarVOtUnionOrdenPreorden(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttOrdenTrabajo As New DalOttOrdenTrabajo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttOrdenTrabajo.ListarVOtUnionOrdenPreorden(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OT_UNION_ORDEN_PREORDEN según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>21/04/2016 01:55:23 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ORDEN_TRABAJO_ObtenerDatosPaginacionVOtUnionOrdenPreorden(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttOrdenTrabajo As New DalOttOrdenTrabajo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttOrdenTrabajo.ObtenerDatosPaginacionVOtUnionOrdenPreorden(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Guarda la entrega de diseño
    ''' </summary>
    ''' <author>Cesar Bermudez G</author>
    ''' <creationDate>17/03/2016</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ORDEN_TRABAJO_GuardarEntrega(pvc_Usuario As String, pvc_Clave As String, pvo_EntOttAdjuntoOrdenTrabajo As EntOttAdjuntoOrdenTrabajo, pvb_Enviar As Boolean) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttOrdenTrabajo As New BllOttOrdenTrabajo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_BllOttOrdenTrabajo.GuardarEntregaDis(pvo_EntOttAdjuntoOrdenTrabajo, pvb_Enviar)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTT_PARTIDAS_PERSUP según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>02/06/2016 12:07:56 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ORDEN_TRABAJO_ListarVOttPartidasPresup(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttOrdenTrabajo As New DalOttOrdenTrabajo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOttOrdenTrabajo.ListarVOttPartidasPresup(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTT_PARTIDAS_PERSUP según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>02/06/2016 12:07:56 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ORDEN_TRABAJO_ObtenerDatosPaginacionVOttPartidasPresup(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttOrdenTrabajo As New DalOttOrdenTrabajo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOttOrdenTrabajo.ObtenerDatosPaginacionVOttPartidasPresup(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OT_REPORTE_ORDEN_TRAB según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>18/07/2016 02:50:35 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ORDEN_TRABAJO_ListarVOtReporteOrdenTrab(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttOrdenTrabajo As New DalOttOrdenTrabajo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttOrdenTrabajo.ListarVOtReporteOrdenTrab(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OT_REPORTE_ORDEN_TRAB según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>18/07/2016 02:50:35 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ORDEN_TRABAJO_ObtenerDatosPaginacionVOtReporteOrdenTrab(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttOrdenTrabajo As New DalOttOrdenTrabajo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttOrdenTrabajo.ObtenerDatosPaginacionVOtReporteOrdenTrab(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OT_REPORTE_ORDEN_TRAB según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>18/07/2016 02:50:35 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ORDEN_TRABAJO_ListarVOtReporteOrdenTrabPersonalizado(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttOrdenTrabajo As New BllOttOrdenTrabajo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_BllOttOrdenTrabajo.ListarVOtReporteOrdenTrabPersonalizado(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OT_REVISION_SUPERVISOR según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>20/07/2016 10:57:28 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ORDEN_TRABAJO_ListarVOtRevisionSupervisor(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttOrdenTrabajo As New DalOttOrdenTrabajo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttOrdenTrabajo.ListarVOtRevisionSupervisor(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OT_REVISION_SUPERVISOR según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>20/07/2016 10:57:28 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ORDEN_TRABAJO_ObtenerDatosPaginacionVOtRevisionSupervisor(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttOrdenTrabajo As New DalOttOrdenTrabajo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttOrdenTrabajo.ObtenerDatosPaginacionVOtRevisionSupervisor(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OT_GESTION_SECTOR_TALLER según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>20/07/2016 11:27:42 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ORDEN_TRABAJO_ListarVOtGestionSectorTaller(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttOrdenTrabajo As New DalOttOrdenTrabajo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttOrdenTrabajo.ListarVOtGestionSectorTaller(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OT_GESTION_SECTOR_TALLER según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>20/07/2016 11:27:42 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ORDEN_TRABAJO_ObtenerDatosPaginacionVOtGestionSectorTaller(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttOrdenTrabajo As New DalOttOrdenTrabajo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttOrdenTrabajo.ObtenerDatosPaginacionVOtGestionSectorTaller(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OT_ORDEN_LIQUIDACION según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>04/08/2016 11:50:38 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ORDEN_TRABAJO_ListarVOtOrdenLiquidacion(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttOrdenTrabajo As New DalOttOrdenTrabajo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttOrdenTrabajo.ListarVOtOrdenLiquidacion(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OT_ORDEN_LIQUIDACION según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>04/08/2016 11:50:38 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ORDEN_TRABAJO_ObtenerDatosPaginacionVOtOrdenLiquidacion(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttOrdenTrabajo As New DalOttOrdenTrabajo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttOrdenTrabajo.ObtenerDatosPaginacionVOtOrdenLiquidacion(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

#End Region

#Region "OTT_REVISION_ORDEN_TRABAJ"
    ''' <summary>
    ''' Permite agregar un registro en la tabla OTT_REVISION_ORDEN_TRABAJ
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>25/11/2015 04:13:29 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_REVISION_ORDEN_TRABAJ_InsertarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttRevisionOrdenTrabaj) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttRevisionOrdenTrabaj As New DalOttRevisionOrdenTrabaj(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_INSERTAR)

            Return vlo_DalOttRevisionOrdenTrabaj.InsertarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTT_REVISION_ORDEN_TRABAJ
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>25/11/2015 04:13:29 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_REVISION_ORDEN_TRABAJ_BorrarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttRevisionOrdenTrabaj) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttRevisionOrdenTrabaj As New DalOttRevisionOrdenTrabaj(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_BORRAR)

            Return vlo_DalOttRevisionOrdenTrabaj.BorrarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTT_REVISION_ORDEN_TRABAJ
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>25/11/2015 04:13:29 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_REVISION_ORDEN_TRABAJ_ModificarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttRevisionOrdenTrabaj) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttRevisionOrdenTrabaj As New DalOttRevisionOrdenTrabaj(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_MODIFICAR)

            Return vlo_DalOttRevisionOrdenTrabaj.ModificarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTT_REVISION_ORDEN_TRABAJ según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>25/11/2015 04:13:29 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_REVISION_ORDEN_TRABAJ_ListarRegistros(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttRevisionOrdenTrabaj As New DalOttRevisionOrdenTrabaj(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttRevisionOrdenTrabaj.ListarRegistros(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTT_REVISION_ORDEN_TRABAJLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>25/11/2015 04:13:29 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_REVISION_ORDEN_TRABAJ_ListarRegistrosLista(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttRevisionOrdenTrabaj As New DalOttRevisionOrdenTrabaj(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttRevisionOrdenTrabaj.ListarRegistrosLista(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene un registro de la tabla OTT_REVISION_ORDEN_TRABAJ según el criterio indicado
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <returns>Entidad que representa la información obtenida al ejecutar la consulta</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>25/11/2015 04:13:29 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_REVISION_ORDEN_TRABAJ_ObtenerRegistro(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String) As EntOttRevisionOrdenTrabaj
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttRevisionOrdenTrabaj As New DalOttRevisionOrdenTrabaj(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttRevisionOrdenTrabaj.ObtenerRegistro(pvc_Condicion)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTTH_REVISION_ORDEN_TRABAJ según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>25/11/2015 04:13:29 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_REVISION_ORDEN_TRABAJ_ListarVOtthRevisionOrdenTrabaj(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttRevisionOrdenTrabaj As New DalOttRevisionOrdenTrabaj(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttRevisionOrdenTrabaj.ListarVOtthRevisionOrdenTrabaj(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTTH_REVISION_ORDEN_TRABAJ según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>25/11/2015 04:13:29 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_REVISION_ORDEN_TRABAJ_ObtenerDatosPaginacionVOtthRevisionOrdenTrabaj(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttRevisionOrdenTrabaj As New DalOttRevisionOrdenTrabaj(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttRevisionOrdenTrabaj.ObtenerDatosPaginacionVOtthRevisionOrdenTrabaj(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTT_REVISION_ORDEN_TRABAJ según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>26/11/2015 09:03:26 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_REVISION_ORDEN_TRABAJ_ListarVOttRevisionOrdenTrabaj(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttRevisionOrdenTrabaj As New DalOttRevisionOrdenTrabaj(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttRevisionOrdenTrabaj.ListarVOttRevisionOrdenTrabaj(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTT_REVISION_ORDEN_TRABAJ según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>26/11/2015 09:03:26 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_REVISION_ORDEN_TRABAJ_ObtenerDatosPaginacionVOttRevisionOrdenTrabaj(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttRevisionOrdenTrabaj As New DalOttRevisionOrdenTrabaj(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttRevisionOrdenTrabaj.ObtenerDatosPaginacionVOttRevisionOrdenTrabaj(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTT_REVISION_ORDEN_TRABAJLST según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>26/11/2015 09:03:26 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_REVISION_ORDEN_TRABAJ_ListarVOttRevisionOrdenTrabajlst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttRevisionOrdenTrabaj As New DalOttRevisionOrdenTrabaj(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttRevisionOrdenTrabaj.ListarVOttRevisionOrdenTrabajlst(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTT_REVISION_ORDEN_TRABAJLST según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>26/11/2015 09:03:26 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_REVISION_ORDEN_TRABAJ_ObtenerDatosPaginacionVOttRevisionOrdenTrabajlst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttRevisionOrdenTrabaj As New DalOttRevisionOrdenTrabaj(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttRevisionOrdenTrabaj.ObtenerDatosPaginacionVOttRevisionOrdenTrabajlst(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function


#End Region

#Region "OTT_TRAZABILIDAD_PROCESO"
    ''' <summary>
    ''' Permite agregar un registro en la tabla OTT_TRAZABILIDAD_PROCESO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>25/11/2015 04:13:29 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_TRAZABILIDAD_PROCESO_InsertarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttTrazabilidadProceso) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttTrazabilidadProceso As New DalOttTrazabilidadProceso(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_INSERTAR)

            Return vlo_DalOttTrazabilidadProceso.InsertarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTT_TRAZABILIDAD_PROCESO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>25/11/2015 04:13:29 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_TRAZABILIDAD_PROCESO_BorrarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttTrazabilidadProceso) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttTrazabilidadProceso As New DalOttTrazabilidadProceso(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_BORRAR)

            Return vlo_DalOttTrazabilidadProceso.BorrarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTT_TRAZABILIDAD_PROCESO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>25/11/2015 04:13:29 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_TRAZABILIDAD_PROCESO_ModificarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttTrazabilidadProceso) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttTrazabilidadProceso As New DalOttTrazabilidadProceso(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_MODIFICAR)

            Return vlo_DalOttTrazabilidadProceso.ModificarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTT_TRAZABILIDAD_PROCESO según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>25/11/2015 04:13:29 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_TRAZABILIDAD_PROCESO_ListarRegistros(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttTrazabilidadProceso As New DalOttTrazabilidadProceso(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttTrazabilidadProceso.ListarRegistros(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTT_TRAZABILIDAD_PROCESOLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>25/11/2015 04:13:29 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_TRAZABILIDAD_PROCESO_ListarRegistrosLista(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttTrazabilidadProceso As New DalOttTrazabilidadProceso(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttTrazabilidadProceso.ListarRegistrosLista(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTT_TRAZABILIDAD_PROCESOLst según el criterio y orden indicados, cargando información del responsable desde el BLL
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Carlos Gómez Ondoy</author>
    ''' <creationDate>11/02/2016</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_TRAZABILIDAD_PROCESO_ListarRegistrosListaPersonalizado(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttTrazabilidadProceso As New BllOttTrazabilidadProceso(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_INSERTAR)

            Return vlo_BllOttTrazabilidadProceso.ListarRegistrosListaPersonalizado(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTT_TRAZABILIDAD_PROCESOLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>25/11/2015 04:13:29 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTH_ORDEN_TRABAJO_ListarRegistrosLista(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttTrazabilidadProceso As New DalOttTrazabilidadProceso(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttTrazabilidadProceso.ListarRegistrosListaHistorico(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene un registro de la tabla OTT_TRAZABILIDAD_PROCESO según el criterio indicado
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <returns>Entidad que representa la información obtenida al ejecutar la consulta</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>25/11/2015 04:13:29 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_TRAZABILIDAD_PROCESO_ObtenerRegistro(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String) As EntOttTrazabilidadProceso
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttTrazabilidadProceso As New DalOttTrazabilidadProceso(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttTrazabilidadProceso.ObtenerRegistro(pvc_Condicion)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTTH_TRAZABILIDAD_PROCESO según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>25/11/2015 04:13:29 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_TRAZABILIDAD_PROCESO_ListarVOtthTrazabilidadProceso(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttTrazabilidadProceso As New DalOttTrazabilidadProceso(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttTrazabilidadProceso.ListarVOtthTrazabilidadProceso(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTTH_TRAZABILIDAD_PROCESO según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>25/11/2015 04:13:29 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_TRAZABILIDAD_PROCESO_ObtenerDatosPaginacionVOtthTrazabilidadProceso(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttTrazabilidadProceso As New DalOttTrazabilidadProceso(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttTrazabilidadProceso.ObtenerDatosPaginacionVOtthTrazabilidadProceso(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTT_TRAZABILIDAD_PROCESO según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>26/11/2015 09:03:26 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_TRAZABILIDAD_PROCESO_ListarVOttTrazabilidadProceso(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttTrazabilidadProceso As New DalOttTrazabilidadProceso(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttTrazabilidadProceso.ListarVOttTrazabilidadProceso(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTT_TRAZABILIDAD_PROCESO según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>26/11/2015 09:03:26 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_TRAZABILIDAD_PROCESO_ObtenerDatosPaginacionVOttTrazabilidadProceso(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttTrazabilidadProceso As New DalOttTrazabilidadProceso(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttTrazabilidadProceso.ObtenerDatosPaginacionVOttTrazabilidadProceso(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTT_TRAZABILIDAD_PROCESOLST según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>26/11/2015 09:03:26 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_TRAZABILIDAD_PROCESO_ListarVOttTrazabilidadProcesolst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttTrazabilidadProceso As New DalOttTrazabilidadProceso(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttTrazabilidadProceso.ListarVOttTrazabilidadProcesolst(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTT_TRAZABILIDAD_PROCESOLST según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>26/11/2015 09:03:26 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_TRAZABILIDAD_PROCESO_ObtenerDatosPaginacionVOttTrazabilidadProcesolst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttTrazabilidadProceso As New DalOttTrazabilidadProceso(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttTrazabilidadProceso.ObtenerDatosPaginacionVOttTrazabilidadProcesolst(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

#End Region

#Region "OTT_FICHA_TECNICA_GENERAL"
    ''' <summary>
    ''' Permite agregar un registro en la tabla OTT_FICHA_TECNICA_GENERAL
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>30/11/2015 09:29:10 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_FICHA_TECNICA_GENERAL_InsertarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttFichaTecnicaGeneral) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttFichaTecnicaGeneral As New BllOttFichaTecnicaGeneral(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_INSERTAR)

            Return vlo_BllOttFichaTecnicaGeneral.InsertarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTT_FICHA_TECNICA_GENERAL
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>30/11/2015 09:29:10 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_FICHA_TECNICA_GENERAL_BorrarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttFichaTecnicaGeneral) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttFichaTecnicaGeneral As New DalOttFichaTecnicaGeneral(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_BORRAR)

            Return vlo_DalOttFichaTecnicaGeneral.BorrarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTT_FICHA_TECNICA_GENERAL
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>30/11/2015 09:29:10 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_FICHA_TECNICA_GENERAL_ModificarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttFichaTecnicaGeneral) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttFichaTecnicaGeneral As New DalOttFichaTecnicaGeneral(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_MODIFICAR)

            Return vlo_DalOttFichaTecnicaGeneral.ModificarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTT_FICHA_TECNICA_GENERAL según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>30/11/2015 09:29:10 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_FICHA_TECNICA_GENERAL_ListarRegistros(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttFichaTecnicaGeneral As New DalOttFichaTecnicaGeneral(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttFichaTecnicaGeneral.ListarRegistros(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function


    ''' <summary>
    ''' Obtiene los registros de la vista V_OTT_FICHA_TECNICA_GENERALLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>30/11/2015 09:29:10 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_FICHA_TECNICA_GENERAL_ListarRegistrosLista(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttFichaTecnicaGeneral As New DalOttFichaTecnicaGeneral(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttFichaTecnicaGeneral.ListarRegistrosLista(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene un registro de la tabla OTT_FICHA_TECNICA_GENERAL según el criterio indicado
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <returns>Entidad que representa la información obtenida al ejecutar la consulta</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>30/11/2015 09:29:10 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_FICHA_TECNICA_GENERAL_ObtenerRegistro(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String) As EntOttFichaTecnicaGeneral
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttFichaTecnicaGeneral As New DalOttFichaTecnicaGeneral(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttFichaTecnicaGeneral.ObtenerRegistro(pvc_Condicion)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTTH_FICHA_TECNICA_GENERAL según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>30/11/2015 09:29:10 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_FICHA_TECNICA_GENERAL_ListarVOtthFichaTecnicaGeneral(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttFichaTecnicaGeneral As New DalOttFichaTecnicaGeneral(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttFichaTecnicaGeneral.ListarVOtthFichaTecnicaGeneral(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTTH_FICHA_TECNICA_GENERAL según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>30/11/2015 09:29:10 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_FICHA_TECNICA_GENERAL_ObtenerDatosPaginacionVOtthFichaTecnicaGeneral(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttFichaTecnicaGeneral As New DalOttFichaTecnicaGeneral(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttFichaTecnicaGeneral.ObtenerDatosPaginacionVOtthFichaTecnicaGeneral(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTT_FICHA_TECNICA_GENERAL según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>30/11/2015 09:29:10 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_FICHA_TECNICA_GENERAL_ListarVOttFichaTecnicaGeneral(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttFichaTecnicaGeneral As New DalOttFichaTecnicaGeneral(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttFichaTecnicaGeneral.ListarVOttFichaTecnicaGeneral(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTT_FICHA_TECNICA_GENERAL según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>30/11/2015 09:29:10 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_FICHA_TECNICA_GENERAL_ObtenerDatosPaginacionVOttFichaTecnicaGeneral(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttFichaTecnicaGeneral As New DalOttFichaTecnicaGeneral(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttFichaTecnicaGeneral.ObtenerDatosPaginacionVOttFichaTecnicaGeneral(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTT_FICHA_TECNICA_GENERALLST según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>30/11/2015 09:29:10 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_FICHA_TECNICA_GENERAL_ListarVOttFichaTecnicaGenerallst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttFichaTecnicaGeneral As New DalOttFichaTecnicaGeneral(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttFichaTecnicaGeneral.ListarVOttFichaTecnicaGenerallst(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTT_FICHA_TECNICA_GENERALLST según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>30/11/2015 09:29:10 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_FICHA_TECNICA_GENERAL_ObtenerDatosPaginacionVOttFichaTecnicaGenerallst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttFichaTecnicaGeneral As New DalOttFichaTecnicaGeneral(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttFichaTecnicaGeneral.ObtenerDatosPaginacionVOttFichaTecnicaGenerallst(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OT_HIJAS_RECHAZADAS según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>04/12/2015 10:44:42 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ORDEN_TRABAJO_ListarVOtHijasRechazadas(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttOrdenTrabajo As New DalOttOrdenTrabajo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOttOrdenTrabajo.ListarVOtHijasRechazadas(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OT_HIJAS_RECHAZADAS según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>04/12/2015 10:44:42 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ORDEN_TRABAJO_ObtenerDatosPaginacionVOtHijasRechazadas(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttOrdenTrabajo As New DalOttOrdenTrabajo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOttOrdenTrabajo.ObtenerDatosPaginacionVOtHijasRechazadas(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Consulta a la base de datos si actualmente se encuentra en periodo de cierre
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>El periodo de cierre correspondiente</returns>
    ''' <author>Cesar Bermúdez García</author>
    ''' <creationDate>07/12/2015 11:19:44 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_PERIODO_CIERRE_ListarVOtConsultaFechaCierre(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttOrdenTrabajo As New DalOttOrdenTrabajo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOttOrdenTrabajo.ListarVOtConsultaFechaCierre(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OT_REPORTE_GENERAL según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>10/12/2015 09:51:06 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ORDEN_TRABAJO_ListarVOtReporteGeneral(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttOrdenTrabajo As New DalOttOrdenTrabajo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOttOrdenTrabajo.ListarVOtReporteGeneral(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OT_ALERTAS_TIEMPO según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>10/12/2015 04:08:35 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ORDEN_TRABAJO_ListarVOtAlertasTiempo(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer, pvc_ReqFichaTecnica As Boolean) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttOrdenTrabajo As New BllOttOrdenTrabajo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_BllOttOrdenTrabajo.ListarAlertasTiempo(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina, pvc_ReqFichaTecnica)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

#End Region

#Region "OTT_FICHA_TECNICA_DETALLE"
    ''' <summary>
    ''' Permite agregar un registro en la tabla OTT_FICHA_TECNICA_DETALLE
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>17/12/2015 02:43:46 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_FICHA_TECNICA_DETALLE_InsertarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttFichaTecnicaDetalle) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttFichaTecnicaDetalle As New BllOttFichaTecnicaDetalle(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_INSERTAR)

            Return vlo_BllOttFichaTecnicaDetalle.InsertarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite agregar registros en las tablas OTT_FICHA_TECNICA_ESPACIO, OTT_FICHA_TECNICA_SUBCOMP, OTT_FICHA_TECNICA_DETALLE
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>18/12/2015</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_FICHA_TECNICA_DETALLE_InsertarDescripcionesRequerimientosEspaciosPrincipales(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_DsFichaTecnicaEspacio As Data.DataSet, ByVal pvo_DsFichaTecnicaSubComponente As Data.DataSet, ByVal pvo_DsFichaTecnicaDetalle As Data.DataSet, pvo_OrdenTrabajo As EntOttOrdenTrabajo) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttFichaTecnicaDetalle As New BllOttFichaTecnicaDetalle(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_INSERTAR)

            Return vlo_BllOttFichaTecnicaDetalle.InsertarDescripcionesRequerimientosEspaciosPrincipales(pvo_DsFichaTecnicaEspacio, pvo_DsFichaTecnicaSubComponente, pvo_DsFichaTecnicaDetalle, pvo_OrdenTrabajo)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTT_FICHA_TECNICA_DETALLE
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>17/12/2015 02:43:46 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_FICHA_TECNICA_DETALLE_BorrarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttFichaTecnicaDetalle) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttFichaTecnicaDetalle As New DalOttFichaTecnicaDetalle(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_BORRAR)

            Return vlo_DalOttFichaTecnicaDetalle.BorrarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTT_FICHA_TECNICA_DETALLE
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>17/12/2015 02:43:46 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_FICHA_TECNICA_DETALLE_ModificarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttFichaTecnicaDetalle) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttFichaTecnicaDetalle As New DalOttFichaTecnicaDetalle(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_MODIFICAR)

            Return vlo_DalOttFichaTecnicaDetalle.ModificarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTT_FICHA_TECNICA_DETALLE según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>17/12/2015 02:43:46 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_FICHA_TECNICA_DETALLE_ListarRegistros(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttFichaTecnicaDetalle As New DalOttFichaTecnicaDetalle(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttFichaTecnicaDetalle.ListarRegistros(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTT_FICHA_TECNICA_DETALLELst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>17/12/2015 02:43:46 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_FICHA_TECNICA_DETALLE_ListarRegistrosLista(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttFichaTecnicaDetalle As New DalOttFichaTecnicaDetalle(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttFichaTecnicaDetalle.ListarRegistrosLista(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTT_FICHA_TECNICA_DETALLELst según el criterio y orden indicados, va hacia BLL
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Carlos Gómez Ondoy</author>
    ''' <creationDate>15/01/2016</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_FICHA_TECNICA_DETALLE_ListarRegistrosListaPersonalizado(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttFichaTecnicaDetalle As New BllOttFichaTecnicaDetalle(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_INSERTAR)

            Return vlo_BllOttFichaTecnicaDetalle.ListarRegistrosListaPersonalizado(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene un registro de la tabla OTT_FICHA_TECNICA_DETALLE según el criterio indicado
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <returns>Entidad que representa la información obtenida al ejecutar la consulta</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>17/12/2015 02:43:46 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_FICHA_TECNICA_DETALLE_ObtenerRegistro(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String) As EntOttFichaTecnicaDetalle
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttFichaTecnicaDetalle As New DalOttFichaTecnicaDetalle(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttFichaTecnicaDetalle.ObtenerRegistro(pvc_Condicion)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTTH_FICHA_TECNICA_DETALLE según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>17/12/2015 02:43:46 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_FICHA_TECNICA_DETALLE_ListarVOtthFichaTecnicaDetalle(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttFichaTecnicaDetalle As New DalOttFichaTecnicaDetalle(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttFichaTecnicaDetalle.ListarVOtthFichaTecnicaDetalle(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTTH_FICHA_TECNICA_DETALLE según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>17/12/2015 02:43:46 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_FICHA_TECNICA_DETALLE_ObtenerDatosPaginacionVOtthFichaTecnicaDetalle(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttFichaTecnicaDetalle As New DalOttFichaTecnicaDetalle(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttFichaTecnicaDetalle.ObtenerDatosPaginacionVOtthFichaTecnicaDetalle(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTT_FICHA_TECNICA_DETALLE según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>17/12/2015 02:43:46 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_FICHA_TECNICA_DETALLE_ListarVOttFichaTecnicaDetalle(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttFichaTecnicaDetalle As New DalOttFichaTecnicaDetalle(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttFichaTecnicaDetalle.ListarVOttFichaTecnicaDetalle(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTT_FICHA_TECNICA_DETALLE según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>17/12/2015 02:43:46 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_FICHA_TECNICA_DETALLE_ObtenerDatosPaginacionVOttFichaTecnicaDetalle(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttFichaTecnicaDetalle As New DalOttFichaTecnicaDetalle(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttFichaTecnicaDetalle.ObtenerDatosPaginacionVOttFichaTecnicaDetalle(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTT_FICHA_TECNICA_DETALLELST según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>17/12/2015 02:43:46 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_FICHA_TECNICA_DETALLE_ListarVOttFichaTecnicaDetallelst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttFichaTecnicaDetalle As New DalOttFichaTecnicaDetalle(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttFichaTecnicaDetalle.ListarVOttFichaTecnicaDetallelst(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTT_FICHA_TECNICA_DETALLELST según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>17/12/2015 02:43:46 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_FICHA_TECNICA_DETALLE_ObtenerDatosPaginacionVOttFichaTecnicaDetallelst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttFichaTecnicaDetalle As New DalOttFichaTecnicaDetalle(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttFichaTecnicaDetalle.ObtenerDatosPaginacionVOttFichaTecnicaDetallelst(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

#End Region

#Region "OTT_FICHA_TECNICA_ESPACIO"
    ''' <summary>
    ''' Permite agregar un registro en la tabla OTT_FICHA_TECNICA_ESPACIO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>17/12/2015 02:43:46 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_FICHA_TECNICA_ESPACIO_InsertarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttFichaTecnicaEspacio) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttFichaTecnicaEspacio As New BllOttFichaTecnicaEspacio(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_INSERTAR)

            Return vlo_BllOttFichaTecnicaEspacio.InsertarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTT_FICHA_TECNICA_ESPACIO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>17/12/2015 02:43:46 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_FICHA_TECNICA_ESPACIO_BorrarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttFichaTecnicaEspacio) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttFichaTecnicaEspacio As New BllOttFichaTecnicaEspacio(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_BORRAR)

            Return vlo_BllOttFichaTecnicaEspacio.BorrarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTT_FICHA_TECNICA_ESPACIO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>17/12/2015 02:43:46 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_FICHA_TECNICA_ESPACIO_ModificarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttFichaTecnicaEspacio) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttFichaTecnicaEspacio As New DalOttFichaTecnicaEspacio(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_MODIFICAR)

            Return vlo_DalOttFichaTecnicaEspacio.ModificarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTT_FICHA_TECNICA_ESPACIO según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>17/12/2015 02:43:46 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_FICHA_TECNICA_ESPACIO_ListarRegistros(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttFichaTecnicaEspacio As New DalOttFichaTecnicaEspacio(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttFichaTecnicaEspacio.ListarRegistros(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTT_FICHA_TECNICA_ESPACIOLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>17/12/2015 02:43:46 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_FICHA_TECNICA_ESPACIO_ListarRegistrosLista(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttFichaTecnicaEspacio As New DalOttFichaTecnicaEspacio(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttFichaTecnicaEspacio.ListarRegistrosLista(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene un registro de la tabla OTT_FICHA_TECNICA_ESPACIO según el criterio indicado
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <returns>Entidad que representa la información obtenida al ejecutar la consulta</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>17/12/2015 02:43:46 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_FICHA_TECNICA_ESPACIO_ObtenerRegistro(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String) As EntOttFichaTecnicaEspacio
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttFichaTecnicaEspacio As New DalOttFichaTecnicaEspacio(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttFichaTecnicaEspacio.ObtenerRegistro(pvc_Condicion)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTTH_FICHA_TECNICA_ESPACIO según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>17/12/2015 02:43:46 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_FICHA_TECNICA_ESPACIO_ListarVOtthFichaTecnicaEspacio(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttFichaTecnicaEspacio As New DalOttFichaTecnicaEspacio(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttFichaTecnicaEspacio.ListarVOtthFichaTecnicaEspacio(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTTH_FICHA_TECNICA_ESPACIO según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>17/12/2015 02:43:46 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_FICHA_TECNICA_ESPACIO_ObtenerDatosPaginacionVOtthFichaTecnicaEspacio(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttFichaTecnicaEspacio As New DalOttFichaTecnicaEspacio(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttFichaTecnicaEspacio.ObtenerDatosPaginacionVOtthFichaTecnicaEspacio(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTT_FICHA_TECNICA_ESPACIO según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>17/12/2015 02:43:46 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_FICHA_TECNICA_ESPACIO_ListarVOttFichaTecnicaEspacio(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttFichaTecnicaEspacio As New DalOttFichaTecnicaEspacio(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttFichaTecnicaEspacio.ListarVOttFichaTecnicaEspacio(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTT_FICHA_TECNICA_ESPACIO según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>17/12/2015 02:43:46 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_FICHA_TECNICA_ESPACIO_ObtenerDatosPaginacionVOttFichaTecnicaEspacio(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttFichaTecnicaEspacio As New DalOttFichaTecnicaEspacio(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttFichaTecnicaEspacio.ObtenerDatosPaginacionVOttFichaTecnicaEspacio(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTT_FICHA_TECNICA_ESPACIOLST según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>17/12/2015 02:43:46 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_FICHA_TECNICA_ESPACIO_ListarVOttFichaTecnicaEspaciolst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttFichaTecnicaEspacio As New DalOttFichaTecnicaEspacio(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttFichaTecnicaEspacio.ListarVOttFichaTecnicaEspaciolst(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTT_FICHA_TECNICA_ESPACIOLST según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>17/12/2015 02:43:46 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_FICHA_TECNICA_ESPACIO_ObtenerDatosPaginacionVOttFichaTecnicaEspaciolst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttFichaTecnicaEspacio As New DalOttFichaTecnicaEspacio(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttFichaTecnicaEspacio.ObtenerDatosPaginacionVOttFichaTecnicaEspaciolst(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

#End Region

#Region "OTT_FICHA_TECNICA_SUBCOMP"
    ''' <summary>
    ''' Permite agregar un registro en la tabla OTT_FICHA_TECNICA_SUBCOMP
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>17/12/2015 02:43:46 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_FICHA_TECNICA_SUBCOMP_InsertarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttFichaTecnicaSubcomp) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttFichaTecnicaSubcomp As New BllOttFichaTecnicaSubcomp(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_INSERTAR)

            Return vlo_BllOttFichaTecnicaSubcomp.InsertarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTT_FICHA_TECNICA_SUBCOMP
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>17/12/2015 02:43:46 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_FICHA_TECNICA_SUBCOMP_BorrarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttFichaTecnicaSubcomp) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttFichaTecnicaSubcomp As New BllOttFichaTecnicaSubcomp(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_BORRAR)

            Return vlo_BllOttFichaTecnicaSubcomp.BorrarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTT_FICHA_TECNICA_SUBCOMP
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>17/12/2015 02:43:46 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_FICHA_TECNICA_SUBCOMP_ModificarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttFichaTecnicaSubcomp) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttFichaTecnicaSubcomp As New DalOttFichaTecnicaSubcomp(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_MODIFICAR)

            Return vlo_DalOttFichaTecnicaSubcomp.ModificarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTT_FICHA_TECNICA_SUBCOMP según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>17/12/2015 02:43:46 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_FICHA_TECNICA_SUBCOMP_ListarRegistros(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttFichaTecnicaSubcomp As New DalOttFichaTecnicaSubcomp(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttFichaTecnicaSubcomp.ListarRegistros(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTT_FICHA_TECNICA_SUBCOMPLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>17/12/2015 02:43:46 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_FICHA_TECNICA_SUBCOMP_ListarRegistrosLista(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttFichaTecnicaSubcomp As New DalOttFichaTecnicaSubcomp(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttFichaTecnicaSubcomp.ListarRegistrosLista(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene un registro de la tabla OTT_FICHA_TECNICA_SUBCOMP según el criterio indicado
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <returns>Entidad que representa la información obtenida al ejecutar la consulta</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>17/12/2015 02:43:46 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_FICHA_TECNICA_SUBCOMP_ObtenerRegistro(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String) As EntOttFichaTecnicaSubcomp
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttFichaTecnicaSubcomp As New DalOttFichaTecnicaSubcomp(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttFichaTecnicaSubcomp.ObtenerRegistro(pvc_Condicion)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTTH_FICHA_TECNICA_SUBCOMP según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>17/12/2015 02:43:46 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_FICHA_TECNICA_SUBCOMP_ListarVOtthFichaTecnicaSubcomp(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttFichaTecnicaSubcomp As New DalOttFichaTecnicaSubcomp(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttFichaTecnicaSubcomp.ListarVOtthFichaTecnicaSubcomp(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTTH_FICHA_TECNICA_SUBCOMP según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>17/12/2015 02:43:46 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_FICHA_TECNICA_SUBCOMP_ObtenerDatosPaginacionVOtthFichaTecnicaSubcomp(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttFichaTecnicaSubcomp As New DalOttFichaTecnicaSubcomp(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttFichaTecnicaSubcomp.ObtenerDatosPaginacionVOtthFichaTecnicaSubcomp(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTT_FICHA_TECNICA_SUBCOMP según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>17/12/2015 02:43:46 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_FICHA_TECNICA_SUBCOMP_ListarVOttFichaTecnicaSubcomp(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttFichaTecnicaSubcomp As New DalOttFichaTecnicaSubcomp(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttFichaTecnicaSubcomp.ListarVOttFichaTecnicaSubcomp(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTT_FICHA_TECNICA_SUBCOMP según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>17/12/2015 02:43:46 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_FICHA_TECNICA_SUBCOMP_ObtenerDatosPaginacionVOttFichaTecnicaSubcomp(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttFichaTecnicaSubcomp As New DalOttFichaTecnicaSubcomp(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttFichaTecnicaSubcomp.ObtenerDatosPaginacionVOttFichaTecnicaSubcomp(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTT_FICHA_TECNICA_SUBCOMPLST según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>17/12/2015 02:43:46 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_FICHA_TECNICA_SUBCOMP_ListarVOttFichaTecnicaSubcomplst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttFichaTecnicaSubcomp As New DalOttFichaTecnicaSubcomp(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttFichaTecnicaSubcomp.ListarVOttFichaTecnicaSubcomplst(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTT_FICHA_TECNICA_SUBCOMPLST según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>17/12/2015 02:43:46 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_FICHA_TECNICA_SUBCOMP_ObtenerDatosPaginacionVOttFichaTecnicaSubcomplst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttFichaTecnicaSubcomp As New DalOttFichaTecnicaSubcomp(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttFichaTecnicaSubcomp.ObtenerDatosPaginacionVOttFichaTecnicaSubcomplst(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

#End Region

#Region "OTF_EXCEPCION_PERIODO"
    ''' <summary>
    ''' Permite agregar un registro en la tabla OTF_EXCEPCION_PERIODO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>18/01/2016 02:03:50 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_EXCEPCION_PERIODO_InsertarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtfExcepcionPeriodo) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtfExcepcionPeriodo As New DalOtfExcepcionPeriodo(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_INSERTAR)

            Return vlo_DalOtfExcepcionPeriodo.InsertarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTF_EXCEPCION_PERIODO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>18/01/2016 02:03:50 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_EXCEPCION_PERIODO_BorrarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtfExcepcionPeriodo) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtfExcepcionPeriodo As New DalOtfExcepcionPeriodo(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_BORRAR)

            Return vlo_DalOtfExcepcionPeriodo.BorrarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTF_EXCEPCION_PERIODO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>18/01/2016 02:03:50 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_EXCEPCION_PERIODO_ModificarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtfExcepcionPeriodo) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtfExcepcionPeriodo As New DalOtfExcepcionPeriodo(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_MODIFICAR)

            Return vlo_DalOtfExcepcionPeriodo.ModificarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTF_EXCEPCION_PERIODO según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>18/01/2016 02:03:50 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_EXCEPCION_PERIODO_ListarRegistros(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtfExcepcionPeriodo As New DalOtfExcepcionPeriodo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtfExcepcionPeriodo.ListarRegistros(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTF_EXCEPCION_PERIODOLst según el criterio y orden indicados, va hacia BLL
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Carlos Gómez Ondoy</author>
    ''' <creationDate>20/01/2016</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_EXCEPCION_PERIODO_ListarRegistrosListaPersonalizado(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtfExcepcionPeriodo As New BllOtfExcepcionPeriodo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_INSERTAR)

            Return vlo_BllOtfExcepcionPeriodo.ListarRegistrosListaPersonalizado(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTF_EXCEPCION_PERIODOLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>18/01/2016 02:03:50 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_EXCEPCION_PERIODO_ListarRegistrosLista(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtfExcepcionPeriodo As New DalOtfExcepcionPeriodo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtfExcepcionPeriodo.ListarRegistrosLista(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene un registro de la tabla OTF_EXCEPCION_PERIODO según el criterio indicado
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <returns>Entidad que representa la información obtenida al ejecutar la consulta</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>18/01/2016 02:03:50 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_EXCEPCION_PERIODO_ObtenerRegistro(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String) As EntOtfExcepcionPeriodo
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtfExcepcionPeriodo As New DalOtfExcepcionPeriodo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtfExcepcionPeriodo.ObtenerRegistro(pvc_Condicion)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTF_EXCEPCION_PERIODO según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>18/01/2016 02:03:50 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_EXCEPCION_PERIODO_ListarVOtfExcepcionPeriodo(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtfExcepcionPeriodo As New DalOtfExcepcionPeriodo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtfExcepcionPeriodo.ListarVOtfExcepcionPeriodo(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTF_EXCEPCION_PERIODO según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>18/01/2016 02:03:50 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_EXCEPCION_PERIODO_ObtenerDatosPaginacionVOtfExcepcionPeriodo(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtfExcepcionPeriodo As New DalOtfExcepcionPeriodo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtfExcepcionPeriodo.ObtenerDatosPaginacionVOtfExcepcionPeriodo(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTF_EXCEPCION_PERIODOLST según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>18/01/2016 02:03:50 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_EXCEPCION_PERIODO_ListarVOtfExcepcionPeriodolst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtfExcepcionPeriodo As New DalOtfExcepcionPeriodo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtfExcepcionPeriodo.ListarVOtfExcepcionPeriodolst(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTF_EXCEPCION_PERIODOLST según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>18/01/2016 02:03:50 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_EXCEPCION_PERIODO_ObtenerDatosPaginacionVOtfExcepcionPeriodolst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtfExcepcionPeriodo As New DalOtfExcepcionPeriodo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtfExcepcionPeriodo.ObtenerDatosPaginacionVOtfExcepcionPeriodolst(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function



#End Region

#Region "OTT_OPERARIO_ORDEN_TRAB"
    ''' <summary>
    ''' Permite agregar un registro en la tabla OTT_OPERARIO_ORDEN_TRAB
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>03/02/2016 11:15:36 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_OPERARIO_ORDEN_TRAB_InsertarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttOperarioOrdenTrab) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttOperarioOrdenTrab As New BllOttOperarioOrdenTrab(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_INSERTAR)

            Return vlo_BllOttOperarioOrdenTrab.InsertarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function


    ''' <summary>
    ''' Permite borrar un registro en la tabla OTT_OPERARIO_ORDEN_TRAB
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>03/02/2016 11:15:36 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_OPERARIO_ORDEN_TRAB_BorrarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttOperarioOrdenTrab) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttOperarioOrdenTrab As New BllOttOperarioOrdenTrab(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_BORRAR)

            Return vlo_BllOttOperarioOrdenTrab.BorrarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTT_OPERARIO_ORDEN_TRAB
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>03/02/2016 11:15:36 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_OPERARIO_ORDEN_TRAB_ModificarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttOperarioOrdenTrab) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttOperarioOrdenTrab As New DalOttOperarioOrdenTrab(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_MODIFICAR)

            Return vlo_DalOttOperarioOrdenTrab.ModificarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTT_OPERARIO_ORDEN_TRAB según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>03/02/2016 11:15:36 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_OPERARIO_ORDEN_TRAB_ListarRegistros(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttOperarioOrdenTrab As New DalOttOperarioOrdenTrab(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttOperarioOrdenTrab.ListarRegistros(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTT_OPERARIO_ORDEN_TRABLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>03/02/2016 11:15:36 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_OPERARIO_ORDEN_TRAB_ListarRegistrosLista(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttOperarioOrdenTrab As New DalOttOperarioOrdenTrab(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttOperarioOrdenTrab.ListarRegistrosLista(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene un registro de la tabla OTT_OPERARIO_ORDEN_TRAB según el criterio indicado
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <returns>Entidad que representa la información obtenida al ejecutar la consulta</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>03/02/2016 11:15:36 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_OPERARIO_ORDEN_TRAB_ObtenerRegistro(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String) As EntOttOperarioOrdenTrab
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttOperarioOrdenTrab As New DalOttOperarioOrdenTrab(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttOperarioOrdenTrab.ObtenerRegistro(pvc_Condicion)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTTH_OPERARIO_ORDEN_TRAB según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>03/02/2016 11:15:36 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_OPERARIO_ORDEN_TRAB_ListarVOtthOperarioOrdenTrab(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttOperarioOrdenTrab As New DalOttOperarioOrdenTrab(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttOperarioOrdenTrab.ListarVOtthOperarioOrdenTrab(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTTH_OPERARIO_ORDEN_TRAB según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>03/02/2016 11:15:36 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_OPERARIO_ORDEN_TRAB_ObtenerDatosPaginacionVOtthOperarioOrdenTrab(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttOperarioOrdenTrab As New DalOttOperarioOrdenTrab(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttOperarioOrdenTrab.ObtenerDatosPaginacionVOtthOperarioOrdenTrab(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTT_OPERARIO_ORDEN_TRAB según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>03/02/2016 11:15:36 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_OPERARIO_ORDEN_TRAB_ListarVOttOperarioOrdenTrab(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttOperarioOrdenTrab As New DalOttOperarioOrdenTrab(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttOperarioOrdenTrab.ListarVOttOperarioOrdenTrab(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTT_OPERARIO_ORDEN_TRAB según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>03/02/2016 11:15:36 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_OPERARIO_ORDEN_TRAB_ObtenerDatosPaginacionVOttOperarioOrdenTrab(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttOperarioOrdenTrab As New DalOttOperarioOrdenTrab(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttOperarioOrdenTrab.ObtenerDatosPaginacionVOttOperarioOrdenTrab(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTT_OPERARIO_ORDEN_TRABLST según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>03/02/2016 11:15:36 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_OPERARIO_ORDEN_TRAB_ListarVOttOperarioOrdenTrablst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttOperarioOrdenTrab As New DalOttOperarioOrdenTrab(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttOperarioOrdenTrab.ListarVOttOperarioOrdenTrablst(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTT_OPERARIO_ORDEN_TRABLST según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>03/02/2016 11:15:36 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_OPERARIO_ORDEN_TRAB_ObtenerDatosPaginacionVOttOperarioOrdenTrablst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttOperarioOrdenTrab As New DalOttOperarioOrdenTrab(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttOperarioOrdenTrab.ObtenerDatosPaginacionVOttOperarioOrdenTrablst(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function



    ''' <summary>
    ''' Almacena la lista de operarios que efectuarán la evaluacion de una orden de trabajo de diseño
    ''' </summary>
    ''' <param name="pvc_Usuario">usuario para la seguridad del servicio web</param>
    ''' <param name="pvc_Clave">clave del usuario de seguridad</param>
    ''' <param name="DsFuncionarios">set de datos con los funcionarios a ingresar</param>
    ''' <param name="DsFuncionariosEjecucion">set de datos con los funcionarios a ingresar para el caso de la ejecucion</param>
    ''' <param name="pvn_idSectorTaller">id sector taller de la orden</param>
    ''' <param name="pvn_IdUbicacion">id ubicacion de la orden</param>
    ''' <param name="pvc_idOrden">id de la orden de trabajo</param>
    ''' <param name="pvo_fechaPropuesta">la fecha propuesta para inicio de la evaluación</param>
    ''' <param name="pvo_fechaEfectuo">Fecha en que se efectó la evaluación</param>
    ''' <param name="pvo_fechaEjecuta">Fecha propuesta para el inicio del trabajo</param>
    ''' <param name="pvn_IdUnidadEvaluacion">id unidad de tiempo estimado para la evaluación</param>
    ''' <param name="pvn_TiempoEstimadoEvaluacion">Tiempo estimado para la evaluación</param>
    ''' <param name="pvn_IdUnidadTiempoInvertidoEjecucion">id unidad de tiempo real</param>
    ''' <param name="pvn_tiempoRealInvertido">Tiempo real invertido en la evaluación</param>
    ''' <param name="pvn_UnidadTiempoEstimadoEjecucion">id unidad de tiempo estimado para iniciar el trabajo</param>
    ''' <param name="pvn_TiempoEstimadoEjecucion">tiempo estimado para ejecutar el trabajo</param>
    ''' <param name="pvc_UsuarioEjecuta">usuario actual que ejecuta la acción</param>
    ''' <param name="pvb_EsEjecucion">Indica si la orden se encuentra en ejecución o no</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <remarks></remarks>
    ''' <author>Cesar Bermudez Garcia</author>
    ''' <creationDate>03/02/2016</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_OPERARIO_ORDEN_TRAB_GuardarEvaluacion(pvc_Usuario As String, pvc_Clave As String, ByVal DsFuncionarios As System.Data.DataTable, ByVal DsFuncionariosReal As System.Data.DataTable, ByVal DsFuncionariosEjecucion As System.Data.DataTable, pvn_idSectorTaller As Integer, pvn_IdUbicacion As Integer, pvc_idOrden As String, pvo_fechaPropuesta As Date, pvo_fechaEfectuo As Date, pvo_fechaEjecuta As Date, pvn_IdUnidadEvaluacion As Integer, pvn_TiempoEstimadoEvaluacion As Integer, pvn_IdUnidadTiempoInvertidoEjecucion As Integer, pvn_tiempoRealInvertido As Integer, pvn_UnidadTiempoEstimadoEjecucion As Integer, pvn_TiempoEstimadoEjecucion As Integer, pvc_UsuarioEjecuta As String, pvb_EsEjecucion As Boolean, pvo_OrdenTrabajo As EntOttOrdenTrabajo, pvb_ModificarOrdenTrabajo As Boolean, pvb_NoRequiereMaterial As Boolean, pvc_ObservacionesGeneralesMaterial As String) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttOperarioOrdenTrab As New BllOttOperarioOrdenTrab(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_BORRAR)

            Return vlo_BllOttOperarioOrdenTrab.GuardarEvaluacion(DsFuncionarios, DsFuncionariosReal, DsFuncionariosEjecucion, pvn_idSectorTaller, pvn_IdUbicacion, pvc_idOrden,
                                                                 pvo_fechaPropuesta, pvo_fechaEfectuo, pvo_fechaEjecuta, pvn_IdUnidadEvaluacion,
                                                                 pvn_TiempoEstimadoEvaluacion, pvn_IdUnidadTiempoInvertidoEjecucion, pvn_tiempoRealInvertido,
                                                                 pvn_UnidadTiempoEstimadoEjecucion, pvn_TiempoEstimadoEjecucion,
                                                                 pvc_UsuarioEjecuta, pvb_EsEjecucion, pvo_OrdenTrabajo, pvb_ModificarOrdenTrabajo, pvb_NoRequiereMaterial, pvc_ObservacionesGeneralesMaterial)

        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function


    ''' <summary>
    ''' Almacena en la base de datos profesionales a cargo de una valoración, ademas les notifica mediante correo electrónico dicha valoración
    ''' </summary>
    ''' <param name="pvc_Usuario"></param>
    ''' <param name="pvc_Clave"></param>
    ''' <param name="pvo_DsProfesionales"></param>
    ''' <param name="pvn_idSectorTaller"></param>
    ''' <param name="pvn_IdUbicacion"></param>
    ''' <param name="pvc_idOrden"></param>
    ''' <param name="pvn_UnidadTiempoEstimadoEvaluacion"></param>
    ''' <param name="pvn_TiempoEstimadoEvaluacion"></param>
    ''' <param name="pvc_UsuarioEjecuta"></param>
    ''' <param name="pvc_NombreProyecto"></param>
    ''' <param name="pvc_ProfesionalACargo"></param>
    ''' <returns></returns>
    ''' <remarks></remarks>
    ''' <author>Cesar Bermudez Garcia</author>
    ''' <creationDate>11/02/2016</creationDate>
    ''' <changeLog>
    '''    <author>César Bermudez</author>
    '''    <creationDate>17/02/2016</creationDate>
    '''    <change>Se cambia el numero de parámetros enviados</change>
    ''' </changeLog>
    <WebMethod()> _
    Public Function OTT_OPERARIO_ORDEN_TRAB_GuardarProfesionalesValoracion(pvc_Usuario As String, pvc_Clave As String, pvo_DsProfesionales As System.Data.DataTable, pvn_IdUbicacion As Integer, pvc_idOrden As String, pvc_UsuarioEjecuta As String, pvc_NombreProyecto As String, pvc_ProfesionalACargo As Integer, pvb_CambiarEstado As Boolean) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttOperarioOrdenTrab As New BllOttOperarioOrdenTrab(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_BORRAR)

            Return vlo_BllOttOperarioOrdenTrab.GuardarProfesionalesValoracion(pvo_DsProfesionales, pvn_IdUbicacion, pvc_idOrden, pvc_UsuarioEjecuta, pvc_NombreProyecto, pvc_ProfesionalACargo, pvb_CambiarEstado)


        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' 
    ''' </summary>
    ''' <param name="pvc_Usuario"></param>
    ''' <param name="pvc_Clave"></param>
    ''' <param name="pvo_DsEvaluadores"></param>
    ''' <param name="pvo_DsAdjuntosInsert"></param>
    ''' <param name="pvn_IdUbicacion"></param>
    ''' <param name="pvc_idOrden"></param>
    ''' <param name="pvd_FechaEfectuo"></param>
    ''' <param name="pvn_TiempoInvertidoEvaluacion"></param>
    ''' <param name="pvn_UnidadTiempoInvertido"></param>
    ''' <param name="pvb_EsViable"></param>
    ''' <param name="pvn_EstimacionPresupuestaria"></param>
    ''' <param name="pvc_TextoEnriquecido"></param>
    ''' <param name="pvc_UsuarioEjecuta"></param>
    ''' <returns></returns>
    ''' <remarks></remarks>
    <WebMethod()> _
    Public Function OTT_OPERARIO_ORDEN_TRAB_GuardarViabilidadTecnica(pvc_Usuario As String, pvc_Clave As String, pvo_DsEvaluadores As System.Data.DataTable, pvo_DsAdjuntosInsert As System.Data.DataTable, pvn_IdUbicacion As Integer, pvc_idOrden As String, pvb_EsViable As Boolean, pvn_EstimacionPresupuestaria As Integer, pvc_TextoEnriquecido As String, pvc_UsuarioEjecuta As String, pvb_CambiarEstado As Boolean, pvo_OrdenTrabajo As EntOttOrdenTrabajo) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttOperarioOrdenTrab As New BllOttOperarioOrdenTrab(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_BORRAR)

            Return vlo_BllOttOperarioOrdenTrab.GuardarViabilidadTecnica(pvo_DsEvaluadores, pvo_DsAdjuntosInsert, pvn_IdUbicacion, pvc_idOrden, pvb_EsViable, pvn_EstimacionPresupuestaria, pvc_TextoEnriquecido, pvc_UsuarioEjecuta, pvb_CambiarEstado, pvo_OrdenTrabajo)


        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite agregar un registro en la tabla OTT_OPERARIO_ORDEN_TRAB
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Carlos Gómez Ondoy</author>
    ''' <creationDate>11/02/2016</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_OPERARIO_ORDEN_TRAB_ProcesarEvaluacion(pvc_Usuario As String, pvc_Clave As String, pvo_OrdenTrabajo As EntOttOrdenTrabajo, pvo_DsOperarioEncargado As Data.DataSet, pvo_DsOperarioColaborador As Data.DataSet, pvo_DsTiempoColaborador As Data.DataSet, pvb_GuardarEnviar As Boolean, pvc_CondicionOperarioEncargado As String, pvc_CondicionOperarioColaborador As String, pvc_CondicionTiempoColaborador As String) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttOperarioOrdenTrab As New BllOttOperarioOrdenTrab(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_INSERTAR)

            Return vlo_BllOttOperarioOrdenTrab.ProcesarEvaluacion(pvo_OrdenTrabajo, pvo_DsOperarioEncargado, pvo_DsOperarioColaborador, pvo_DsTiempoColaborador, pvb_GuardarEnviar, pvc_CondicionOperarioEncargado, pvc_CondicionOperarioColaborador, pvc_CondicionTiempoColaborador)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

#End Region

#Region "OTT_TIEMPO_OPERARIO"
    ''' <summary>
    ''' Permite agregar un registro en la tabla OTT_TIEMPO_OPERARIO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>03/02/2016 11:15:36 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_TIEMPO_OPERARIO_InsertarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttTiempoOperario) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttTiempoOperario As New BllOttTiempoOperario(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_INSERTAR)

            Return vlo_BllOttTiempoOperario.InsertarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTT_TIEMPO_OPERARIO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>03/02/2016 11:15:36 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_TIEMPO_OPERARIO_BorrarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttTiempoOperario) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttTiempoOperario As New DalOttTiempoOperario(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_BORRAR)

            Return vlo_DalOttTiempoOperario.BorrarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTT_TIEMPO_OPERARIO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>03/02/2016 11:15:36 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_TIEMPO_OPERARIO_ModificarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttTiempoOperario) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttTiempoOperario As New DalOttTiempoOperario(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_MODIFICAR)

            Return vlo_DalOttTiempoOperario.ModificarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTT_TIEMPO_OPERARIO según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>03/02/2016 11:15:36 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_TIEMPO_OPERARIO_ListarRegistros(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttTiempoOperario As New DalOttTiempoOperario(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttTiempoOperario.ListarRegistros(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTT_TIEMPO_OPERARIOLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>03/02/2016 11:15:36 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_TIEMPO_OPERARIO_ListarRegistrosLista(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttTiempoOperario As New DalOttTiempoOperario(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttTiempoOperario.ListarRegistrosLista(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene un registro de la tabla OTT_TIEMPO_OPERARIO según el criterio indicado
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <returns>Entidad que representa la información obtenida al ejecutar la consulta</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>03/02/2016 11:15:36 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_TIEMPO_OPERARIO_ObtenerRegistro(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String) As EntOttTiempoOperario
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttTiempoOperario As New DalOttTiempoOperario(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttTiempoOperario.ObtenerRegistro(pvc_Condicion)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTTH_TIEMPO_OPERARIO según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>03/02/2016 11:15:36 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_TIEMPO_OPERARIO_ListarVOtthTiempoOperario(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttTiempoOperario As New DalOttTiempoOperario(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttTiempoOperario.ListarVOtthTiempoOperario(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTTH_TIEMPO_OPERARIO según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>03/02/2016 11:15:36 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_TIEMPO_OPERARIO_ObtenerDatosPaginacionVOtthTiempoOperario(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttTiempoOperario As New DalOttTiempoOperario(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttTiempoOperario.ObtenerDatosPaginacionVOtthTiempoOperario(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTT_TIEMPO_OPERARIO según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>03/02/2016 11:15:36 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_TIEMPO_OPERARIO_ListarVOttTiempoOperario(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttTiempoOperario As New DalOttTiempoOperario(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttTiempoOperario.ListarVOttTiempoOperario(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTT_TIEMPO_OPERARIO según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>03/02/2016 11:15:36 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_TIEMPO_OPERARIO_ObtenerDatosPaginacionVOttTiempoOperario(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttTiempoOperario As New DalOttTiempoOperario(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttTiempoOperario.ObtenerDatosPaginacionVOttTiempoOperario(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTT_TIEMPO_OPERARIOLST según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>03/02/2016 11:15:36 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_TIEMPO_OPERARIO_ListarVOttTiempoOperariolst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttTiempoOperario As New DalOttTiempoOperario(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttTiempoOperario.ListarVOttTiempoOperariolst(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTT_TIEMPO_OPERARIOLST según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>03/02/2016 11:15:36 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_TIEMPO_OPERARIO_ObtenerDatosPaginacionVOttTiempoOperariolst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttTiempoOperario As New DalOttTiempoOperario(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttTiempoOperario.ObtenerDatosPaginacionVOttTiempoOperariolst(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

#End Region

#Region "OTT_VIABILIDAD_TECNICA"
    ''' <summary>
    ''' Permite agregar un registro en la tabla OTT_VIABILIDAD_TECNICA
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>18/02/2016 03:07:35 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_VIABILIDAD_TECNICA_InsertarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttViabilidadTecnica) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttViabilidadTecnica As New BllOttViabilidadTecnica(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_INSERTAR)

            Return vlo_BllOttViabilidadTecnica.InsertarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite agregar un registro en la tabla OTT_VIABILIDAD_TECNICA
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Carlos Gomez Ondoy</author>
    ''' <creationDate>15/02/2016</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_VIABILIDAD_TECNICA_InsertarViabilidad(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttViabilidadTecnica, pvb_CambiarEstado As Boolean, pvb_Aprobada As Boolean, pvo_Descripcion As String, pvn_NumEmpleado As Integer) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttViabilidadTecnica As New BllOttViabilidadTecnica(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_INSERTAR)

            Return vlo_BllOttViabilidadTecnica.InsertarViabilidad(pvo_Registro, pvb_CambiarEstado, pvb_Aprobada, pvo_Descripcion, pvn_NumEmpleado)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite modificar un registro en la tabla OTT_VIABILIDAD_TECNICA
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    '''  <author>Carlos Gomez Ondoy</author>
    ''' <creationDate>15/02/2016</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_VIABILIDAD_TECNICA_ModificarViabilidad(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttViabilidadTecnica, pvb_CambiarEstado As Boolean, pvb_Aprobada As Boolean, pvo_Descripcion As String, pvn_NumEmpleado As Integer) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttViabilidadTecnica As New BllOttViabilidadTecnica(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_INSERTAR)

            Return vlo_BllOttViabilidadTecnica.ModificarViabilidad(pvo_Registro, pvb_CambiarEstado, pvb_Aprobada, pvo_Descripcion, pvn_NumEmpleado)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite modificar un registro en la tabla OTT_VIABILIDAD_TECNICA, un registro de la tabla OTT_ADJUNTO_ORDEN_TRABAJO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    '''  <author>Carlos Gomez Ondoy</author>
    ''' <creationDate>15/02/2016</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_VIABILIDAD_TECNICA_ModificarViabilidadOficio(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttViabilidadTecnica, pvb_Aprobada As Boolean, pvo_Descripcion As String, pvn_NumEmpleado As Integer, pvo_OficioAdjunto As EntOttAdjuntoOrdenTrabajo, pvb_ExisteArchivo As Boolean) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttViabilidadTecnica As New BllOttViabilidadTecnica(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_INSERTAR)

            Return vlo_BllOttViabilidadTecnica.ModificarViabilidadOficio(pvo_Registro, pvb_Aprobada, pvo_Descripcion, pvn_NumEmpleado, pvo_OficioAdjunto, pvb_ExisteArchivo)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTT_VIABILIDAD_TECNICA
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>18/02/2016 03:07:35 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_VIABILIDAD_TECNICA_BorrarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttViabilidadTecnica) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttViabilidadTecnica As New DalOttViabilidadTecnica(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_BORRAR)

            Return vlo_DalOttViabilidadTecnica.BorrarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTT_VIABILIDAD_TECNICA
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>18/02/2016 03:07:35 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_VIABILIDAD_TECNICA_ModificarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttViabilidadTecnica) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttViabilidadTecnica As New DalOttViabilidadTecnica(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_MODIFICAR)

            Return vlo_DalOttViabilidadTecnica.ModificarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTT_VIABILIDAD_TECNICA según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>18/02/2016 03:07:35 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_VIABILIDAD_TECNICA_ListarRegistros(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttViabilidadTecnica As New DalOttViabilidadTecnica(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOttViabilidadTecnica.ListarRegistros(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTT_VIABILIDAD_TECNICA según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>18/02/2016 03:07:35 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_VIABILIDAD_TECNICA_ObtenerDatosPaginacionVOttViabilidadTecnica(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttViabilidadTecnica As New DalOttViabilidadTecnica(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOttViabilidadTecnica.ObtenerDatosPaginacionVOttViabilidadTecnica(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTT_VIABILIDAD_TECNICALst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>18/02/2016 03:07:35 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_VIABILIDAD_TECNICA_ListarRegistrosLista(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttViabilidadTecnica As New DalOttViabilidadTecnica(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOttViabilidadTecnica.ListarRegistrosLista(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTT_VIABILIDAD_TECNICALst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>18/02/2016 03:07:35 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_VIABILIDAD_TECNICA_ObtenerDatosPaginacionVOttViabilidadTecnicalst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttViabilidadTecnica As New DalOttViabilidadTecnica(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOttViabilidadTecnica.ObtenerDatosPaginacionVOttViabilidadTecnicalst(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene un registro de la tabla OTT_VIABILIDAD_TECNICA según el criterio indicado
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <returns>Entidad que representa la información obtenida al ejecutar la consulta</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>18/02/2016 03:07:35 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_VIABILIDAD_TECNICA_ObtenerRegistro(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String) As EntOttViabilidadTecnica
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttViabilidadTecnica As New DalOttViabilidadTecnica(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOttViabilidadTecnica.ObtenerRegistro(pvc_Condicion)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTTH_VIABILIDAD_TECNICA según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>18/02/2016 03:07:35 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_VIABILIDAD_TECNICA_ListarVOtthViabilidadTecnica(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttViabilidadTecnica As New DalOttViabilidadTecnica(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOttViabilidadTecnica.ListarVOtthViabilidadTecnica(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTTH_VIABILIDAD_TECNICA según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>18/02/2016 03:07:35 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_VIABILIDAD_TECNICA_ObtenerDatosPaginacionVOtthViabilidadTecnica(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttViabilidadTecnica As New DalOttViabilidadTecnica(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOttViabilidadTecnica.ObtenerDatosPaginacionVOtthViabilidadTecnica(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' 
    ''' </summary>
    ''' <param name="pvc_Usuario"></param>
    ''' <param name="pvc_Clave"></param>
    ''' <param name="pvc_Condicion"></param>
    ''' <param name="pvc_Orden"></param>
    ''' <param name="pvn_TamanoPagina"></param>
    ''' <returns></returns>
    ''' <remarks></remarks>
    ''' <author>César Bermúdez García</author>
    ''' <creationDate>26/02/2016</creationDate>
    <WebMethod()> _
    Public Function OTT_VIABILIDAD_TECNICA_GuardarRespuestaViabilidadTecnica(pvc_Usuario As String, pvc_Clave As String, pvo_adjunto As EntOttAdjuntoOrdenTrabajo, pvb_Presupuesto As Boolean, pvb_enviar As Boolean, pvn_idSector As Integer, pvn_IdUbicacion As Integer, pvc_IdOrdenTrabajo As String) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttViabilidadTecnica As New BllOttViabilidadTecnica(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_BllOttViabilidadTecnica.GuardarRespuestaViabilidadTecnica(pvo_adjunto, pvb_Presupuesto, pvb_enviar, pvn_idSector, pvn_IdUbicacion, pvc_IdOrdenTrabajo)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

#End Region

#Region "OTT_ANTEPROYECTO"
    ''' <summary>
    ''' Permite agregar un registro en la tabla OTT_ANTEPROYECTO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>29/02/2016 11:00:10 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ANTEPROYECTO_InsertarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttAnteproyecto) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttAnteproyecto As New BllOttAnteproyecto(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_INSERTAR)

            Return vlo_BllOttAnteproyecto.InsertarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTT_ANTEPROYECTO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>29/02/2016 11:00:10 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ANTEPROYECTO_BorrarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttAnteproyecto) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttAnteproyecto As New BllOttAnteproyecto(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_BORRAR)

            Return vlo_BllOttAnteproyecto.BorrarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Guarda la version del anteproyecto respectiva
    ''' </summary>
    ''' <param name="pvc_Usuario"></param>
    ''' <param name="pvc_Clave"></param>
    ''' <param name="pvo_DsAdjuntosInsert"></param>
    ''' <param name="pvo_EntOttAnteproyecto"></param>
    ''' <returns></returns>
    ''' <remarks></remarks>
    ''' <author>César Bermudez Garcia</author>
    ''' <creationDate>07/03/2016.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ANTEPROYECTO_GuardarVersion(pvc_Usuario As String, pvc_Clave As String, pvo_DsAdjuntosInsert As DataSet, pvo_EntOttAnteproyecto As EntOttAnteproyecto, pvo_ArchivoPlantaFisica As EntOttAdjuntoOrdenTrabajo, pvo_ArchivoForesta As EntOttAdjuntoOrdenTrabajo, pvo_ArchivosBorrados As DataSet) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttAnteproyecto As New BllOttAnteproyecto(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_BORRAR)

            Return vlo_BllOttAnteproyecto.GuardarVersion(pvo_DsAdjuntosInsert, pvo_EntOttAnteproyecto, pvo_ArchivoPlantaFisica, pvo_ArchivoForesta, pvo_ArchivosBorrados)

        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' 
    ''' </summary>
    ''' <param name="pvc_Usuario"></param>
    ''' <param name="pvc_Clave"></param>
    ''' <param name="pvo_EntOttAnteproyecto"></param>
    ''' <returns></returns>
    ''' <remarks></remarks>
    <WebMethod()> _
    Public Function OTT_ANTEPROYECTO_NuevaVersion(pvc_Usuario As String, pvc_Clave As String, pvo_EntOttAnteproyecto As EntOttAnteproyecto) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttAnteproyecto As New BllOttAnteproyecto(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_BORRAR)

            Return vlo_BllOttAnteproyecto.GenerarNuevaVersion(pvo_EntOttAnteproyecto)

        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function


    ''' <summary>
    ''' Crea el pdf que contiene el reporte y los archivos pdf adjuntos
    ''' </summary>
    ''' <param name="pvc_Usuario">Usuario Aplicacion</param>
    ''' <param name="pvc_Clave">Clave de la Aplicacion</param>
    ''' <param name="pvc_Condicion">Condicion de busqueda de reporte</param>
    ''' <param name="pvc_FormatoReporte">Formato del reporte</param>
    ''' <param name="pvc_RutaBase">Ruta del reporte</param>
    ''' <param name="pvc_NombreReporte">Nombre del reporte</param>
    ''' <returns>Arreglo de bytes que representan el reporte</returns>
    ''' <remarks></remarks>
    ''' <author>Carlos Gómez Ondoy</author>
    ''' <creationDate>10/03/2016</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ANTEPROYECTO_MezclarPdf(pvc_Usuario As String, pvc_Clave As String, pvo_EntOttAnteproyecto As EntOttAnteproyecto, pvc_Condicion As String, pvc_UsuarioEjecuta As String, ByVal pvc_FormatoReporte As String, ByVal pvc_RutaBase As String, ByVal pvc_NombreReporte As String) As Byte()
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllPDF As New BllPdfMezcla(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_PROCESAR)

            Return vlo_BllPDF.ConstruirReporte(pvc_Usuario, pvc_Clave, pvo_EntOttAnteproyecto, pvc_Condicion, pvc_UsuarioEjecuta, pvc_FormatoReporte, pvc_RutaBase, pvc_NombreReporte)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function


    ''' <summary>
    ''' Permite borrar un registro en la tabla OTT_ANTEPROYECTO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>29/02/2016 11:00:10 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ANTEPROYECTO_ModificarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttAnteproyecto) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttAnteproyecto As New DalOttAnteproyecto(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_MODIFICAR)

            Return vlo_DalOttAnteproyecto.ModificarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTT_ANTEPROYECTO según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>29/02/2016 11:00:10 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ANTEPROYECTO_ListarRegistros(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttAnteproyecto As New DalOttAnteproyecto(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOttAnteproyecto.ListarRegistros(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTT_ANTEPROYECTO según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>29/02/2016 11:00:10 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ANTEPROYECTO_ObtenerDatosPaginacionVOttAnteproyecto(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttAnteproyecto As New DalOttAnteproyecto(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOttAnteproyecto.ObtenerDatosPaginacionVOttAnteproyecto(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTT_ANTEPROYECTOLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>29/02/2016 11:00:10 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ANTEPROYECTO_ListarRegistrosLista(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttAnteproyecto As New DalOttAnteproyecto(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOttAnteproyecto.ListarRegistrosLista(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTT_ANTEPROYECTOLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>29/02/2016 11:00:10 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ANTEPROYECTO_ObtenerDatosPaginacionVOttAnteproyectolst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttAnteproyecto As New DalOttAnteproyecto(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOttAnteproyecto.ObtenerDatosPaginacionVOttAnteproyectolst(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene un registro de la tabla OTT_ANTEPROYECTO según el criterio indicado
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <returns>Entidad que representa la información obtenida al ejecutar la consulta</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>29/02/2016 11:00:10 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ANTEPROYECTO_ObtenerRegistro(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String) As EntOttAnteproyecto
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttAnteproyecto As New DalOttAnteproyecto(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOttAnteproyecto.ObtenerRegistro(pvc_Condicion)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTTH_ANTEPROYECTO según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>29/02/2016 11:00:10 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ANTEPROYECTO_ListarVOtthAnteproyecto(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttAnteproyecto As New DalOttAnteproyecto(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOttAnteproyecto.ListarVOtthAnteproyecto(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTTH_ANTEPROYECTO según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>29/02/2016 11:00:10 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ANTEPROYECTO_ObtenerDatosPaginacionVOtthAnteproyecto(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttAnteproyecto As New DalOttAnteproyecto(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOttAnteproyecto.ObtenerDatosPaginacionVOtthAnteproyecto(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function



#End Region

#Region "OTT_DOCUMENTO_ANTEPROYECT"
    ''' <summary>
    ''' Permite agregar un registro en la tabla OTT_DOCUMENTO_ANTEPROYECT
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>29/02/2016 11:26:35 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_DOCUMENTO_ANTEPROYECT_InsertarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttDocumentoAnteproyect) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttDocumentoAnteproyect As New BllOttDocumentoAnteproyect(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_INSERTAR)

            Return vlo_BllOttDocumentoAnteproyect.InsertarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTT_DOCUMENTO_ANTEPROYECT
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>29/02/2016 11:26:35 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_DOCUMENTO_ANTEPROYECT_BorrarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttDocumentoAnteproyect) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttDocumentoAnteproyect As New DalOttDocumentoAnteproyect(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_BORRAR)

            Return vlo_DalOttDocumentoAnteproyect.BorrarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTT_DOCUMENTO_ANTEPROYECT
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>29/02/2016 11:26:35 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_DOCUMENTO_ANTEPROYECT_ModificarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttDocumentoAnteproyect) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttDocumentoAnteproyect As New DalOttDocumentoAnteproyect(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_MODIFICAR)

            Return vlo_DalOttDocumentoAnteproyect.ModificarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTT_DOCUMENTO_ANTEPROYECT según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>29/02/2016 11:26:35 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_DOCUMENTO_ANTEPROYECT_ListarRegistros(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttDocumentoAnteproyect As New DalOttDocumentoAnteproyect(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttDocumentoAnteproyect.ListarRegistros(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTT_DOCUMENTO_ANTEPROYECT según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>29/02/2016 11:26:35 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_DOCUMENTO_ANTEPROYECT_ObtenerDatosPaginacionVOttDocumentoAnteproyect(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttDocumentoAnteproyect As New DalOttDocumentoAnteproyect(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttDocumentoAnteproyect.ObtenerDatosPaginacionVOttDocumentoAnteproyect(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTT_DOCUMENTO_ANTEPROYECTLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>29/02/2016 11:26:35 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_DOCUMENTO_ANTEPROYECT_ListarRegistrosLista(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttDocumentoAnteproyect As New DalOttDocumentoAnteproyect(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttDocumentoAnteproyect.ListarRegistrosLista(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTT_DOCUMENTO_ANTEPROYECTLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>29/02/2016 11:26:35 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_DOCUMENTO_ANTEPROYECT_ObtenerDatosPaginacionVOttDocumentoAnteproyectlst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttDocumentoAnteproyect As New DalOttDocumentoAnteproyect(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttDocumentoAnteproyect.ObtenerDatosPaginacionVOttDocumentoAnteproyectlst(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene un registro de la tabla OTT_DOCUMENTO_ANTEPROYECT según el criterio indicado
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <returns>Entidad que representa la información obtenida al ejecutar la consulta</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>29/02/2016 11:26:35 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_DOCUMENTO_ANTEPROYECT_ObtenerRegistro(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String) As EntOttDocumentoAnteproyect
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttDocumentoAnteproyect As New DalOttDocumentoAnteproyect(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttDocumentoAnteproyect.ObtenerRegistro(pvc_Condicion)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTTH_DOCUMENTO_ANTEPROYECT según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>29/02/2016 11:26:35 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_DOCUMENTO_ANTEPROYECT_ListarVOtthDocumentoAnteproyect(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttDocumentoAnteproyect As New DalOttDocumentoAnteproyect(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttDocumentoAnteproyect.ListarVOtthDocumentoAnteproyect(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTTH_DOCUMENTO_ANTEPROYECT según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>29/02/2016 11:26:35 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_DOCUMENTO_ANTEPROYECT_ObtenerDatosPaginacionVOtthDocumentoAnteproyect(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttDocumentoAnteproyect As New DalOttDocumentoAnteproyect(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttDocumentoAnteproyect.ObtenerDatosPaginacionVOtthDocumentoAnteproyect(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

#End Region

#Region "OTT_DESICION_INICIAL"
    ''' <summary>
    ''' Permite agregar un registro en la tabla OTT_DESICION_INICIAL
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>17/03/2016 08:50:33 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_DESICION_INICIAL_InsertarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttDesicionInicial) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttDesicionInicial As New BllOttDesicionInicial(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_INSERTAR)

            Return vlo_BllOttDesicionInicial.InsertarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTT_DESICION_INICIAL
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>17/03/2016 08:50:33 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_DESICION_INICIAL_BorrarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttDesicionInicial) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttDesicionInicial As New BllOttDesicionInicial(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_BORRAR)

            Return vlo_BllOttDesicionInicial.BorrarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTT_DESICION_INICIAL
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>17/03/2016 08:50:33 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_DESICION_INICIAL_ModificarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttDesicionInicial) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttDesicionInicial As New DalOttDesicionInicial(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_MODIFICAR)

            Return vlo_DalOttDesicionInicial.ModificarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTT_DESICION_INICIAL según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>17/03/2016 08:50:33 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_DESICION_INICIAL_ListarRegistros(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttDesicionInicial As New DalOttDesicionInicial(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttDesicionInicial.ListarRegistros(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTT_DESICION_INICIAL según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>17/03/2016 08:50:33 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_DESICION_INICIAL_ObtenerDatosPaginacionVOttDesicionInicial(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttDesicionInicial As New DalOttDesicionInicial(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttDesicionInicial.ObtenerDatosPaginacionVOttDesicionInicial(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTT_DESICION_INICIALLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>17/03/2016 08:50:33 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_DESICION_INICIAL_ListarRegistrosLista(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttDesicionInicial As New DalOttDesicionInicial(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttDesicionInicial.ListarRegistrosLista(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTT_DESICION_INICIALLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>17/03/2016 08:50:33 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_DESICION_INICIAL_ObtenerDatosPaginacionVOttDesicionIniciallst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttDesicionInicial As New DalOttDesicionInicial(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttDesicionInicial.ObtenerDatosPaginacionVOttDesicionIniciallst(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene un registro de la tabla OTT_DESICION_INICIAL según el criterio indicado
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <returns>Entidad que representa la información obtenida al ejecutar la consulta</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>17/03/2016 08:50:33 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_DESICION_INICIAL_ObtenerRegistro(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String) As EntOttDesicionInicial
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttDesicionInicial As New DalOttDesicionInicial(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttDesicionInicial.ObtenerRegistro(pvc_Condicion)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTTH_DESICION_INICIAL según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>17/03/2016 08:50:33 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_DESICION_INICIAL_ListarVOtthDesicionInicial(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttDesicionInicial As New DalOttDesicionInicial(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttDesicionInicial.ListarVOtthDesicionInicial(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTTH_DESICION_INICIAL según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>17/03/2016 08:50:33 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_DESICION_INICIAL_ObtenerDatosPaginacionVOtthDesicionInicial(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttDesicionInicial As New DalOttDesicionInicial(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttDesicionInicial.ObtenerDatosPaginacionVOtthDesicionInicial(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

#End Region

#Region "OTT_ORDN_TRAB_DEC_INICIAL"
    ''' <summary>
    ''' Permite agregar un registro en la tabla OTT_ORDN_TRAB_DEC_INICIAL
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>31/03/2016 08:44:56 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ORDN_TRAB_DEC_INICIAL_InsertarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttOrdnTrabDecInicial) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttOrdnTrabDecInicial As New BllOttOrdnTrabDecInicial(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_INSERTAR)

            Return vlo_BllOttOrdnTrabDecInicial.InsertarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite agregar un dataset en la tabla OTT_ORDN_TRAB_DEC_INICIAL, y un registro en ott_desicion_inicial
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Carlos Gómez Ondoy</author>
    ''' <creationDate>31/03/2016</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ORDN_TRAB_DEC_INICIAL_InsertarDesicionInicialConDetalles(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_DesicionInicial As EntOttDesicionInicial, pvo_DsOrdenTrabDecInic As Data.DataSet) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttOrdnTrabDecInicial As New BllOttOrdnTrabDecInicial(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_INSERTAR)

            Return vlo_BllOttOrdnTrabDecInicial.InsertarDesicionInicialConDetalles(pvo_DesicionInicial, pvo_DsOrdenTrabDecInic)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function


    ''' <summary>
    ''' Permite modificar un dataset en la tabla OTT_ORDN_TRAB_DEC_INICIAL, y modificar registro en ott_desicion_inicial
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Carlos Gómez Ondoy</author>
    ''' <creationDate>31/03/2016</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ORDN_TRAB_DEC_INICIAL_ModificarDesicionInicialConDetalles(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_DesicionInicial As EntOttDesicionInicial, pvo_DsOrdenTrabDecInic As Data.DataSet) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttOrdnTrabDecInicial As New BllOttOrdnTrabDecInicial(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_INSERTAR)

            Return vlo_BllOttOrdnTrabDecInicial.ModificarDesicionInicialConDetalles(pvo_DesicionInicial, pvo_DsOrdenTrabDecInic)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTT_ORDN_TRAB_DEC_INICIAL
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>31/03/2016 08:44:56 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ORDN_TRAB_DEC_INICIAL_BorrarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttOrdnTrabDecInicial) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttOrdnTrabDecInicial As New DalOttOrdnTrabDecInicial(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_BORRAR)

            Return vlo_DalOttOrdnTrabDecInicial.BorrarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTT_ORDN_TRAB_DEC_INICIAL
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>31/03/2016 08:44:56 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ORDN_TRAB_DEC_INICIAL_ModificarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttOrdnTrabDecInicial) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttOrdnTrabDecInicial As New DalOttOrdnTrabDecInicial(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_MODIFICAR)

            Return vlo_DalOttOrdnTrabDecInicial.ModificarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTT_ORDN_TRAB_DEC_INICIAL según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>31/03/2016 08:44:56 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ORDN_TRAB_DEC_INICIAL_ListarRegistros(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttOrdnTrabDecInicial As New DalOttOrdnTrabDecInicial(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttOrdnTrabDecInicial.ListarRegistros(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTT_ORDN_TRAB_DEC_INICIALLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>31/03/2016 08:44:56 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ORDN_TRAB_DEC_INICIAL_ListarRegistrosLista(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttOrdnTrabDecInicial As New DalOttOrdnTrabDecInicial(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttOrdnTrabDecInicial.ListarRegistrosLista(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene un registro de la tabla OTT_ORDN_TRAB_DEC_INICIAL según el criterio indicado
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <returns>Entidad que representa la información obtenida al ejecutar la consulta</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>31/03/2016 08:44:56 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ORDN_TRAB_DEC_INICIAL_ObtenerRegistro(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String) As EntOttOrdnTrabDecInicial
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttOrdnTrabDecInicial As New DalOttOrdnTrabDecInicial(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttOrdnTrabDecInicial.ObtenerRegistro(pvc_Condicion)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTTH_ORDN_TRAB_DEC_INICIAL según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>31/03/2016 08:44:56 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ORDN_TRAB_DEC_INICIAL_ListarVOtthOrdnTrabDecInicial(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttOrdnTrabDecInicial As New DalOttOrdnTrabDecInicial(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttOrdnTrabDecInicial.ListarVOtthOrdnTrabDecInicial(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTTH_ORDN_TRAB_DEC_INICIAL según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>31/03/2016 08:44:56 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ORDN_TRAB_DEC_INICIAL_ObtenerDatosPaginacionVOtthOrdnTrabDecInicial(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttOrdnTrabDecInicial As New DalOttOrdnTrabDecInicial(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttOrdnTrabDecInicial.ObtenerDatosPaginacionVOtthOrdnTrabDecInicial(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTT_ORDN_TRAB_DEC_INICIAL según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>31/03/2016 08:44:56 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ORDN_TRAB_DEC_INICIAL_ListarVOttOrdnTrabDecInicial(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttOrdnTrabDecInicial As New DalOttOrdnTrabDecInicial(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttOrdnTrabDecInicial.ListarVOttOrdnTrabDecInicial(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTT_ORDN_TRAB_DEC_INICIAL según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>31/03/2016 08:44:56 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ORDN_TRAB_DEC_INICIAL_ObtenerDatosPaginacionVOttOrdnTrabDecInicial(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttOrdnTrabDecInicial As New DalOttOrdnTrabDecInicial(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttOrdnTrabDecInicial.ObtenerDatosPaginacionVOttOrdnTrabDecInicial(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTT_ORDN_TRAB_DEC_INICIALLST según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>31/03/2016 08:44:56 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ORDN_TRAB_DEC_INICIAL_ListarVOttOrdnTrabDecIniciallst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttOrdnTrabDecInicial As New DalOttOrdnTrabDecInicial(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttOrdnTrabDecInicial.ListarVOttOrdnTrabDecIniciallst(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTT_ORDN_TRAB_DEC_INICIALLST según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>31/03/2016 08:44:56 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ORDN_TRAB_DEC_INICIAL_ObtenerDatosPaginacionVOttOrdnTrabDecIniciallst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttOrdnTrabDecInicial As New DalOttOrdnTrabDecInicial(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttOrdnTrabDecInicial.ObtenerDatosPaginacionVOttOrdnTrabDecIniciallst(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

#End Region

#Region "OTT_INFORME_PRESUPUESTO"


    ''' <summary>
    ''' Permite agregar un registro en la tabla OTT_INFORME_PRESUPUESTO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Carlos Gomez Ondoy</author>
    ''' <creationDate>06/04/2016</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_INFORME_PRESUPUESTO_InsertarInforme(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttInformePresupuesto, pvb_CambiarEstado As Boolean, pvc_NombreUsuario As String) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttInformePresupuesto As New BllOttInformePresupuesto(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_INSERTAR)

            Return vlo_BllOttInformePresupuesto.InsertarInforme(pvo_Registro, pvb_CambiarEstado, pvc_NombreUsuario)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite modificar un registro en la tabla OTT_INFORME_PRESUPUESTO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    '''  <author>Carlos Gomez Ondoy</author>
    ''' <creationDate>06/04/2016</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_INFORME_PRESUPUESTO_ModificarInforme(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttInformePresupuesto, pvb_CambiarEstado As Boolean, pvc_NombreUsuario As String) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttViabilidadTecnica As New BllOttInformePresupuesto(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_INSERTAR)

            Return vlo_BllOttViabilidadTecnica.ModificarInforme(pvo_Registro, pvb_CambiarEstado, pvc_NombreUsuario)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite agregar un registro en la tabla OTT_INFORME_PRESUPUESTO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>06/04/2016 09:13:01 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_INFORME_PRESUPUESTO_InsertarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttInformePresupuesto) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttInformePresupuesto As New BllOttInformePresupuesto(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_INSERTAR)

            Return vlo_BllOttInformePresupuesto.InsertarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTT_INFORME_PRESUPUESTO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>06/04/2016 09:13:01 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_INFORME_PRESUPUESTO_BorrarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttInformePresupuesto) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttInformePresupuesto As New DalOttInformePresupuesto(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_BORRAR)

            Return vlo_DalOttInformePresupuesto.BorrarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTT_INFORME_PRESUPUESTO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>06/04/2016 09:13:01 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_INFORME_PRESUPUESTO_ModificarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttInformePresupuesto) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttInformePresupuesto As New DalOttInformePresupuesto(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_MODIFICAR)

            Return vlo_DalOttInformePresupuesto.ModificarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTT_INFORME_PRESUPUESTO según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>06/04/2016 09:13:01 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_INFORME_PRESUPUESTO_ListarRegistros(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttInformePresupuesto As New DalOttInformePresupuesto(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttInformePresupuesto.ListarRegistros(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTT_INFORME_PRESUPUESTOLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>06/04/2016 09:13:01 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_INFORME_PRESUPUESTO_ListarRegistrosLista(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttInformePresupuesto As New DalOttInformePresupuesto(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttInformePresupuesto.ListarRegistrosLista(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene un registro de la tabla OTT_INFORME_PRESUPUESTO según el criterio indicado
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <returns>Entidad que representa la información obtenida al ejecutar la consulta</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>06/04/2016 09:13:01 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_INFORME_PRESUPUESTO_ObtenerRegistro(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String) As EntOttInformePresupuesto
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttInformePresupuesto As New DalOttInformePresupuesto(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttInformePresupuesto.ObtenerRegistro(pvc_Condicion)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTTH_INFORME_PRESUPUESTO según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>06/04/2016 09:13:01 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_INFORME_PRESUPUESTO_ListarVOtthInformePresupuesto(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttInformePresupuesto As New DalOttInformePresupuesto(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttInformePresupuesto.ListarVOtthInformePresupuesto(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTTH_INFORME_PRESUPUESTO según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>06/04/2016 09:13:01 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_INFORME_PRESUPUESTO_ObtenerDatosPaginacionVOtthInformePresupuesto(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttInformePresupuesto As New DalOttInformePresupuesto(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttInformePresupuesto.ObtenerDatosPaginacionVOtthInformePresupuesto(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTT_INFORME_PRESUPUESTO según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>06/04/2016 09:13:01 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_INFORME_PRESUPUESTO_ListarVOttInformePresupuesto(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttInformePresupuesto As New DalOttInformePresupuesto(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttInformePresupuesto.ListarVOttInformePresupuesto(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTT_INFORME_PRESUPUESTO según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>06/04/2016 09:13:01 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_INFORME_PRESUPUESTO_ObtenerDatosPaginacionVOttInformePresupuesto(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttInformePresupuesto As New DalOttInformePresupuesto(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttInformePresupuesto.ObtenerDatosPaginacionVOttInformePresupuesto(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTT_INFORME_PRESUPUESTOLST según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>06/04/2016 09:13:01 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_INFORME_PRESUPUESTO_ListarVOttInformePresupuestolst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttInformePresupuesto As New DalOttInformePresupuesto(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttInformePresupuesto.ListarVOttInformePresupuestolst(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTT_INFORME_PRESUPUESTOLST según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>06/04/2016 09:13:01 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_INFORME_PRESUPUESTO_ObtenerDatosPaginacionVOttInformePresupuestolst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttInformePresupuesto As New DalOttInformePresupuesto(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttInformePresupuesto.ObtenerDatosPaginacionVOttInformePresupuestolst(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Guarda la aprobacion o reprobacion del presupuesto
    ''' </summary>
    ''' <param name="pvc_Usuario"></param>
    ''' <param name="pvc_Clave"></param>
    ''' <param name="pvo_EntOttAdjuntoOrdenTrabajo"></param>
    ''' <param name="pvb_Respuesta"></param>
    ''' <param name="pvo_UsuariosConRole"></param>
    ''' <returns></returns>
    ''' <remarks></remarks>
    ''' <author>Cesar Bermudez G</author>
    ''' <creationDate>17/03/2016</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_INFORME_PRESUPUESTO_GuardarAprobacionPresupuesto(pvc_Usuario As String, pvc_Clave As String, pvo_EntOttAdjuntoOrdenTrabajo As EntOttAdjuntoOrdenTrabajo, pvb_Respuesta As Boolean, pvo_UsuariosConRole As String()) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttInformePresupuesto As New BllOttInformePresupuesto(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_BllOttInformePresupuesto.GuardarAprobacionPresupuestaria(pvo_EntOttAdjuntoOrdenTrabajo, pvb_Respuesta, pvo_UsuariosConRole)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

#End Region

#Region "OTH_CONTRATACION"
    ''' <summary>
    ''' Permite agregar un registro en la tabla OTH_CONTRATACION
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>14/04/2016 09:56:09 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTH_CONTRATACION_InsertarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOthContratacion) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOthContratacion As New BllOthContratacion(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_INSERTAR)

            Return vlo_BllOthContratacion.InsertarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTH_CONTRATACION
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>14/04/2016 09:56:09 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTH_CONTRATACION_BorrarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOthContratacion) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOthContratacion As New BllOthContratacion(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_BORRAR)

            Return vlo_BllOthContratacion.BorrarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTH_CONTRATACION
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>14/04/2016 09:56:09 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTH_CONTRATACION_ModificarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOthContratacion) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOthContratacion As New DalOthContratacion(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_MODIFICAR)

            Return vlo_DalOthContratacion.ModificarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTH_CONTRATACION según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>14/04/2016 09:56:09 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTH_CONTRATACION_ListarRegistros(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOthContratacion As New DalOthContratacion(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOthContratacion.ListarRegistros(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTH_CONTRATACION según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>14/04/2016 09:56:09 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTH_CONTRATACION_ObtenerDatosPaginacionVOthContratacion(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOthContratacion As New DalOthContratacion(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOthContratacion.ObtenerDatosPaginacionVOthContratacion(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTH_CONTRATACIONLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>14/04/2016 09:56:09 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTH_CONTRATACION_ListarRegistrosLista(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOthContratacion As New DalOthContratacion(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOthContratacion.ListarRegistrosLista(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTH_CONTRATACIONLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>14/04/2016 09:56:09 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTH_CONTRATACION_ObtenerDatosPaginacionVOthContratacionlst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOthContratacion As New DalOthContratacion(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOthContratacion.ObtenerDatosPaginacionVOthContratacionlst(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene un registro de la tabla OTH_CONTRATACION según el criterio indicado
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <returns>Entidad que representa la información obtenida al ejecutar la consulta</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>14/04/2016 09:56:09 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTH_CONTRATACION_ObtenerRegistro(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String) As EntOthContratacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOthContratacion As New DalOthContratacion(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOthContratacion.ObtenerRegistro(pvc_Condicion)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

#End Region

#Region "OTT_CONTRATACION"
    ''' <summary>
    ''' Permite agregar un registro en la tabla OTT_CONTRATACION
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>14/04/2016 09:56:09 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_CONTRATACION_InsertarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttContratacion) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttContratacion As New BllOttContratacion(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_INSERTAR)

            Return vlo_BllOttContratacion.InsertarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTT_CONTRATACION
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>14/04/2016 09:56:09 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_CONTRATACION_BorrarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttContratacion) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttContratacion As New BllOttContratacion(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_BORRAR)

            Return vlo_BllOttContratacion.BorrarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTT_CONTRATACION
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>14/04/2016 09:56:09 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_CONTRATACION_ModificarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttContratacion) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttContratacion As New DalOttContratacion(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_MODIFICAR)

            Return vlo_DalOttContratacion.ModificarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTT_CONTRATACION según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>14/04/2016 09:56:09 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_CONTRATACION_ListarRegistros(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttContratacion As New DalOttContratacion(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttContratacion.ListarRegistros(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTT_CONTRATACION según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>14/04/2016 09:56:09 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_CONTRATACION_ObtenerDatosPaginacionVOttContratacion(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttContratacion As New DalOttContratacion(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttContratacion.ObtenerDatosPaginacionVOttContratacion(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTT_CONTRATACIONLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>14/04/2016 09:56:09 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_CONTRATACION_ListarRegistrosLista(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttContratacion As New DalOttContratacion(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttContratacion.ListarRegistrosLista(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTT_CONTRATACIONLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>14/04/2016 09:56:09 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_CONTRATACION_ObtenerDatosPaginacionVOttContratacionlst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttContratacion As New DalOttContratacion(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttContratacion.ObtenerDatosPaginacionVOttContratacionlst(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene un registro de la tabla OTT_CONTRATACION según el criterio indicado
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <returns>Entidad que representa la información obtenida al ejecutar la consulta</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>14/04/2016 09:56:09 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_CONTRATACION_ObtenerRegistro(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String) As EntOttContratacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttContratacion As New DalOttContratacion(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttContratacion.ObtenerRegistro(pvc_Condicion)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTTH_CONTRATACION según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>14/04/2016 09:56:09 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_CONTRATACION_ListarVOtthContratacion(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttContratacion As New DalOttContratacion(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttContratacion.ListarVOtthContratacion(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTTH_CONTRATACION según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>14/04/2016 09:56:09 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_CONTRATACION_ObtenerDatosPaginacionVOtthContratacion(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttContratacion As New DalOttContratacion(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttContratacion.ObtenerDatosPaginacionVOtthContratacion(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene el ultimo orden, esto para insertar un espacio al final de la lista
    ''' </summary>
    ''' <param name="pvc_Usuario"></param>
    ''' <param name="pvc_Clave"></param>
    ''' <returns>El vaalor del último orden presente en la tabla espacios</returns>
    ''' <remarks></remarks>
    ''' <author>Cesar Bermudez</author>
    ''' <creationDate>18/04/2015 08:34:25 a.m.</creationDate>
    ''' <changeLog></changeLog>
    ''' 
    <WebMethod()> _
    Public Function OTT_CONTRATACION_ObtenerIdViaContratacion(pvc_Usuario As String, pvc_Clave As String, pvn_Monto As Integer) As Double
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttContratacion As New DalOttContratacion(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOttContratacion.IdViaSugerencia(pvn_Monto)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Genera una nueva version de la contratacion
    ''' </summary>
    ''' <param name="pvc_Usuario"></param>
    ''' <param name="pvc_Clave"></param>
    ''' <param name="pvc_Condicion"></param>
    ''' <param name="pvo_Registro"></param>
    ''' <param name="pvc_estado"></param>
    ''' <returns></returns>
    ''' <remarks></remarks>
    ''' <author>César Bermudez Garcia</author>
    ''' <creationDate>15/04/2016</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_CONTRATACION_NuevaVersion(pvc_Usuario As String, pvc_Clave As String, pvo_Registro As EntOttContratacion, pvc_estado As String, pvn_etapaActual As Integer, pvc_etapaActual As String, pvn_NumEmpleado As Integer) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttContratacion As New BllOttContratacion(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_BllOttContratacion.GuardarNuevaVersion(pvo_Registro, pvc_estado, pvn_etapaActual, pvc_etapaActual, pvn_NumEmpleado)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Genera una nueva version de la contratacion
    ''' </summary>
    ''' <param name="pvc_Usuario"></param>
    ''' <param name="pvc_Clave"></param>
    ''' <param name="pvc_Condicion"></param>
    ''' <param name="pvo_Registro"></param>
    ''' <param name="pvc_estado"></param>
    ''' <returns></returns>
    ''' <remarks></remarks>
    ''' <author>César Bermudez Garcia</author>
    ''' <creationDate>19/04/2016</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_CONTRATACION_DevolverExpediente(pvc_Usuario As String, pvc_Clave As String, pvo_Registro As EntOttOrdenTrabajo, pvo_Contratacion As EntOttContratacion, pvn_NumEmpleado As Integer, pvc_Motivo As String) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttContratacion As New BllOttContratacion(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_BllOttContratacion.DevolverExpediente(pvo_Registro, pvo_Contratacion, pvn_NumEmpleado, pvc_Motivo)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Cierra la etapa de expediente tecnico
    ''' </summary>
    ''' <param name="pvc_Usuario"></param>
    ''' <param name="pvc_Clave"></param>
    ''' <param name="pvo_Registro"></param>
    ''' <returns></returns>
    ''' <remarks></remarks>
    ''' <author>César Bermudez Garcia</author>
    ''' <creationDate>19/04/2016</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()>
    Public Function OTT_CONTRATACION_CerrarEtapaExpedienteTecnico(pvc_Usuario As String, pvc_Clave As String, pvo_RegistroOrden As EntOttOrdenTrabajo, pvo_Contratacion As EntOttContratacion, pvn_numEmpleado As Integer, pvn_idEtapaActual As Integer) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttContratacion As New BllOttContratacion(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_BllOttContratacion.CerrarExpediente(pvo_RegistroOrden, pvo_Contratacion, pvn_numEmpleado, pvn_idEtapaActual)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Cierra la etapa de expediente tecnico
    ''' </summary>
    ''' <param name="pvc_Usuario"></param>
    ''' <param name="pvc_Clave"></param>
    ''' <param name="pvo_Registro"></param>
    ''' <returns></returns>
    ''' <remarks></remarks>
    ''' <author>César Bermudez Garcia</author>
    ''' <creationDate>29/04/2016</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()>
    Public Function OTT_CONTRATACION_GuardarYCerrarEtapaRecomendacion(pvc_Usuario As String, pvc_Clave As String, pvo_ArchivoRecomendacion As EntOttAdjuntoOrdenTrabajo, pvc_idOrdenTrabajo As String, pvn_idUbicacion As Integer, pvn_numEmpleado As Integer, pvn_Etapa As Integer, pvb_Infructuosa As Boolean, pvn_Version As Integer) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttContratacion As New BllOttContratacion(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_BllOttContratacion.CerrarRecomendacionTecnica(pvo_ArchivoRecomendacion, pvc_idOrdenTrabajo, pvn_idUbicacion, pvn_numEmpleado, pvn_Etapa, pvb_Infructuosa, pvn_Version)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Cierra la etapa de expediente tecnico
    ''' </summary>
    ''' <param name="pvc_Usuario"></param>
    ''' <param name="pvc_Clave"></param>
    ''' <returns></returns>
    ''' <remarks></remarks>
    ''' <author>César Bermudez Garcia</author>
    ''' <creationDate>19/04/2016</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()>
    Public Function OTT_CONTRATACION_GuardarYCerrarEtapaInicio(pvc_Usuario As String, pvc_Clave As String, pvo_Contratacion As EntOttContratacion, pvo_ordenTrabajo As EntOttOrdenTrabajo, pvn_numEmpleado As Integer, pvn_Etapa As Integer) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttContratacion As New BllOttContratacion(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_BllOttContratacion.GuardarInicio(pvo_Contratacion, pvo_ordenTrabajo, pvn_numEmpleado, pvn_Etapa)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Cierra la etapa de expediente tecnico
    ''' </summary>
    ''' <param name="pvc_Usuario"></param>
    ''' <param name="pvc_Clave"></param>
    ''' <param name="pvo_Registro"></param>
    ''' <returns></returns>
    ''' <remarks></remarks>
    ''' <author>César Bermudez Garcia</author>
    ''' <creationDate>21/04/2016</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()>
    Public Function OTT_CONTRATACION_GuardarYCerrarEtapaCartel(pvc_Usuario As String, pvc_Clave As String, pvo_ArchivoCartel As EntOttAdjuntoOrdenTrabajo, pvo_Contratacion As EntOttContratacion, pvo_ordenTrabajo As EntOttOrdenTrabajo, pvn_numEmpleado As Integer, pvn_Etapa As Integer) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttContratacion As New BllOttContratacion(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_BllOttContratacion.GuardarCartel(pvo_ArchivoCartel, pvo_Contratacion, pvo_ordenTrabajo, pvn_numEmpleado, pvn_Etapa)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Cierra la etapa de expediente tecnico
    ''' </summary>
    ''' <param name="pvc_Usuario"></param>
    ''' <param name="pvc_Clave"></param>
    ''' <param name="pvo_Registro"></param>
    ''' <returns></returns>
    ''' <remarks></remarks>
    ''' <author>César Bermudez Garcia</author>
    ''' <creationDate>27/04/2016</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()>
    Public Function OTT_CONTRATACION_CerrarEtapaOfertas(pvc_Usuario As String, pvc_Clave As String, pvc_idOrdenTrabajo As String, pvn_idUbicacion As Integer, pvn_numEmpleado As Integer, pvn_Etapa As Integer, pvb_Desierta As Boolean, pvn_Version As Integer) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttContratacion As New BllOttContratacion(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_BllOttContratacion.CerrarOfertas(pvc_idOrdenTrabajo, pvn_idUbicacion, pvn_numEmpleado, pvn_Etapa, pvb_Desierta, pvn_Version)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Cierra la etapa de expediente tecnico
    ''' </summary>
    ''' <param name="pvc_Usuario"></param>
    ''' <param name="pvc_Clave"></param>
    ''' <param name="pvo_Registro"></param>
    ''' <returns></returns>
    ''' <remarks></remarks>
    ''' <author>César Bermudez Garcia</author>
    ''' <creationDate>25/04/2016</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()>
    Public Function OTT_CONTRATACION_CerrarEtapaAclaraciones(pvc_Usuario As String, pvc_Clave As String, pvc_idOrdenTrabajo As String, pvn_idUbicacion As Integer, pvn_numEmpleado As Integer, pvn_Etapa As Integer, pvn_Version As Integer) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttContratacion As New BllOttContratacion(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_BllOttContratacion.CerrarAclaraciones(pvc_idOrdenTrabajo, pvn_idUbicacion, pvn_numEmpleado, pvn_Etapa, pvn_Version)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Cierra la etapa de adjudicacion
    ''' </summary>
    ''' <param name="pvc_Usuario"></param>
    ''' <param name="pvc_Clave"></param>
    ''' <param name="pvo_Registro"></param>
    ''' <returns></returns>
    ''' <remarks></remarks>
    ''' <author>César Bermudez Garcia</author>
    ''' <creationDate>09/05/2016</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()>
    Public Function OTT_CONTRATACION_GuardarAdjudicacion(pvc_Usuario As String, pvc_Clave As String, pvo_Registro As EntOttOrdenTrabajo, pvn_numEmpleado As Integer) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttContratacion As New BllOttContratacion(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_BllOttContratacion.CerrarAdjudicacion(pvo_Registro, pvn_numEmpleado)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Cierra la etapa de expediente tecnico
    ''' </summary>
    ''' <param name="pvc_Usuario"></param>
    ''' <param name="pvc_Clave"></param>
    ''' <param name="pvo_Registro"></param>
    ''' <returns></returns>
    ''' <remarks></remarks>
    ''' <author>César Bermudez Garcia</author>
    ''' <creationDate>25/04/2016</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()>
    Public Function OTT_CONTRATACION_AceptarVisitaTecnica(pvc_Usuario As String, pvc_Clave As String, pvo_Archivo As EntOttAdjuntoOrdenTrabajo, pvo_Contratacion As EntOttContratacion, pvo_ordenTrabajo As EntOttOrdenTrabajo, pvn_numEmpleado As Integer, pvn_Etapa As Integer) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttContratacion As New BllOttContratacion(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_BllOttContratacion.AceptarVisitaTecnica(pvo_Archivo, pvo_Contratacion, pvo_ordenTrabajo, pvn_numEmpleado, pvn_Etapa)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function


#End Region

#Region "OTT_DOCUMENTO_CONTRATACION"

    ''' <summary>
    ''' Permite agregar un registro en la tabla OTT_CONTRATACION
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>14/04/2016 09:56:09 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_DOCUMENTO_CONTRATACION_InsertarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttDocumentoContratacion) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttDocumentoContratacion As New BllOttDocumentoContratacion(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_INSERTAR)

            Return vlo_BllOttDocumentoContratacion.InsertarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTT_CONTRATACION
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>14/04/2016 09:56:09 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_DOCUMENTO_CONTRATACION_BorrarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttDocumentoContratacion) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttDocumentoContratacion As New DalOttDocumentoContratacion(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_BORRAR)

            Return vlo_DalOttDocumentoContratacion.BorrarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function


    ''' <summary>
    ''' Obtiene los registros de la vista V_OTT_DOCUMENTO_CONTRATACION según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>20/04/2016 03:47:59 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_DOCUMENTO_CONTRATACION_ListarVOttDocumentoContratacion(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttDocumentoContratacion As New DalOttDocumentoContratacion(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttDocumentoContratacion.ListarRegistros(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function


    ''' <summary>
    ''' Permite borrar un registro en la tabla OTT_CONTRATACION
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>14/04/2016 09:56:09 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_DOCUMENTO_CONTRATACION_ModificarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttDocumentoContratacion) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttDocumentoContratacion As New DalOttDocumentoContratacion(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_MODIFICAR)

            Return vlo_DalOttDocumentoContratacion.ModificarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene un registro de la tabla OTT_CONTRATACION según el criterio indicado
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <returns>Entidad que representa la información obtenida al ejecutar la consulta</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>14/04/2016 09:56:09 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_DOCUMENTO_CONTRATACION_ObtenerRegistro(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String) As EntOttDocumentoContratacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttDocumentoContratacion As New DalOttDocumentoContratacion(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttDocumentoContratacion.ObtenerRegistro(pvc_Condicion)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTT_DOCUMENTO_CONTRATACION según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>20/04/2016 03:47:59 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_DOCUMENTO_CONTRATACION_ObtenerDatosPaginacionVOttDocumentoContratacion(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttDocumentoContratacion As New DalOttDocumentoContratacion(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttDocumentoContratacion.ObtenerDatosPaginacionVOttDocumentoContratacion(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTT_DOCUMENTO_CONTRATLST según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>20/04/2016 03:47:59 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_DOCUMENTO_CONTRATACION_ListarRegistrosLista(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttDocumentoContratacion As New DalOttDocumentoContratacion(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttDocumentoContratacion.ListarRegistrosLista(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTT_DOCUMENTO_CONTRATLST según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>20/04/2016 03:47:59 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_DOCUMENTO_CONTRATACION_ObtenerDatosPaginacionVOttDocumentoContratlst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttDocumentoContratacion As New DalOttDocumentoContratacion(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttDocumentoContratacion.ObtenerDatosPaginacionVOttDocumentoContratacionlst(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

#End Region

#Region "OTF_FICHA_TECNICA_DETALLE"

    ''' <summary>
    ''' 
    ''' </summary>
    ''' <param name="pvc_Usuario"></param>
    ''' <param name="pvc_Clave"></param>
    ''' <param name="pvo_DsFichaTecnicaEspacio"></param>
    ''' <param name="pvo_DsFichaTecnicaSubComponente"></param>
    ''' <param name="pvo_DsFichaTecnicaDetalle"></param>
    ''' <param name="pvo_OrdenTrabajo"></param>
    ''' <returns></returns>
    ''' <remarks></remarks>
    <WebMethod()> _
    Public Function OTF_FICHA_TECNICA_DETALLE_InsertarDescripcionesRequerimientosEspaciosPrincipales(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_DsFichaTecnicaEspacio As Data.DataSet, ByVal pvo_DsFichaTecnicaSubComponente As Data.DataSet, ByVal pvo_DsFichaTecnicaDetalle As Data.DataSet, pvo_OrdenTrabajo As EntOtfPreOrdenTrabajo, pvc_Estado As String) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtfFichaTecnicaDetalle As New BllOtfFichaTecnicaDetalle(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_INSERTAR)

            Return vlo_BllOtfFichaTecnicaDetalle.InsertarDescripcionesRequerimientosEspaciosPrincipales(pvo_DsFichaTecnicaEspacio, pvo_DsFichaTecnicaSubComponente, pvo_DsFichaTecnicaDetalle, pvo_OrdenTrabajo, pvc_Estado)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite agregar un registro en la tabla OTF_FICHA_TECNICA_DETALLE
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>14/04/2016 09:20:07 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_FICHA_TECNICA_DETALLE_InsertarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtfFichaTecnicaDetalle) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtfFichaTecnicaDetalle As New BllOtfFichaTecnicaDetalle(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_INSERTAR)

            Return vlo_BllOtfFichaTecnicaDetalle.InsertarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTF_FICHA_TECNICA_DETALLE
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>14/04/2016 09:20:07 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_FICHA_TECNICA_DETALLE_BorrarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtfFichaTecnicaDetalle) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtfFichaTecnicaDetalle As New DalOtfFichaTecnicaDetalle(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_BORRAR)

            Return vlo_DalOtfFichaTecnicaDetalle.BorrarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTF_FICHA_TECNICA_DETALLE
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>14/04/2016 09:20:07 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_FICHA_TECNICA_DETALLE_ModificarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtfFichaTecnicaDetalle) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtfFichaTecnicaDetalle As New DalOtfFichaTecnicaDetalle(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_MODIFICAR)

            Return vlo_DalOtfFichaTecnicaDetalle.ModificarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTF_FICHA_TECNICA_DETALLE según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>14/04/2016 09:20:07 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_FICHA_TECNICA_DETALLE_ListarRegistros(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtfFichaTecnicaDetalle As New DalOtfFichaTecnicaDetalle(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtfFichaTecnicaDetalle.ListarRegistros(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTF_FICHA_TECNICA_DETALLELst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>14/04/2016 09:20:07 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_FICHA_TECNICA_DETALLE_ListarRegistrosLista(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtfFichaTecnicaDetalle As New DalOtfFichaTecnicaDetalle(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtfFichaTecnicaDetalle.ListarRegistrosLista(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function


    ''' <summary>
    ''' Obtiene un registro de la tabla OTF_FICHA_TECNICA_DETALLE según el criterio indicado
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <returns>Entidad que representa la información obtenida al ejecutar la consulta</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>14/04/2016 09:20:07 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_FICHA_TECNICA_DETALLE_ObtenerRegistro(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String) As EntOtfFichaTecnicaDetalle
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtfFichaTecnicaDetalle As New DalOtfFichaTecnicaDetalle(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtfFichaTecnicaDetalle.ObtenerRegistro(pvc_Condicion)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTF_FICHA_TECNICA_DETALLE según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>14/04/2016 09:20:07 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_FICHA_TECNICA_DETALLE_ListarVOtfFichaTecnicaDetalle(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtfFichaTecnicaDetalle As New DalOtfFichaTecnicaDetalle(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtfFichaTecnicaDetalle.ListarVOtfFichaTecnicaDetalle(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTF_FICHA_TECNICA_DETALLE según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>14/04/2016 09:20:07 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_FICHA_TECNICA_DETALLE_ObtenerDatosPaginacionVOtfFichaTecnicaDetalle(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtfFichaTecnicaDetalle As New DalOtfFichaTecnicaDetalle(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtfFichaTecnicaDetalle.ObtenerDatosPaginacionVOtfFichaTecnicaDetalle(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTF_FICHA_TECNICA_DETALLELST según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>14/04/2016 09:20:07 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_FICHA_TECNICA_DETALLE_ListarVOtfFichaTecnicaDetallelst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtfFichaTecnicaDetalle As New DalOtfFichaTecnicaDetalle(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtfFichaTecnicaDetalle.ListarVOtfFichaTecnicaDetallelst(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTF_FICHA_TECNICA_DETALLELST según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>14/04/2016 09:20:07 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_FICHA_TECNICA_DETALLE_ObtenerDatosPaginacionVOtfFichaTecnicaDetallelst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtfFichaTecnicaDetalle As New DalOtfFichaTecnicaDetalle(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtfFichaTecnicaDetalle.ObtenerDatosPaginacionVOtfFichaTecnicaDetallelst(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

#End Region

#Region "OTF_FICHA_TECNICA_ESPACIO"
    ''' <summary>
    ''' Permite agregar un registro en la tabla OTF_FICHA_TECNICA_ESPACIO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>14/04/2016 09:20:07 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_FICHA_TECNICA_ESPACIO_InsertarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtfFichaTecnicaEspacio) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtfFichaTecnicaEspacio As New BllOtfFichaTecnicaEspacio(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_INSERTAR)

            Return vlo_BllOtfFichaTecnicaEspacio.InsertarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTF_FICHA_TECNICA_ESPACIO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>14/04/2016 09:20:07 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_FICHA_TECNICA_ESPACIO_BorrarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtfFichaTecnicaEspacio) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtfFichaTecnicaEspacio As New BllOtfFichaTecnicaEspacio(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_BORRAR)

            Return vlo_BllOtfFichaTecnicaEspacio.BorrarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTF_FICHA_TECNICA_ESPACIO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>14/04/2016 09:20:07 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_FICHA_TECNICA_ESPACIO_ModificarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtfFichaTecnicaEspacio) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtfFichaTecnicaEspacio As New DalOtfFichaTecnicaEspacio(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_MODIFICAR)

            Return vlo_DalOtfFichaTecnicaEspacio.ModificarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTF_FICHA_TECNICA_ESPACIO según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>14/04/2016 09:20:07 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_FICHA_TECNICA_ESPACIO_ListarRegistros(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtfFichaTecnicaEspacio As New DalOtfFichaTecnicaEspacio(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtfFichaTecnicaEspacio.ListarRegistros(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTF_FICHA_TECNICA_ESPACIOLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>14/04/2016 09:20:07 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_FICHA_TECNICA_ESPACIO_ListarRegistrosLista(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtfFichaTecnicaEspacio As New DalOtfFichaTecnicaEspacio(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtfFichaTecnicaEspacio.ListarRegistrosLista(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene un registro de la tabla OTF_FICHA_TECNICA_ESPACIO según el criterio indicado
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <returns>Entidad que representa la información obtenida al ejecutar la consulta</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>14/04/2016 09:20:07 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_FICHA_TECNICA_ESPACIO_ObtenerRegistro(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String) As EntOtfFichaTecnicaEspacio
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtfFichaTecnicaEspacio As New DalOtfFichaTecnicaEspacio(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtfFichaTecnicaEspacio.ObtenerRegistro(pvc_Condicion)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTF_FICHA_TECNICA_ESPACIO según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>14/04/2016 09:20:07 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_FICHA_TECNICA_ESPACIO_ListarVOtfFichaTecnicaEspacio(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtfFichaTecnicaEspacio As New DalOtfFichaTecnicaEspacio(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtfFichaTecnicaEspacio.ListarVOtfFichaTecnicaEspacio(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTF_FICHA_TECNICA_ESPACIO según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>14/04/2016 09:20:07 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_FICHA_TECNICA_ESPACIO_ObtenerDatosPaginacionVOtfFichaTecnicaEspacio(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtfFichaTecnicaEspacio As New DalOtfFichaTecnicaEspacio(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtfFichaTecnicaEspacio.ObtenerDatosPaginacionVOtfFichaTecnicaEspacio(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTF_FICHA_TECNICA_ESPACIOLST según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>14/04/2016 09:20:07 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_FICHA_TECNICA_ESPACIO_ListarVOtfFichaTecnicaEspaciolst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtfFichaTecnicaEspacio As New DalOtfFichaTecnicaEspacio(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtfFichaTecnicaEspacio.ListarVOtfFichaTecnicaEspaciolst(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTF_FICHA_TECNICA_ESPACIOLST según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>14/04/2016 09:20:07 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_FICHA_TECNICA_ESPACIO_ObtenerDatosPaginacionVOtfFichaTecnicaEspaciolst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtfFichaTecnicaEspacio As New DalOtfFichaTecnicaEspacio(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtfFichaTecnicaEspacio.ObtenerDatosPaginacionVOtfFichaTecnicaEspaciolst(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

#End Region

#Region "OTF_FICHA_TECNICA_GENERAL"
    ''' <summary>
    ''' Permite agregar un registro en la tabla OTF_FICHA_TECNICA_GENERAL
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>14/04/2016 09:20:07 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_FICHA_TECNICA_GENERAL_InsertarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtfFichaTecnicaGeneral) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtfFichaTecnicaGeneral As New BllOtfFichaTecnicaGeneral(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_INSERTAR)

            Return vlo_BllOtfFichaTecnicaGeneral.InsertarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTF_FICHA_TECNICA_GENERAL
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>14/04/2016 09:20:07 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_FICHA_TECNICA_GENERAL_BorrarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtfFichaTecnicaGeneral) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtfFichaTecnicaGeneral As New DalOtfFichaTecnicaGeneral(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_BORRAR)

            Return vlo_DalOtfFichaTecnicaGeneral.BorrarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTF_FICHA_TECNICA_GENERAL
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>14/04/2016 09:20:07 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_FICHA_TECNICA_GENERAL_ModificarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtfFichaTecnicaGeneral) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtfFichaTecnicaGeneral As New DalOtfFichaTecnicaGeneral(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_MODIFICAR)

            Return vlo_DalOtfFichaTecnicaGeneral.ModificarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTF_FICHA_TECNICA_GENERAL según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>14/04/2016 09:20:07 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_FICHA_TECNICA_GENERAL_ListarRegistros(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtfFichaTecnicaGeneral As New DalOtfFichaTecnicaGeneral(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtfFichaTecnicaGeneral.ListarRegistros(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTF_FICHA_TECNICA_GENERALLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>14/04/2016 09:20:07 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_FICHA_TECNICA_GENERAL_ListarRegistrosLista(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtfFichaTecnicaGeneral As New DalOtfFichaTecnicaGeneral(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtfFichaTecnicaGeneral.ListarRegistrosLista(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function


    ''' <summary>
    ''' Obtiene un registro de la tabla OTF_FICHA_TECNICA_GENERAL según el criterio indicado
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <returns>Entidad que representa la información obtenida al ejecutar la consulta</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>14/04/2016 09:20:07 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_FICHA_TECNICA_GENERAL_ObtenerRegistro(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String) As EntOtfFichaTecnicaGeneral
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtfFichaTecnicaGeneral As New DalOtfFichaTecnicaGeneral(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtfFichaTecnicaGeneral.ObtenerRegistro(pvc_Condicion)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTF_FICHA_TECNICA_GENERAL según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>14/04/2016 09:20:07 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_FICHA_TECNICA_GENERAL_ListarVOtfFichaTecnicaGeneral(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtfFichaTecnicaGeneral As New DalOtfFichaTecnicaGeneral(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtfFichaTecnicaGeneral.ListarVOtfFichaTecnicaGeneral(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTF_FICHA_TECNICA_GENERAL según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>14/04/2016 09:20:07 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_FICHA_TECNICA_GENERAL_ObtenerDatosPaginacionVOtfFichaTecnicaGeneral(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtfFichaTecnicaGeneral As New DalOtfFichaTecnicaGeneral(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtfFichaTecnicaGeneral.ObtenerDatosPaginacionVOtfFichaTecnicaGeneral(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTF_FICHA_TECNICA_GENERALLST según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>14/04/2016 09:20:07 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_FICHA_TECNICA_GENERAL_ListarVOtfFichaTecnicaGenerallst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtfFichaTecnicaGeneral As New DalOtfFichaTecnicaGeneral(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtfFichaTecnicaGeneral.ListarVOtfFichaTecnicaGenerallst(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTF_FICHA_TECNICA_GENERALLST según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>14/04/2016 09:20:07 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_FICHA_TECNICA_GENERAL_ObtenerDatosPaginacionVOtfFichaTecnicaGenerallst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtfFichaTecnicaGeneral As New DalOtfFichaTecnicaGeneral(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtfFichaTecnicaGeneral.ObtenerDatosPaginacionVOtfFichaTecnicaGenerallst(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

#End Region

#Region "OTF_FICHA_TECNICA_SUBCOMP"
    ''' <summary>
    ''' Permite agregar un registro en la tabla OTF_FICHA_TECNICA_SUBCOMP
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>14/04/2016 09:20:07 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_FICHA_TECNICA_SUBCOMP_InsertarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtfFichaTecnicaSubcomp) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtfFichaTecnicaSubcomp As New BllOtfFichaTecnicaSubcomp(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_INSERTAR)

            Return vlo_BllOtfFichaTecnicaSubcomp.InsertarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTF_FICHA_TECNICA_SUBCOMP
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>14/04/2016 09:20:07 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_FICHA_TECNICA_SUBCOMP_BorrarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtfFichaTecnicaSubcomp) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtfFichaTecnicaSubcomp As New BllOtfFichaTecnicaSubcomp(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_BORRAR)

            Return vlo_BllOtfFichaTecnicaSubcomp.BorrarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTF_FICHA_TECNICA_SUBCOMP
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>14/04/2016 09:20:07 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_FICHA_TECNICA_SUBCOMP_ModificarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtfFichaTecnicaSubcomp) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtfFichaTecnicaSubcomp As New DalOtfFichaTecnicaSubcomp(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_MODIFICAR)

            Return vlo_DalOtfFichaTecnicaSubcomp.ModificarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTF_FICHA_TECNICA_SUBCOMP según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>14/04/2016 09:20:07 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_FICHA_TECNICA_SUBCOMP_ListarRegistros(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtfFichaTecnicaSubcomp As New DalOtfFichaTecnicaSubcomp(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtfFichaTecnicaSubcomp.ListarRegistros(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function


    ''' <summary>
    ''' Obtiene los registros de la vista V_OTF_FICHA_TECNICA_SUBCOMPLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>14/04/2016 09:20:07 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_FICHA_TECNICA_SUBCOMP_ListarRegistrosLista(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtfFichaTecnicaSubcomp As New DalOtfFichaTecnicaSubcomp(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtfFichaTecnicaSubcomp.ListarRegistrosLista(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function


    ''' <summary>
    ''' Obtiene un registro de la tabla OTF_FICHA_TECNICA_SUBCOMP según el criterio indicado
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <returns>Entidad que representa la información obtenida al ejecutar la consulta</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>14/04/2016 09:20:07 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_FICHA_TECNICA_SUBCOMP_ObtenerRegistro(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String) As EntOtfFichaTecnicaSubcomp
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtfFichaTecnicaSubcomp As New DalOtfFichaTecnicaSubcomp(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtfFichaTecnicaSubcomp.ObtenerRegistro(pvc_Condicion)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTF_FICHA_TECNICA_SUBCOMP según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>14/04/2016 09:20:07 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_FICHA_TECNICA_SUBCOMP_ListarVOtfFichaTecnicaSubcomp(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtfFichaTecnicaSubcomp As New DalOtfFichaTecnicaSubcomp(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtfFichaTecnicaSubcomp.ListarVOtfFichaTecnicaSubcomp(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTF_FICHA_TECNICA_SUBCOMP según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>14/04/2016 09:20:07 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_FICHA_TECNICA_SUBCOMP_ObtenerDatosPaginacionVOtfFichaTecnicaSubcomp(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtfFichaTecnicaSubcomp As New DalOtfFichaTecnicaSubcomp(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtfFichaTecnicaSubcomp.ObtenerDatosPaginacionVOtfFichaTecnicaSubcomp(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTF_FICHA_TECNICA_SUBCOMPLST según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>14/04/2016 09:20:07 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_FICHA_TECNICA_SUBCOMP_ListarVOtfFichaTecnicaSubcomplst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtfFichaTecnicaSubcomp As New DalOtfFichaTecnicaSubcomp(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtfFichaTecnicaSubcomp.ListarVOtfFichaTecnicaSubcomplst(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTF_FICHA_TECNICA_SUBCOMPLST según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>14/04/2016 09:20:07 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_FICHA_TECNICA_SUBCOMP_ObtenerDatosPaginacionVOtfFichaTecnicaSubcomplst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtfFichaTecnicaSubcomp As New DalOtfFichaTecnicaSubcomp(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtfFichaTecnicaSubcomp.ObtenerDatosPaginacionVOtfFichaTecnicaSubcomplst(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

#End Region

#Region "OTF_PRE_ORDEN_TRABAJO"

    ''' <summary>
    ''' Permite el proceso de envio de una pre orden
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <param name="pvc_Estado">nuevo estado de la preorden</param>
    ''' <param name="pvn_RequiereFichaTecnica"></param>
    ''' <returns></returns>
    ''' <remarks></remarks>
    ''' <author>Carlos Gómez Ondoy</author>
    ''' <creationDate>22/04/2016</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_PRE_ORDEN_TRABAJO_EnviarPreOrden(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtfPreOrdenTrabajo, pvc_Estado As String, pvn_RequiereFichaTecnica As Integer) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtfPreOrdenTrabajo As New BllOtfPreOrdenTrabajo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_INSERTAR)

            Return vlo_BllOtfPreOrdenTrabajo.EnviarPreOrden(pvo_Registro, pvc_Estado, pvn_RequiereFichaTecnica)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite agregar registros en las tablas OTF_PRE_ORDEN_TRABAJO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns></returns>
    ''' <remarks></remarks>
    ''' <author>Carlos Gómez Ondoy</author>
    ''' <creationDate>14/04/2016</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_PRE_ORDEN_TRABAJO_InsertarPreOrdenCadena(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtfPreOrdenTrabajo, pvc_Estado As String) As String
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtfPreOrdenTrabajo As New BllOtfPreOrdenTrabajo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_INSERTAR)

            Return vlo_BllOtfPreOrdenTrabajo.InsertarPreOrdenCadena(pvo_Registro, pvc_Estado)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite agregar un registro en la tabla OTF_PRE_ORDEN_TRABAJO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>14/04/2016 09:20:07 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_PRE_ORDEN_TRABAJO_InsertarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtfPreOrdenTrabajo) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtfPreOrdenTrabajo As New BllOtfPreOrdenTrabajo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_INSERTAR)

            Return vlo_BllOtfPreOrdenTrabajo.InsertarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTF_PRE_ORDEN_TRABAJO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>14/04/2016 09:20:07 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_PRE_ORDEN_TRABAJO_BorrarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtfPreOrdenTrabajo) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtfPreOrdenTrabajo As New BllOtfPreOrdenTrabajo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_BORRAR)

            Return vlo_BllOtfPreOrdenTrabajo.BorrarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTF_PRE_ORDEN_TRABAJO, y sus relaciones
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Carlos Gómez Ondoy</author>
    ''' <creationDate>21/04/2016</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_PRE_ORDEN_TRABAJO_BorradoFisico(pvc_Usuario As String, pvc_Clave As String, pvn_IdUbicacion As Integer, pvn_IdPreOrdenTrabajo As Integer) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtfPreOrdenTrabajo As New BllOtfPreOrdenTrabajo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_BORRAR)

            Return vlo_BllOtfPreOrdenTrabajo.BorradoFisico(pvn_IdUbicacion, pvn_IdPreOrdenTrabajo)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTF_PRE_ORDEN_TRABAJO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>14/04/2016 09:20:07 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_PRE_ORDEN_TRABAJO_ModificarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtfPreOrdenTrabajo) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtfPreOrdenTrabajo As New DalOtfPreOrdenTrabajo(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_MODIFICAR)

            Return vlo_DalOtfPreOrdenTrabajo.ModificarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTF_PRE_ORDEN_TRABAJO según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>14/04/2016 09:20:07 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_PRE_ORDEN_TRABAJO_ListarRegistros(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtfPreOrdenTrabajo As New DalOtfPreOrdenTrabajo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtfPreOrdenTrabajo.ListarRegistros(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function



    ''' <summary>
    ''' Obtiene los registros de la vista V_OTF_PRE_ORDEN_TRABAJOLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>14/04/2016 09:20:07 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_PRE_ORDEN_TRABAJO_ListarRegistrosLista(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtfPreOrdenTrabajo As New DalOtfPreOrdenTrabajo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtfPreOrdenTrabajo.ListarRegistrosLista(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function


    ''' <summary>
    ''' Obtiene un registro de la tabla OTF_PRE_ORDEN_TRABAJO según el criterio indicado
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <returns>Entidad que representa la información obtenida al ejecutar la consulta</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>14/04/2016 09:20:07 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_PRE_ORDEN_TRABAJO_ObtenerRegistro(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String) As EntOtfPreOrdenTrabajo
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtfPreOrdenTrabajo As New DalOtfPreOrdenTrabajo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtfPreOrdenTrabajo.ObtenerRegistro(pvc_Condicion)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function


    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTF_PRE_ORDEN_TRABAJO según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>14/04/2016 09:20:07 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_PRE_ORDEN_TRABAJO_ObtenerDatosPaginacionVOtfPreOrdenTrabajo(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtfPreOrdenTrabajo As New DalOtfPreOrdenTrabajo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtfPreOrdenTrabajo.ObtenerDatosPaginacionVOtfPreOrdenTrabajo(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTF_PRE_ORDEN_TRABAJOLST según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>14/04/2016 09:20:07 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_PRE_ORDEN_TRABAJO_ObtenerDatosPaginacionVOtfPreOrdenTrabajolst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtfPreOrdenTrabajo As New DalOtfPreOrdenTrabajo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtfPreOrdenTrabajo.ObtenerDatosPaginacionVOtfPreOrdenTrabajolst(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

#End Region

#Region "OTF_REVISION_PRE_ORDEN_TRA"


    ''' <summary>
    ''' Obtiene los registros de la vista V_OTF_REVISION_PRE_ORDEN_TRALst según el criterio y orden indicados, cargando información del responsable desde el BLL
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Carlos Gómez Ondoy</author>
    ''' <creationDate>11/02/2016</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_REVISION_PRE_ORDEN_TRA_ListarRegistrosListaPersonalizado(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtfRevisionPreOrdenTra As New BllOtfRevisionPreOrdenTra(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_INSERTAR)

            Return vlo_BllOtfRevisionPreOrdenTra.ListarRegistrosListaPersonalizado(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite agregar un registro en la tabla OTF_REVISION_PRE_ORDEN_TRA, y enviar un correo de notificación
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns></returns>
    ''' <remarks></remarks>
    ''' <author>Carlos Gómez Ondoy</author>
    ''' <creationDate>19/04/2016</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_REVISION_PRE_ORDEN_TRA_InsertarRevisionEnvioCorreo(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtfRevisionPreOrdenTra, pvn_NumeroEmpleado As Integer, pvc_Descripcion As String, pvc_Motivo As String, pvo_FechaHoraSolicita As Date) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtfRevisionPreOrdenTra As New BllOtfRevisionPreOrdenTra(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_INSERTAR)

            Return vlo_BllOtfRevisionPreOrdenTra.InsertarRevisionEnvioCorreo(pvo_Registro, pvn_NumeroEmpleado, pvc_Descripcion, pvc_Motivo, pvo_FechaHoraSolicita)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function


    ''' <summary>
    ''' Permite agregar un registro en la tabla OTF_REVISION_PRE_ORDEN_TRA
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>14/04/2016 09:20:07 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_REVISION_PRE_ORDEN_TRA_InsertarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtfRevisionPreOrdenTra) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtfRevisionPreOrdenTra As New DalOtfRevisionPreOrdenTra(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_INSERTAR)

            Return vlo_DalOtfRevisionPreOrdenTra.InsertarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTF_REVISION_PRE_ORDEN_TRA
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>14/04/2016 09:20:07 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_REVISION_PRE_ORDEN_TRA_BorrarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtfRevisionPreOrdenTra) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtfRevisionPreOrdenTra As New DalOtfRevisionPreOrdenTra(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_BORRAR)

            Return vlo_DalOtfRevisionPreOrdenTra.BorrarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTF_REVISION_PRE_ORDEN_TRA
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>14/04/2016 09:20:07 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_REVISION_PRE_ORDEN_TRA_ModificarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtfRevisionPreOrdenTra) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtfRevisionPreOrdenTra As New DalOtfRevisionPreOrdenTra(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_MODIFICAR)

            Return vlo_DalOtfRevisionPreOrdenTra.ModificarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTF_REVISION_PRE_ORDEN_TRA según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>14/04/2016 09:20:07 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_REVISION_PRE_ORDEN_TRA_ListarRegistros(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtfRevisionPreOrdenTra As New DalOtfRevisionPreOrdenTra(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtfRevisionPreOrdenTra.ListarRegistros(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function


    ''' <summary>
    ''' Obtiene los registros de la vista V_OTF_REVISION_PRE_ORDEN_TRALst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>14/04/2016 09:20:07 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_REVISION_PRE_ORDEN_TRA_ListarRegistrosLista(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtfRevisionPreOrdenTra As New DalOtfRevisionPreOrdenTra(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtfRevisionPreOrdenTra.ListarRegistrosLista(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTF_REVISION_PRE_ORDEN_TRALst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>14/04/2016 09:20:07 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_REVISION_PRE_ORDEN_TRA_ObtenerDatosPaginacionVOtfRevisionPreOrdenTralst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtfRevisionPreOrdenTra As New DalOtfRevisionPreOrdenTra(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtfRevisionPreOrdenTra.ObtenerDatosPaginacionVOtfRevisionPreOrdenTralst(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene un registro de la tabla OTF_REVISION_PRE_ORDEN_TRA según el criterio indicado
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <returns>Entidad que representa la información obtenida al ejecutar la consulta</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>14/04/2016 09:20:07 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_REVISION_PRE_ORDEN_TRA_ObtenerRegistro(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String) As EntOtfRevisionPreOrdenTra
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtfRevisionPreOrdenTra As New DalOtfRevisionPreOrdenTra(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtfRevisionPreOrdenTra.ObtenerRegistro(pvc_Condicion)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTF_REVISION_PRE_ORDENLST según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>14/04/2016 09:20:07 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_REVISION_PRE_ORDEN_TRA_ListarVOtfRevisionPreOrdenlst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtfRevisionPreOrdenTra As New DalOtfRevisionPreOrdenTra(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtfRevisionPreOrdenTra.ListarVOtfRevisionPreOrdenlst(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTF_REVISION_PRE_ORDENLST según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>14/04/2016 09:20:07 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_REVISION_PRE_ORDEN_TRA_ObtenerDatosPaginacionVOtfRevisionPreOrdenlst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtfRevisionPreOrdenTra As New DalOtfRevisionPreOrdenTra(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtfRevisionPreOrdenTra.ObtenerDatosPaginacionVOtfRevisionPreOrdenlst(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTF_REVISION_PRE_ORDEN_TRA según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>14/04/2016 09:20:07 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_REVISION_PRE_ORDEN_TRA_ListarVOtfRevisionPreOrdenTra(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtfRevisionPreOrdenTra As New DalOtfRevisionPreOrdenTra(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtfRevisionPreOrdenTra.ListarVOtfRevisionPreOrdenTra(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTF_REVISION_PRE_ORDEN_TRA según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>14/04/2016 09:20:07 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_REVISION_PRE_ORDEN_TRA_ObtenerDatosPaginacionVOtfRevisionPreOrdenTra(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtfRevisionPreOrdenTra As New DalOtfRevisionPreOrdenTra(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtfRevisionPreOrdenTra.ObtenerDatosPaginacionVOtfRevisionPreOrdenTra(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

#End Region

#Region "OTT_LINEA_ADJUDICACION"
    ''' <summary>
    ''' Permite agregar un registro en la tabla OTT_LINEA_ADJUDICACION
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>06/05/2016 10:46:05 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_LINEA_ADJUDICACION_InsertarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttLineaAdjudicacion, pvo_Adjunto As EntOttAdjuntoOrdenTrabajo) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttLineaAdjudicacion As New BllOttLineaAdjudicacion(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_INSERTAR)

            Return vlo_BllOttLineaAdjudicacion.InsertarRegistro(pvo_Registro, pvo_Adjunto)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTT_LINEA_ADJUDICACION
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>06/05/2016 10:46:05 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_LINEA_ADJUDICACION_BorrarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttLineaAdjudicacion) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttLineaAdjudicacion As New BllOttLineaAdjudicacion(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_BORRAR)

            Return vlo_BllOttLineaAdjudicacion.BorrarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTT_LINEA_ADJUDICACION
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>06/05/2016 10:46:05 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_LINEA_ADJUDICACION_ModificarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttLineaAdjudicacion, pvo_Adjunto As EntOttAdjuntoOrdenTrabajo) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttLineaAdjudicacion As New BllOttLineaAdjudicacion(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_MODIFICAR)

            Return vlo_BllOttLineaAdjudicacion.ModificarRegistro(pvo_Registro, pvo_Adjunto)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTT_LINEA_ADJUDICACION según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>06/05/2016 10:46:05 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_LINEA_ADJUDICACION_ListarRegistros(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttLineaAdjudicacion As New DalOttLineaAdjudicacion(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttLineaAdjudicacion.ListarRegistros(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTT_LINEA_ADJUDICACION según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>06/05/2016 10:46:05 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_LINEA_ADJUDICACION_ObtenerDatosPaginacionVOttLineaAdjudicacion(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttLineaAdjudicacion As New DalOttLineaAdjudicacion(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttLineaAdjudicacion.ObtenerDatosPaginacionVOttLineaAdjudicacion(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTT_LINEA_ADJUDICACIONLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>06/05/2016 10:46:05 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_LINEA_ADJUDICACION_ListarRegistrosLista(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttLineaAdjudicacion As New DalOttLineaAdjudicacion(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttLineaAdjudicacion.ListarRegistrosLista(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTT_LINEA_ADJUDICACIONLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>06/05/2016 10:46:05 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_LINEA_ADJUDICACION_ObtenerDatosPaginacionVOttLineaAdjudicacionlst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttLineaAdjudicacion As New DalOttLineaAdjudicacion(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttLineaAdjudicacion.ObtenerDatosPaginacionVOttLineaAdjudicacionlst(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene un registro de la tabla OTT_LINEA_ADJUDICACION según el criterio indicado
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <returns>Entidad que representa la información obtenida al ejecutar la consulta</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>06/05/2016 10:46:05 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_LINEA_ADJUDICACION_ObtenerRegistro(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String) As EntOttLineaAdjudicacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttLineaAdjudicacion As New DalOttLineaAdjudicacion(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttLineaAdjudicacion.ObtenerRegistro(pvc_Condicion)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTTH_LINEA_ADJUDICACION según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>06/05/2016 10:46:05 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_LINEA_ADJUDICACION_ListarVOtthLineaAdjudicacion(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttLineaAdjudicacion As New DalOttLineaAdjudicacion(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttLineaAdjudicacion.ListarVOtthLineaAdjudicacion(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTTH_LINEA_ADJUDICACION según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>06/05/2016 10:46:05 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_LINEA_ADJUDICACION_ObtenerDatosPaginacionVOtthLineaAdjudicacion(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttLineaAdjudicacion As New DalOttLineaAdjudicacion(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttLineaAdjudicacion.ObtenerDatosPaginacionVOtthLineaAdjudicacion(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Manda a calcular la suma de dias habiles 
    ''' </summary>
    ''' <param name="pvc_Usuario"></param>
    ''' <param name="pvc_Clave"></param>
    ''' <param name="pvd_FechaInicio"></param>
    ''' <param name="pvn_Plazo"></param>
    ''' <returns></returns>
    ''' <remarks></remarks>
    ''' <author>César Bermudez G</author>
    ''' <creationDate>06/05/2016</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_LINEA_ADJUDICACION_SumaDiasHabiles_CierreUCR(pvc_Usuario As String, pvc_Clave As String, pvd_FechaInicio As Date, pvn_Plazo As Integer) As Date
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttLineaAdjudicacion As New BllOttLineaAdjudicacion(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_BllOttLineaAdjudicacion.SumaDiasHabiles(pvd_FechaInicio, pvn_Plazo)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

#End Region

#Region "OTL_DETALLE_MATERIAL"
    ''' <summary>
    ''' Permite agregar un registro en la tabla OTL_DETALLE_MATERIAL
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>03/06/2016 02:42:19 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTL_DETALLE_MATERIAL_InsertarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtlDetalleMaterial) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtlDetalleMaterial As New BllOtlDetalleMaterial(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_INSERTAR)

            Return vlo_BllOtlDetalleMaterial.InsertarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTL_DETALLE_MATERIAL
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>03/06/2016 02:42:19 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTL_DETALLE_MATERIAL_BorrarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtlDetalleMaterial) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtlDetalleMaterial As New DalOtlDetalleMaterial(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_BORRAR)

            Return vlo_DalOtlDetalleMaterial.BorrarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTL_DETALLE_MATERIAL
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>03/06/2016 02:42:19 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTL_DETALLE_MATERIAL_ModificarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtlDetalleMaterial) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtlDetalleMaterial As New DalOtlDetalleMaterial(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_MODIFICAR)

            Return vlo_DalOtlDetalleMaterial.ModificarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTL_DETALLE_MATERIAL según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>03/06/2016 02:42:19 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTL_DETALLE_MATERIAL_ListarRegistros(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtlDetalleMaterial As New DalOtlDetalleMaterial(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtlDetalleMaterial.ListarRegistros(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTL_DETALLE_MATERIAL según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>03/06/2016 02:42:19 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTL_DETALLE_MATERIAL_ObtenerDatosPaginacionVOtlDetalleMaterial(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtlDetalleMaterial As New DalOtlDetalleMaterial(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtlDetalleMaterial.ObtenerDatosPaginacionVOtlDetalleMaterial(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTL_DETALLE_MATERIALLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>03/06/2016 02:42:19 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTL_DETALLE_MATERIAL_ListarRegistrosLista(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtlDetalleMaterial As New DalOtlDetalleMaterial(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtlDetalleMaterial.ListarRegistrosLista(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTL_DETALLE_MATERIALLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>03/06/2016 02:42:19 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTL_DETALLE_MATERIAL_ObtenerDatosPaginacionVOtlDetalleMateriallst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtlDetalleMaterial As New DalOtlDetalleMaterial(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtlDetalleMaterial.ObtenerDatosPaginacionVOtlDetalleMateriallst(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene un registro de la tabla OTL_DETALLE_MATERIAL según el criterio indicado
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <returns>Entidad que representa la información obtenida al ejecutar la consulta</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>03/06/2016 02:42:19 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTL_DETALLE_MATERIAL_ObtenerRegistro(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String) As EntOtlDetalleMaterial
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtlDetalleMaterial As New DalOtlDetalleMaterial(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtlDetalleMaterial.ObtenerRegistro(pvc_Condicion)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

#End Region

#Region "OTT_DETALLE_MATERIAL"
    ''' <summary>
    ''' Permite agregar un registro en la tabla OTT_DETALLE_MATERIAL
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>03/06/2016 02:42:19 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_DETALLE_MATERIAL_InsertarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttDetalleMaterial) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttDetalleMaterial As New BllOttDetalleMaterial(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_INSERTAR)

            Return vlo_BllOttDetalleMaterial.InsertarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite agregar un registro en la tabla OTT_DETALLE_MATERIAL y modifica el registro de la solicitud OTT_SOLICITUD_MATERIAL
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Carlos Gómez Ondoy</author>
    ''' <creationDate>19/07/2016</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_DETALLE_MATERIAL_InsertarDetalleModificarSolicitud(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttDetalleMaterial) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttDetalleMaterial As New BllOttDetalleMaterial(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_INSERTAR)

            Return vlo_BllOttDetalleMaterial.InsertarDetalleModificarSolicitud(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' administra el proceso de envio a aprobacion
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Carls Gómez Ondoy</author>
    ''' <creationDate>27/06/2016</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_DETALLE_MATERIAL_EnviarAprobacion(pvc_Usuario As String, pvc_Clave As String, pvn_IdUbicacion As Integer, pvc_IdOrdenTrabajo As String, pvc_Justificacion As String, pvc_UserName As String) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttDetalleMaterial As New BllOttDetalleMaterial(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_INSERTAR)

            Return vlo_BllOttDetalleMaterial.EnviarAprobacion(pvn_IdUbicacion, pvc_IdOrdenTrabajo, pvc_Justificacion, pvc_UserName)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite agregar un registro en la tabla OTT_DETALLE_MATERIAL y la tabla OTT_SOLICITUD_MATERIAL
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Carlos Gómez Ondoy</author>
    ''' <creationDate>20/06/2016</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_DETALLE_MATERIAL_InsertarSolicitudDetalle(pvc_Usuario As String, pvc_Clave As String, pvo_EntOttSolicitudMaterial As EntOttSolicitudMaterial, ByVal pvo_EntOttDetalleMaterial As EntOttDetalleMaterial) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttDetalleMaterial As New BllOttDetalleMaterial(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_INSERTAR)

            Return vlo_BllOttDetalleMaterial.InsertarSolicitudDetalle(pvo_EntOttSolicitudMaterial, pvo_EntOttDetalleMaterial)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function


    ''' <summary>
    ''' Permite borrar un registro en la tabla OTT_DETALLE_MATERIAL
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>03/06/2016 02:42:19 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_DETALLE_MATERIAL_BorrarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttDetalleMaterial) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttDetalleMaterial As New DalOttDetalleMaterial(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_BORRAR)

            Return vlo_DalOttDetalleMaterial.BorrarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTT_DETALLE_MATERIAL
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>03/06/2016 02:42:19 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_DETALLE_MATERIAL_ModificarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttDetalleMaterial) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttDetalleMaterial As New DalOttDetalleMaterial(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_MODIFICAR)

            Return vlo_DalOttDetalleMaterial.ModificarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTT_DETALLE_MATERIAL según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>03/06/2016 02:42:19 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_DETALLE_MATERIAL_ListarRegistros(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttDetalleMaterial As New DalOttDetalleMaterial(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttDetalleMaterial.ListarRegistros(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTT_DETALLE_MATERIAL según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>03/06/2016 02:42:19 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_DETALLE_MATERIAL_ObtenerDatosPaginacionVOttDetalleMaterial(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttDetalleMaterial As New DalOttDetalleMaterial(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttDetalleMaterial.ObtenerDatosPaginacionVOttDetalleMaterial(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTT_DETALLE_MATERIALLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>03/06/2016 02:42:19 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_DETALLE_MATERIAL_ListarRegistrosLista(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttDetalleMaterial As New DalOttDetalleMaterial(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttDetalleMaterial.ListarRegistrosLista(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTT_DETALLE_MATERIALLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>03/06/2016 02:42:19 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_DETALLE_MATERIAL_ObtenerDatosPaginacionVOttDetalleMateriallst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttDetalleMaterial As New DalOttDetalleMaterial(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttDetalleMaterial.ObtenerDatosPaginacionVOttDetalleMateriallst(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene un registro de la tabla OTT_DETALLE_MATERIAL según el criterio indicado
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <returns>Entidad que representa la información obtenida al ejecutar la consulta</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>03/06/2016 02:42:19 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_DETALLE_MATERIAL_ObtenerRegistro(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String) As EntOttDetalleMaterial
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttDetalleMaterial As New DalOttDetalleMaterial(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttDetalleMaterial.ObtenerRegistro(pvc_Condicion)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTTH_DETALLE_MATERIAL según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>03/06/2016 02:42:19 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_DETALLE_MATERIAL_ListarVOtthDetalleMaterial(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttDetalleMaterial As New DalOttDetalleMaterial(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttDetalleMaterial.ListarVOtthDetalleMaterial(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTTH_DETALLE_MATERIAL según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>03/06/2016 02:42:19 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_DETALLE_MATERIAL_ObtenerDatosPaginacionVOtthDetalleMaterial(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttDetalleMaterial As New DalOttDetalleMaterial(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttDetalleMaterial.ObtenerDatosPaginacionVOtthDetalleMaterial(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' 
    ''' </summary>
    ''' <param name="pvc_Usuario"></param>
    ''' <param name="pvc_Clave"></param>
    ''' <param name="pvc_Condicion"></param>
    ''' <param name="pvc_Orden"></param>
    ''' <param name="pvn_TamanoPagina"></param>
    ''' <returns></returns>
    ''' <remarks></remarks>
    ''' <author>César Bermudez Garcia</author>
    ''' <creationDate>15/6/2016</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_DETALLE_MATERIAL_RespuestaRevisionRequisiciones(pvc_Usuario As String, pvc_Clave As String, pvo_DsMateriales As DataSet, pvc_idOrdenTrabajo As String, pvn_idUbicacion As Integer, pvc_observaciones As String, pvn_NumEmpleado As Integer, pvb_aprobar As Boolean, pvb_Solicitar As Boolean, pvb_Rechazar As Boolean) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttDetalleMaterial As New BllOttDetalleMaterial(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_BllOttDetalleMaterial.RespuestaRevisionRequisiciones(pvo_DsMateriales, pvc_idOrdenTrabajo, pvn_idUbicacion, pvc_observaciones, pvn_NumEmpleado, pvb_aprobar, pvb_Solicitar, pvb_Rechazar)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' 
    ''' </summary>
    ''' <param name="pvc_Usuario"></param>
    ''' <param name="pvc_Clave"></param>
    ''' <param name="pvc_Condicion"></param>
    ''' <param name="pvc_Orden"></param>
    ''' <param name="pvn_TamanoPagina"></param>
    ''' <returns></returns>
    ''' <remarks></remarks>
    ''' <author>César Bermudez Garcia</author>
    ''' <creationDate>17/6/2016</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_DETALLE_MATERIAL_RespuestaRevisionRequisicionesSupervisor(pvc_Usuario As String, pvc_Clave As String, pvc_idOrdenTrabajo As String, pvn_idUbicacion As Integer, pvc_observaciones As String, pvn_NumEmpleado As Integer, pvc_Accion As String, pvb_SolicitudPresupuesto As Boolean, pvo_ArchivoRespuesta As EntOttAdjuntoOrdenTrabajo, pvn_IdArchivoSolicitud As Integer) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttDetalleMaterial As New BllOttDetalleMaterial(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_BllOttDetalleMaterial.RevisionRequisicionesSupervisor(pvc_idOrdenTrabajo, pvn_idUbicacion, pvc_observaciones, pvn_NumEmpleado, pvc_Accion, pvb_SolicitudPresupuesto, pvo_ArchivoRespuesta, pvn_IdArchivoSolicitud)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function


    ''' <summary>
    ''' 
    ''' </summary>
    ''' <param name="pvc_Usuario"></param>
    ''' <param name="pvc_Clave"></param>
    ''' <param name="pvc_Condicion"></param>
    ''' <param name="pvc_Orden"></param>
    ''' <param name="pvn_TamanoPagina"></param>
    ''' <returns></returns>
    ''' <remarks></remarks>
    ''' <author>César Bermudez Garcia</author>
    ''' <creationDate>27/6/2016</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_DETALLE_MATERIAL_AjusteMateriales(pvc_Usuario As String, pvc_Clave As String, pvc_UsuarioSession As String, pvn_IdUbicacion As Integer, pvc_IdOrdenTrabajo As String) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttDetalleMaterial As New BllOttDetalleMaterial(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_BllOttDetalleMaterial.AjusteMaterial(pvc_UsuarioSession, pvn_IdUbicacion, pvc_IdOrdenTrabajo)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTT_GESTION_MATERIAL según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>12/07/2016 04:03:59 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_DETALLE_MATERIAL_ListarVOttGestionMaterial(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttDetalleMaterial As New DalOttDetalleMaterial(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttDetalleMaterial.ListarVOttGestionMaterial(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTT_GESTION_MATERIAL según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>12/07/2016 04:03:59 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_DETALLE_MATERIAL_ObtenerDatosPaginacionVOttGestionMaterial(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttDetalleMaterial As New DalOttDetalleMaterial(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttDetalleMaterial.ObtenerDatosPaginacionVOttGestionMaterial(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OT_DETALLE_MATERIAL según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>22/08/2016 09:12:46 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_DETALLE_MATERIAL_ListarVOtDetalleMaterial(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttDetalleMaterial As New DalOttDetalleMaterial(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttDetalleMaterial.ListarVOtDetalleMaterial(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function


    ''' <summary>
    ''' Obtiene los registros de la vista V_OT_DETALLE_MATERIAL según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Carlos Gómez Ondoy</author>
    ''' <creationDate>19/09/2016</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_DETALLE_MATERIAL_ListarVOtDetalleMaterialUnion(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvo_GestionCompra As EntOttGestionCompra) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttDetalleMaterial As New BllOttDetalleMaterial(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_BllOttDetalleMaterial.ListarVOtDetalleMaterialUnion(pvc_Condicion, pvc_Orden, pvo_GestionCompra)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function


    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OT_DETALLE_MATERIAL según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>22/08/2016 09:12:46 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_DETALLE_MATERIAL_ObtenerDatosPaginacionVOtDetalleMaterial(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttDetalleMaterial As New DalOttDetalleMaterial(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttDetalleMaterial.ObtenerDatosPaginacionVOtDetalleMaterial(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Ejecuta la función FC_OT_MAT_AGRUPADOS_SUM
    ''' </summary>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>08/09/2016 07:12:30 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_DETALLE_MATERIAL_ListarFcOtMatAgrupadosSum(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer, pvc_PvcHilera As String) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttDetalleMaterial As New DalOttDetalleMaterial(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttDetalleMaterial.ListarFcOtMatAgrupadosSum(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina, pvc_PvcHilera)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la función FC_OT_MAT_AGRUPADOS_SUM según el criterio y orden indicados
    ''' </summary>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>08/09/2016 07:12:30 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_DETALLE_MATERIAL_ObtenerDatosPaginacionFcOtMatAgrupadosSum(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer, pvc_PvcHilera As String) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttDetalleMaterial As New DalOttDetalleMaterial(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttDetalleMaterial.ObtenerDatosPaginacionFcOtMatAgrupadosSum(pvc_Condicion, pvc_Orden, pvn_TamanoPagina, pvc_PvcHilera)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

#End Region

#Region "OTT_SOLICITUD_MATERIAL"
    ''' <summary>
    ''' Permite agregar un registro en la tabla OTT_SOLICITUD_MATERIAL
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>03/06/2016 02:42:19 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_SOLICITUD_MATERIAL_InsertarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttSolicitudMaterial) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttSolicitudMaterial As New BllOttSolicitudMaterial(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_INSERTAR)

            Return vlo_BllOttSolicitudMaterial.InsertarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTT_SOLICITUD_MATERIAL
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>03/06/2016 02:42:19 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_SOLICITUD_MATERIAL_BorrarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttSolicitudMaterial) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttSolicitudMaterial As New BllOttSolicitudMaterial(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_BORRAR)

            Return vlo_BllOttSolicitudMaterial.BorrarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTT_SOLICITUD_MATERIAL
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>03/06/2016 02:42:19 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_SOLICITUD_MATERIAL_ModificarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttSolicitudMaterial) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttSolicitudMaterial As New DalOttSolicitudMaterial(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_MODIFICAR)

            Return vlo_DalOttSolicitudMaterial.ModificarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTT_SOLICITUD_MATERIAL según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>03/06/2016 02:42:19 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_SOLICITUD_MATERIAL_ListarRegistros(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttSolicitudMaterial As New DalOttSolicitudMaterial(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttSolicitudMaterial.ListarRegistros(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTT_SOLICITUD_MATERIAL según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>03/06/2016 02:42:19 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_SOLICITUD_MATERIAL_ObtenerDatosPaginacionVOttSolicitudMaterial(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttSolicitudMaterial As New DalOttSolicitudMaterial(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttSolicitudMaterial.ObtenerDatosPaginacionVOttSolicitudMaterial(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTT_SOLICITUD_MATERIALLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>03/06/2016 02:42:19 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_SOLICITUD_MATERIAL_ListarRegistrosLista(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttSolicitudMaterial As New DalOttSolicitudMaterial(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttSolicitudMaterial.ListarRegistrosLista(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTT_SOLICITUD_MATERIALLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>03/06/2016 02:42:19 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_SOLICITUD_MATERIAL_ObtenerDatosPaginacionVOttSolicitudMateriallst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttSolicitudMaterial As New DalOttSolicitudMaterial(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttSolicitudMaterial.ObtenerDatosPaginacionVOttSolicitudMateriallst(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene un registro de la tabla OTT_SOLICITUD_MATERIAL según el criterio indicado
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <returns>Entidad que representa la información obtenida al ejecutar la consulta</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>03/06/2016 02:42:19 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_SOLICITUD_MATERIAL_ObtenerRegistro(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String) As EntOttSolicitudMaterial
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttSolicitudMaterial As New DalOttSolicitudMaterial(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttSolicitudMaterial.ObtenerRegistro(pvc_Condicion)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTTH_SOLICITUD_MATERIAL según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>03/06/2016 02:42:19 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_SOLICITUD_MATERIAL_ListarVOtthSolicitudMaterial(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttSolicitudMaterial As New DalOttSolicitudMaterial(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttSolicitudMaterial.ListarVOtthSolicitudMaterial(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTTH_SOLICITUD_MATERIAL según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>03/06/2016 02:42:19 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_SOLICITUD_MATERIAL_ObtenerDatosPaginacionVOtthSolicitudMaterial(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttSolicitudMaterial As New DalOttSolicitudMaterial(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttSolicitudMaterial.ObtenerDatosPaginacionVOtthSolicitudMaterial(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

#End Region

#Region "OTT_SOLICITUD_RETIRO"
    ''' <summary>
    ''' Permite agregar un registro en la tabla OTT_SOLICITUD_RETIRO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>21/06/2016 01:52:19 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_SOLICITUD_RETIRO_InsertarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttSolicitudRetiro) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttSolicitudRetiro As New BllOttSolicitudRetiro(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_INSERTAR)

            Return vlo_BllOttSolicitudRetiro.InsertarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTT_SOLICITUD_RETIRO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>21/06/2016 01:52:19 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_SOLICITUD_RETIRO_BorrarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttSolicitudRetiro) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttSolicitudRetiro As New BllOttSolicitudRetiro(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_BORRAR)

            Return vlo_BllOttSolicitudRetiro.BorrarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTT_SOLICITUD_RETIRO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>21/06/2016 01:52:19 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_SOLICITUD_RETIRO_ModificarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttSolicitudRetiro) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttSolicitudRetiro As New DalOttSolicitudRetiro(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_MODIFICAR)

            Return vlo_DalOttSolicitudRetiro.ModificarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTT_SOLICITUD_RETIRO según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>21/06/2016 01:52:19 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_SOLICITUD_RETIRO_ListarRegistros(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttSolicitudRetiro As New DalOttSolicitudRetiro(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOttSolicitudRetiro.ListarRegistros(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTT_SOLICITUD_RETIRO según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>21/06/2016 01:52:19 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_SOLICITUD_RETIRO_ObtenerDatosPaginacionVOttSolicitudRetiro(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttSolicitudRetiro As New DalOttSolicitudRetiro(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOttSolicitudRetiro.ObtenerDatosPaginacionVOttSolicitudRetiro(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTT_SOLICITUD_RETIROLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>21/06/2016 01:52:19 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_SOLICITUD_RETIRO_ListarRegistrosLista(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttSolicitudRetiro As New DalOttSolicitudRetiro(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOttSolicitudRetiro.ListarRegistrosLista(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTT_SOLICITUD_RETIROLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>21/06/2016 01:52:19 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_SOLICITUD_RETIRO_ObtenerDatosPaginacionVOttSolicitudRetirolst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttSolicitudRetiro As New DalOttSolicitudRetiro(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOttSolicitudRetiro.ObtenerDatosPaginacionVOttSolicitudRetirolst(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene un registro de la tabla OTT_SOLICITUD_RETIRO según el criterio indicado
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <returns>Entidad que representa la información obtenida al ejecutar la consulta</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>21/06/2016 01:52:19 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_SOLICITUD_RETIRO_ObtenerRegistro(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String) As EntOttSolicitudRetiro
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttSolicitudRetiro As New DalOttSolicitudRetiro(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOttSolicitudRetiro.ObtenerRegistro(pvc_Condicion)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTTH_SOLICITUD_RETIRO según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>21/06/2016 01:52:19 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_SOLICITUD_RETIRO_ListarVOtthSolicitudRetiro(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttSolicitudRetiro As New DalOttSolicitudRetiro(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOttSolicitudRetiro.ListarVOtthSolicitudRetiro(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTTH_SOLICITUD_RETIRO según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>21/06/2016 01:52:19 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_SOLICITUD_RETIRO_ObtenerDatosPaginacionVOtthSolicitudRetiro(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttSolicitudRetiro As New DalOttSolicitudRetiro(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOttSolicitudRetiro.ObtenerDatosPaginacionVOtthSolicitudRetiro(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

#End Region

#Region "OTT_DETALLE_RETIRO"
    ''' <summary>
    ''' Permite agregar un registro en la tabla OTT_DETALLE_RETIRO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>21/06/2016 02:32:03 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_DETALLE_RETIRO_InsertarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttDetalleRetiro) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttDetalleRetiro As New BllOttDetalleRetiro(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_INSERTAR)

            Return vlo_BllOttDetalleRetiro.InsertarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTT_DETALLE_RETIRO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>21/06/2016 02:32:03 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_DETALLE_RETIRO_BorrarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttDetalleRetiro) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttDetalleRetiro As New DalOttDetalleRetiro(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_BORRAR)

            Return vlo_DalOttDetalleRetiro.BorrarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTT_DETALLE_RETIRO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>21/06/2016 02:32:03 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_DETALLE_RETIRO_ModificarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttDetalleRetiro) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttDetalleRetiro As New DalOttDetalleRetiro(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_MODIFICAR)

            Return vlo_DalOttDetalleRetiro.ModificarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTT_DETALLE_RETIRO según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>21/06/2016 02:32:03 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_DETALLE_RETIRO_ListarRegistros(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttDetalleRetiro As New DalOttDetalleRetiro(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOttDetalleRetiro.ListarRegistros(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTT_DETALLE_RETIRO según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>21/06/2016 02:32:03 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_DETALLE_RETIRO_ObtenerDatosPaginacionVOttDetalleRetiro(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttDetalleRetiro As New DalOttDetalleRetiro(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOttDetalleRetiro.ObtenerDatosPaginacionVOttDetalleRetiro(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTT_DETALLE_RETIROLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>21/06/2016 02:32:03 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_DETALLE_RETIRO_ListarRegistrosLista(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttDetalleRetiro As New DalOttDetalleRetiro(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOttDetalleRetiro.ListarRegistrosLista(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTT_DETALLE_RETIROLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>21/06/2016 02:32:03 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_DETALLE_RETIRO_ObtenerDatosPaginacionVOttDetalleRetirolst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttDetalleRetiro As New DalOttDetalleRetiro(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOttDetalleRetiro.ObtenerDatosPaginacionVOttDetalleRetirolst(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene un registro de la tabla OTT_DETALLE_RETIRO según el criterio indicado
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <returns>Entidad que representa la información obtenida al ejecutar la consulta</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>21/06/2016 02:32:03 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_DETALLE_RETIRO_ObtenerRegistro(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String) As EntOttDetalleRetiro
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttDetalleRetiro As New DalOttDetalleRetiro(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOttDetalleRetiro.ObtenerRegistro(pvc_Condicion)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTTH_DETALLE_RETIRO según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>21/06/2016 02:32:03 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_DETALLE_RETIRO_ListarVOtthDetalleRetiro(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttDetalleRetiro As New DalOttDetalleRetiro(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOttDetalleRetiro.ListarVOtthDetalleRetiro(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTTH_DETALLE_RETIRO según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>21/06/2016 02:32:03 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_DETALLE_RETIRO_ObtenerDatosPaginacionVOtthDetalleRetiro(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttDetalleRetiro As New DalOttDetalleRetiro(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOttDetalleRetiro.ObtenerDatosPaginacionVOtthDetalleRetiro(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Encargado de insertar todos los detalles de retiro de una respectiva solicitud
    ''' </summary>
    ''' <param name="pvc_Usuario"></param>
    ''' <param name="pvc_Clave"></param>
    ''' <param name="pvc_Condicion"></param>
    ''' <param name="pvc_Orden"></param>
    ''' <param name="pvn_TamanoPagina"></param>
    ''' <returns></returns>
    ''' <remarks></remarks>
    ''' <author>César Bermudez Garcia</author>
    ''' <creationDate>22/06/2016</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_DETALLE_RETIRO_SolicitudesMaterialCreadas(pvc_Usuario As String, pvc_Clave As String, pvo_DsDatos As DataSet, pvo_EntOttSolicitudRetiro As EntOttSolicitudRetiro) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttDetalleRetiro As New BllOttDetalleRetiro(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_BllOttDetalleRetiro.SolicitudesMaterialCreadas(pvo_DsDatos, pvo_EntOttSolicitudRetiro)

        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

#End Region

#Region "OTT_SOLICITUD_REINGRESO"


    ''' <summary>
    ''' Obtiene los registros de la vista V_OT_ORDEN_SOLIC_REING según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>03/08/2016 06:58:53 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_SOLICITUD_REINGRESO_ListarVOtOrdenSolicReing(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttSolicitudReingreso As New DalOttSolicitudReingreso(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttSolicitudReingreso.ListarVOtOrdenSolicReing(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OT_ORDEN_SOLIC_REING según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>03/08/2016 06:58:53 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_SOLICITUD_REINGRESO_ObtenerDatosPaginacionVOtOrdenSolicReing(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttSolicitudReingreso As New DalOttSolicitudReingreso(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttSolicitudReingreso.ObtenerDatosPaginacionVOtOrdenSolicReing(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite agregar un registro en la tabla OTT_SOLICITUD_REINGRESO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>28/07/2016 03:45:21 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_SOLICITUD_REINGRESO_InsertarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttSolicitudReingreso) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttSolicitudReingreso As New BllOttSolicitudReingreso(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_INSERTAR)

            Return vlo_BllOttSolicitudReingreso.InsertarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite agregar un registro en la tabla OTT_SOLICITUD_REINGRESO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_DsSolicitudes">Entidades a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Carlos Gómez Ondoy</author>
    ''' <creationDate>01/08/2016</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_SOLICITUD_REINGRESO_InsertarSolicitudesReingreso(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_DsSolicitudes As Data.DataSet, pvn_IdUbicacion As Integer, pvn_Annio As Integer) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttSolicitudReingreso As New BllOttSolicitudReingreso(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_INSERTAR)

            Return vlo_BllOttSolicitudReingreso.InsertarSolicitudesReingreso(pvo_DsSolicitudes, pvn_IdUbicacion, pvn_Annio)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite agregar un registro en la tabla OTT_SOLICITUD_REINGRESO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_DsSolicitudes">Entidades a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Carlos Gómez Ondoy</author>
    ''' <creationDate>01/08/2016</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_SOLICITUD_REINGRESO_AprobacionSolicitudesReingreso(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_DsSolicitudes As Data.DataSet) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttSolicitudReingreso As New BllOttSolicitudReingreso(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_INSERTAR)

            Return vlo_BllOttSolicitudReingreso.AprobacionSolicitudesReingreso(pvo_DsSolicitudes)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTT_SOLICITUD_REINGRESO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>28/07/2016 03:45:21 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_SOLICITUD_REINGRESO_BorrarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttSolicitudReingreso) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttSolicitudReingreso As New DalOttSolicitudReingreso(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_BORRAR)

            Return vlo_DalOttSolicitudReingreso.BorrarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTT_SOLICITUD_REINGRESO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>28/07/2016 03:45:21 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_SOLICITUD_REINGRESO_ModificarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttSolicitudReingreso) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttSolicitudReingreso As New DalOttSolicitudReingreso(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_MODIFICAR)

            Return vlo_DalOttSolicitudReingreso.ModificarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTT_SOLICITUD_REINGRESO según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>28/07/2016 03:45:21 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_SOLICITUD_REINGRESO_ListarRegistros(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttSolicitudReingreso As New DalOttSolicitudReingreso(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttSolicitudReingreso.ListarRegistros(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTT_SOLICITUD_REINGRESOLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>28/07/2016 03:45:21 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_SOLICITUD_REINGRESO_ListarRegistrosLista(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttSolicitudReingreso As New DalOttSolicitudReingreso(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttSolicitudReingreso.ListarRegistrosLista(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene un registro de la tabla OTT_SOLICITUD_REINGRESO según el criterio indicado
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <returns>Entidad que representa la información obtenida al ejecutar la consulta</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>28/07/2016 03:45:21 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_SOLICITUD_REINGRESO_ObtenerRegistro(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String) As EntOttSolicitudReingreso
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttSolicitudReingreso As New DalOttSolicitudReingreso(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttSolicitudReingreso.ObtenerRegistro(pvc_Condicion)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTTH_SOLICITUD_REINGRESO según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>28/07/2016 03:45:21 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_SOLICITUD_REINGRESO_ListarVOtthSolicitudReingreso(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttSolicitudReingreso As New DalOttSolicitudReingreso(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttSolicitudReingreso.ListarVOtthSolicitudReingreso(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTTH_SOLICITUD_REINGRESO según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>28/07/2016 03:45:21 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_SOLICITUD_REINGRESO_ObtenerDatosPaginacionVOtthSolicitudReingreso(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttSolicitudReingreso As New DalOttSolicitudReingreso(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttSolicitudReingreso.ObtenerDatosPaginacionVOtthSolicitudReingreso(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTT_SOLICITUD_REINGRESO según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>28/07/2016 03:45:21 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_SOLICITUD_REINGRESO_ListarVOttSolicitudReingreso(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttSolicitudReingreso As New DalOttSolicitudReingreso(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttSolicitudReingreso.ListarVOttSolicitudReingreso(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTT_SOLICITUD_REINGRESO según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>28/07/2016 03:45:21 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_SOLICITUD_REINGRESO_ObtenerDatosPaginacionVOttSolicitudReingreso(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttSolicitudReingreso As New DalOttSolicitudReingreso(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttSolicitudReingreso.ObtenerDatosPaginacionVOttSolicitudReingreso(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTT_SOLICITUD_REINGRESOLST según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>28/07/2016 03:45:21 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_SOLICITUD_REINGRESO_ListarVOttSolicitudReingresolst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttSolicitudReingreso As New DalOttSolicitudReingreso(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttSolicitudReingreso.ListarVOttSolicitudReingresolst(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTT_SOLICITUD_REINGRESOLST según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>28/07/2016 03:45:21 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_SOLICITUD_REINGRESO_ObtenerDatosPaginacionVOttSolicitudReingresolst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttSolicitudReingreso As New DalOttSolicitudReingreso(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttSolicitudReingreso.ObtenerDatosPaginacionVOttSolicitudReingresolst(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

#End Region

#Region "OTF_ADJUNTO_INCIDENTE"
    ''' <summary>
    ''' Permite agregar un registro en la tabla OTF_ADJUNTO_INCIDENTE
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>04/08/2016 04:57:26 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_ADJUNTO_INCIDENTE_InsertarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtfAdjuntoIncidente) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtfAdjuntoIncidente As New DalOtfAdjuntoIncidente(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_INSERTAR)

            Return vlo_DalOtfAdjuntoIncidente.InsertarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTF_ADJUNTO_INCIDENTE
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>04/08/2016 04:57:26 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_ADJUNTO_INCIDENTE_BorrarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtfAdjuntoIncidente) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtfAdjuntoIncidente As New DalOtfAdjuntoIncidente(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_BORRAR)

            Return vlo_DalOtfAdjuntoIncidente.BorrarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTF_ADJUNTO_INCIDENTE
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>04/08/2016 04:57:26 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_ADJUNTO_INCIDENTE_ModificarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtfAdjuntoIncidente) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtfAdjuntoIncidente As New DalOtfAdjuntoIncidente(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_MODIFICAR)

            Return vlo_DalOtfAdjuntoIncidente.ModificarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTF_ADJUNTO_INCIDENTE según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>04/08/2016 04:57:26 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_ADJUNTO_INCIDENTE_ListarRegistros(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtfAdjuntoIncidente As New DalOtfAdjuntoIncidente(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtfAdjuntoIncidente.ListarRegistros(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTF_ADJUNTO_INCIDENTELst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>04/08/2016 04:57:26 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_ADJUNTO_INCIDENTE_ListarRegistrosLista(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtfAdjuntoIncidente As New DalOtfAdjuntoIncidente(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtfAdjuntoIncidente.ListarRegistrosLista(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function


    ''' <summary>
    ''' Obtiene un registro de la tabla OTF_ADJUNTO_INCIDENTE según el criterio indicado
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <returns>Entidad que representa la información obtenida al ejecutar la consulta</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>04/08/2016 04:57:26 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_ADJUNTO_INCIDENTE_ObtenerRegistro(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String) As EntOtfAdjuntoIncidente
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtfAdjuntoIncidente As New DalOtfAdjuntoIncidente(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtfAdjuntoIncidente.ObtenerRegistro(pvc_Condicion)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTF_ADJUNTO_INCIDENTE según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>04/08/2016 04:57:26 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_ADJUNTO_INCIDENTE_ListarVOtfAdjuntoIncidente(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtfAdjuntoIncidente As New DalOtfAdjuntoIncidente(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtfAdjuntoIncidente.ListarVOtfAdjuntoIncidente(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTF_ADJUNTO_INCIDENTE según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>04/08/2016 04:57:26 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_ADJUNTO_INCIDENTE_ObtenerDatosPaginacionVOtfAdjuntoIncidente(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtfAdjuntoIncidente As New DalOtfAdjuntoIncidente(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtfAdjuntoIncidente.ObtenerDatosPaginacionVOtfAdjuntoIncidente(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTF_ADJUNTO_INCIDENTELST según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>04/08/2016 04:57:26 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_ADJUNTO_INCIDENTE_ListarVOtfAdjuntoIncidentelst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtfAdjuntoIncidente As New DalOtfAdjuntoIncidente(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtfAdjuntoIncidente.ListarVOtfAdjuntoIncidentelst(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTF_ADJUNTO_INCIDENTELST según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>04/08/2016 04:57:26 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_ADJUNTO_INCIDENTE_ObtenerDatosPaginacionVOtfAdjuntoIncidentelst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtfAdjuntoIncidente As New DalOtfAdjuntoIncidente(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtfAdjuntoIncidente.ObtenerDatosPaginacionVOtfAdjuntoIncidentelst(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

#End Region

#Region "OTF_INCIDENTE_ALMACEN"
    ''' <summary>
    ''' Permite agregar un registro en la tabla OTF_INCIDENTE_ALMACEN
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>04/08/2016 04:57:26 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_INCIDENTE_ALMACEN_InsertarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtfIncidenteAlmacen) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtfIncidenteAlmacen As New DalOtfIncidenteAlmacen(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_INSERTAR)

            Return vlo_DalOtfIncidenteAlmacen.InsertarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite agregar un registro en la tabla OTF_INCIDENTE_ALMACEN, N registros en la tabla de adjuntos
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Carlos Gómez Ondoy</author>
    ''' <creationDate>08/08/2016</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_INCIDENTE_ALMACEN_InsertarRegistroConAdjuntos(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtfIncidenteAlmacen, vlo_DsAdjuntos As Data.DataSet) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtfIncidenteAlmacen As New BllOtfIncidenteAlmacen(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_BORRAR)

            Return vlo_BllOtfIncidenteAlmacen.InsertarRegistroConAdjuntos(pvo_Registro, vlo_DsAdjuntos)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTF_INCIDENTE_ALMACEN
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>04/08/2016 04:57:26 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_INCIDENTE_ALMACEN_BorrarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtfIncidenteAlmacen) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtfIncidenteAlmacen As New BllOtfIncidenteAlmacen(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_BORRAR)

            Return vlo_BllOtfIncidenteAlmacen.BorrarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTF_INCIDENTE_ALMACEN, y los adjuntos asociados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Carlos Gómez Ondoy</author>
    ''' <creationDate>08/08/2016</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_INCIDENTE_ALMACEN_BorrarRegistroConAdjuntos(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtfIncidenteAlmacen) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtfIncidenteAlmacen As New BllOtfIncidenteAlmacen(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_BORRAR)

            Return vlo_BllOtfIncidenteAlmacen.BorrarRegistroConAdjuntos(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite modificar  un registro en la tabla OTF_INCIDENTE_ALMACEN, con documentos adjuntos al incidente
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Carlos Gómez Ondoy</author>
    ''' <creationDate>08/08/2016</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_INCIDENTE_ALMACEN_ModificarRegistroConAdjuntos(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtfIncidenteAlmacen, vlo_DsAdjuntos As Data.DataSet) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtfIncidenteAlmacen As New BllOtfIncidenteAlmacen(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_BORRAR)

            Return vlo_BllOtfIncidenteAlmacen.ModificarRegistroConAdjuntos(pvo_Registro, vlo_DsAdjuntos)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite modificar  un registro en la tabla OTF_INCIDENTE_ALMACEN, con documentos adjuntos al incidente
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Carlos Gómez Ondoy</author>
    ''' <creationDate>08/08/2016</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_INCIDENTE_ALMACEN_ModificarRegistroConAdjuntosRevisor(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtfIncidenteAlmacen, vlo_DsAdjuntos As Data.DataSet) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtfIncidenteAlmacen As New BllOtfIncidenteAlmacen(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_BORRAR)

            Return vlo_BllOtfIncidenteAlmacen.ModificarRegistroConAdjuntosRevisor(pvo_Registro, vlo_DsAdjuntos)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTF_INCIDENTE_ALMACEN
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>04/08/2016 04:57:26 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_INCIDENTE_ALMACEN_ModificarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtfIncidenteAlmacen) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtfIncidenteAlmacen As New DalOtfIncidenteAlmacen(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_MODIFICAR)

            Return vlo_DalOtfIncidenteAlmacen.ModificarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTF_INCIDENTE_ALMACEN según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>04/08/2016 04:57:26 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_INCIDENTE_ALMACEN_ListarRegistros(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtfIncidenteAlmacen As New DalOtfIncidenteAlmacen(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtfIncidenteAlmacen.ListarRegistros(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTF_INCIDENTE_ALMACENLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>04/08/2016 04:57:26 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_INCIDENTE_ALMACEN_ListarRegistrosLista(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtfIncidenteAlmacen As New DalOtfIncidenteAlmacen(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtfIncidenteAlmacen.ListarRegistrosLista(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function


    ''' <summary>
    ''' Obtiene un registro de la tabla OTF_INCIDENTE_ALMACEN según el criterio indicado
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <returns>Entidad que representa la información obtenida al ejecutar la consulta</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>04/08/2016 04:57:26 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_INCIDENTE_ALMACEN_ObtenerRegistro(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String) As EntOtfIncidenteAlmacen
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtfIncidenteAlmacen As New DalOtfIncidenteAlmacen(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtfIncidenteAlmacen.ObtenerRegistro(pvc_Condicion)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTF_INCIDENTE_ALMACEN según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>04/08/2016 04:57:26 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_INCIDENTE_ALMACEN_ListarVOtfIncidenteAlmacen(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtfIncidenteAlmacen As New DalOtfIncidenteAlmacen(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtfIncidenteAlmacen.ListarVOtfIncidenteAlmacen(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTF_INCIDENTE_ALMACEN según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>04/08/2016 04:57:26 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_INCIDENTE_ALMACEN_ObtenerDatosPaginacionVOtfIncidenteAlmacen(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtfIncidenteAlmacen As New DalOtfIncidenteAlmacen(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtfIncidenteAlmacen.ObtenerDatosPaginacionVOtfIncidenteAlmacen(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTF_INCIDENTE_ALMACENLST según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>04/08/2016 04:57:26 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_INCIDENTE_ALMACEN_ListarVOtfIncidenteAlmacenlst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtfIncidenteAlmacen As New DalOtfIncidenteAlmacen(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtfIncidenteAlmacen.ListarVOtfIncidenteAlmacenlst(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTF_INCIDENTE_ALMACENLST según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>04/08/2016 04:57:26 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_INCIDENTE_ALMACEN_ObtenerDatosPaginacionVOtfIncidenteAlmacenlst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtfIncidenteAlmacen As New DalOtfIncidenteAlmacen(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtfIncidenteAlmacen.ObtenerDatosPaginacionVOtfIncidenteAlmacenlst(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

#End Region

#Region "OTC_ESTADO_GESTION_COMPRA"
    ''' <summary>
    ''' Permite agregar un registro en la tabla OTC_ESTADO_GESTION_COMPRA
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>18/08/2016 02:41:54 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTC_ESTADO_GESTION_COMPRA_InsertarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtcEstadoGestionCompra) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtcEstadoGestionCompra As New BllOtcEstadoGestionCompra(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_INSERTAR)

            Return vlo_BllOtcEstadoGestionCompra.InsertarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTC_ESTADO_GESTION_COMPRA
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>18/08/2016 02:41:54 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTC_ESTADO_GESTION_COMPRA_BorrarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtcEstadoGestionCompra) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtcEstadoGestionCompra As New BllOtcEstadoGestionCompra(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_BORRAR)

            Return vlo_BllOtcEstadoGestionCompra.BorrarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTC_ESTADO_GESTION_COMPRA
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>18/08/2016 02:41:54 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTC_ESTADO_GESTION_COMPRA_ModificarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtcEstadoGestionCompra) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtcEstadoGestionCompra As New DalOtcEstadoGestionCompra(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_MODIFICAR)

            Return vlo_DalOtcEstadoGestionCompra.ModificarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTC_ESTADO_GESTION_COMPRA según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>18/08/2016 02:41:54 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTC_ESTADO_GESTION_COMPRA_ListarRegistros(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtcEstadoGestionCompra As New DalOtcEstadoGestionCompra(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtcEstadoGestionCompra.ListarRegistros(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTC_ESTADO_GESTION_COMPRALst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>18/08/2016 02:41:54 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTC_ESTADO_GESTION_COMPRA_ListarRegistrosLista(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtcEstadoGestionCompra As New DalOtcEstadoGestionCompra(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtcEstadoGestionCompra.ListarRegistrosLista(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene un registro de la tabla OTC_ESTADO_GESTION_COMPRA según el criterio indicado
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <returns>Entidad que representa la información obtenida al ejecutar la consulta</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>18/08/2016 02:41:54 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTC_ESTADO_GESTION_COMPRA_ObtenerRegistro(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String) As EntOtcEstadoGestionCompra
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtcEstadoGestionCompra As New DalOtcEstadoGestionCompra(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtcEstadoGestionCompra.ObtenerRegistro(pvc_Condicion)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTC_ESTADO_GESTION_COMPRA según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>18/08/2016 02:41:54 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTC_ESTADO_GESTION_COMPRA_ListarVOtcEstadoGestionCompra(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtcEstadoGestionCompra As New DalOtcEstadoGestionCompra(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtcEstadoGestionCompra.ListarVOtcEstadoGestionCompra(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTC_ESTADO_GESTION_COMPRA según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>18/08/2016 02:41:54 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTC_ESTADO_GESTION_COMPRA_ObtenerDatosPaginacionVOtcEstadoGestionCompra(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtcEstadoGestionCompra As New DalOtcEstadoGestionCompra(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtcEstadoGestionCompra.ObtenerDatosPaginacionVOtcEstadoGestionCompra(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTC_ESTADO_GESTION_COMPRALST según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>18/08/2016 02:41:54 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTC_ESTADO_GESTION_COMPRA_ListarVOtcEstadoGestionCompralst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtcEstadoGestionCompra As New DalOtcEstadoGestionCompra(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtcEstadoGestionCompra.ListarVOtcEstadoGestionCompralst(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTC_ESTADO_GESTION_COMPRALST según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>18/08/2016 02:41:54 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTC_ESTADO_GESTION_COMPRA_ObtenerDatosPaginacionVOtcEstadoGestionCompralst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtcEstadoGestionCompra As New DalOtcEstadoGestionCompra(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtcEstadoGestionCompra.ObtenerDatosPaginacionVOtcEstadoGestionCompralst(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

#End Region

#Region "OTL_TRAZABIL_GESTION_COMP"
    ''' <summary>
    ''' Permite agregar un registro en la tabla OTL_TRAZABIL_GESTION_COMP
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>18/08/2016 02:41:54 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTL_TRAZABIL_GESTION_COMP_InsertarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtlTrazabilGestionComp) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtlTrazabilGestionComp As New DalOtlTrazabilGestionComp(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_INSERTAR)

            Return vlo_DalOtlTrazabilGestionComp.InsertarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTL_TRAZABIL_GESTION_COMP
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>18/08/2016 02:41:54 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTL_TRAZABIL_GESTION_COMP_BorrarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtlTrazabilGestionComp) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtlTrazabilGestionComp As New DalOtlTrazabilGestionComp(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_BORRAR)

            Return vlo_DalOtlTrazabilGestionComp.BorrarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTL_TRAZABIL_GESTION_COMP
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>18/08/2016 02:41:54 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTL_TRAZABIL_GESTION_COMP_ModificarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtlTrazabilGestionComp) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtlTrazabilGestionComp As New DalOtlTrazabilGestionComp(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_MODIFICAR)

            Return vlo_DalOtlTrazabilGestionComp.ModificarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTL_TRAZABIL_GESTION_COMP según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>18/08/2016 02:41:54 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTL_TRAZABIL_GESTION_COMP_ListarRegistros(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtlTrazabilGestionComp As New DalOtlTrazabilGestionComp(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtlTrazabilGestionComp.ListarRegistros(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTL_TRAZABIL_GESTION_COMPLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>18/08/2016 02:41:54 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTL_TRAZABIL_GESTION_COMP_ListarRegistrosLista(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtlTrazabilGestionComp As New DalOtlTrazabilGestionComp(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtlTrazabilGestionComp.ListarRegistrosLista(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene un registro de la tabla OTL_TRAZABIL_GESTION_COMP según el criterio indicado
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <returns>Entidad que representa la información obtenida al ejecutar la consulta</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>18/08/2016 02:41:54 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTL_TRAZABIL_GESTION_COMP_ObtenerRegistro(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String) As EntOtlTrazabilGestionComp
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtlTrazabilGestionComp As New DalOtlTrazabilGestionComp(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtlTrazabilGestionComp.ObtenerRegistro(pvc_Condicion)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTL_TRAZABIL_GESTION_COMP según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>18/08/2016 02:41:54 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTL_TRAZABIL_GESTION_COMP_ListarVOtlTrazabilGestionComp(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtlTrazabilGestionComp As New DalOtlTrazabilGestionComp(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtlTrazabilGestionComp.ListarVOtlTrazabilGestionComp(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTL_TRAZABIL_GESTION_COMP según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>18/08/2016 02:41:54 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTL_TRAZABIL_GESTION_COMP_ObtenerDatosPaginacionVOtlTrazabilGestionComp(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtlTrazabilGestionComp As New DalOtlTrazabilGestionComp(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtlTrazabilGestionComp.ObtenerDatosPaginacionVOtlTrazabilGestionComp(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTL_TRAZABIL_GESTION_COMPLST según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>18/08/2016 02:41:54 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTL_TRAZABIL_GESTION_COMP_ListarVOtlTrazabilGestionComplst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtlTrazabilGestionComp As New DalOtlTrazabilGestionComp(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtlTrazabilGestionComp.ListarVOtlTrazabilGestionComplst(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTL_TRAZABIL_GESTION_COMPLST según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>18/08/2016 02:41:54 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTL_TRAZABIL_GESTION_COMP_ObtenerDatosPaginacionVOtlTrazabilGestionComplst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtlTrazabilGestionComp As New DalOtlTrazabilGestionComp(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtlTrazabilGestionComp.ObtenerDatosPaginacionVOtlTrazabilGestionComplst(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

#End Region

#Region "OTM_FLUJO_GESTION_COMPRA"
    ''' <summary>
    ''' Permite agregar un registro en la tabla OTM_FLUJO_GESTION_COMPRA
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>18/08/2016 02:41:54 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_FLUJO_GESTION_COMPRA_InsertarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtmFlujoGestionCompra) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtmFlujoGestionCompra As New BllOtmFlujoGestionCompra(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_INSERTAR)

            Return vlo_BllOtmFlujoGestionCompra.InsertarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTM_FLUJO_GESTION_COMPRA
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>18/08/2016 02:41:54 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_FLUJO_GESTION_COMPRA_BorrarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtmFlujoGestionCompra) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtmFlujoGestionCompra As New BllOtmFlujoGestionCompra(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_BORRAR)

            Return vlo_BllOtmFlujoGestionCompra.BorrarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTM_FLUJO_GESTION_COMPRA
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>18/08/2016 02:41:54 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_FLUJO_GESTION_COMPRA_ModificarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtmFlujoGestionCompra) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtmFlujoGestionCompra As New BllOtmFlujoGestionCompra(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_MODIFICAR)

            Return vlo_BllOtmFlujoGestionCompra.ModificarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTM_FLUJO_GESTION_COMPRA según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>18/08/2016 02:41:54 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_FLUJO_GESTION_COMPRA_ListarRegistros(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmFlujoGestionCompra As New DalOtmFlujoGestionCompra(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtmFlujoGestionCompra.ListarRegistros(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTM_FLUJO_GESTION_COMPRALst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>18/08/2016 02:41:54 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_FLUJO_GESTION_COMPRA_ListarRegistrosLista(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmFlujoGestionCompra As New DalOtmFlujoGestionCompra(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtmFlujoGestionCompra.ListarRegistrosLista(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene un registro de la tabla OTM_FLUJO_GESTION_COMPRA según el criterio indicado
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <returns>Entidad que representa la información obtenida al ejecutar la consulta</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>18/08/2016 02:41:54 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_FLUJO_GESTION_COMPRA_ObtenerRegistro(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String) As EntOtmFlujoGestionCompra
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmFlujoGestionCompra As New DalOtmFlujoGestionCompra(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtmFlujoGestionCompra.ObtenerRegistro(pvc_Condicion)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTM_FLUJO_GESTION_COMPRA según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>18/08/2016 02:41:54 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_FLUJO_GESTION_COMPRA_ListarVOtmFlujoGestionCompra(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmFlujoGestionCompra As New DalOtmFlujoGestionCompra(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtmFlujoGestionCompra.ListarVOtmFlujoGestionCompra(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTM_FLUJO_GESTION_COMPRA según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>18/08/2016 02:41:54 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_FLUJO_GESTION_COMPRA_ObtenerDatosPaginacionVOtmFlujoGestionCompra(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmFlujoGestionCompra As New DalOtmFlujoGestionCompra(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtmFlujoGestionCompra.ObtenerDatosPaginacionVOtmFlujoGestionCompra(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTM_FLUJO_GESTION_COMPRALST según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>18/08/2016 02:41:54 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_FLUJO_GESTION_COMPRA_ListarVOtmFlujoGestionCompralst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmFlujoGestionCompra As New DalOtmFlujoGestionCompra(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtmFlujoGestionCompra.ListarVOtmFlujoGestionCompralst(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTM_FLUJO_GESTION_COMPRALST según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>18/08/2016 02:41:54 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_FLUJO_GESTION_COMPRA_ObtenerDatosPaginacionVOtmFlujoGestionCompralst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmFlujoGestionCompra As New DalOtmFlujoGestionCompra(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtmFlujoGestionCompra.ObtenerDatosPaginacionVOtmFlujoGestionCompralst(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

#End Region

#Region "OTT_GESTION_COMPRA"

    ''' <summary>
    ''' Permite agregar un registro en la tabla OTT_GESTION_COMPRA
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>18/08/2016 02:41:55 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_GESTION_COMPRA_InsertarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttGestionCompra) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttGestionCompra As New BllOttGestionCompra(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_INSERTAR)

            Return vlo_BllOttGestionCompra.InsertarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite agregar un registro en la tabla OTT_GESTION_COMPRA
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_DsDetalles">Entidades a procesar</param>
    ''' <param name="pvc_NombreUsuario">nombre de usuario emn session</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Carlos Gómez Ondoy</author>
    ''' <creationDate>23/08/2016</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_GESTION_COMPRA_InsertarGestionCompraRapida(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_DsDetalles As Data.DataSet, pvc_NombreUsuario As String, pvn_IdUbicacion As Integer) As String
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttGestionCompra As New BllOttGestionCompra(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_INSERTAR)

            Return vlo_BllOttGestionCompra.InsertarGestionCompraRapida(pvo_DsDetalles, pvc_NombreUsuario, pvn_IdUbicacion)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite agregar un registro en la tabla OTT_GESTION_COMPRA
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_DsDetalles">Entidades a procesar</param>
    ''' <param name="pvc_NombreUsuario">nombre de usuario emn session</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Carlos Gómez Ondoy</author>
    ''' <creationDate>25/08/2016</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_GESTION_COMPRA_InsertarGestionCompraFondoTrabajo(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_DsDetalles As Data.DataSet, pvc_NombreUsuario As String, pvn_IdUbicacion As Integer, pvo_Observaciones As String) As String
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttGestionCompra As New BllOttGestionCompra(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_INSERTAR)

            Return vlo_BllOttGestionCompra.InsertarGestionCompraFondoTrabajo(pvo_DsDetalles, pvc_NombreUsuario, pvn_IdUbicacion, pvo_Observaciones)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite agregar un registro en la tabla OTT_GESTION_COMPRA
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_DsDetalles">Entidades a procesar</param>
    ''' <param name="pvc_NombreUsuario">nombre de usuario emn session</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Carlos Gómez Ondoy</author>
    ''' <creationDate>25/08/2016</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_GESTION_COMPRA_InsertarGestionUnidadEspecializada(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_DsDetalles As Data.DataSet, pvc_NombreUsuario As String, pvn_IdUbicacion As Integer, pvo_Observaciones As String) As String
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttGestionCompra As New BllOttGestionCompra(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_INSERTAR)

            Return vlo_BllOttGestionCompra.InsertarGestionUnidadEspecializada(pvo_DsDetalles, pvc_NombreUsuario, pvn_IdUbicacion, pvo_Observaciones)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite agregar un registro en la tabla OTT_APROVISIONAMIENTO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_DsDetalles">Entidades a procesar</param>
    ''' <param name="pvc_NombreUsuario">nombre de usuario emn session</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Mauricio Salas Chaves</author>
    ''' <creationDate>07/09/2016</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_GESTION_COMPRA_InsertarGestionCompraAprovisionamiento(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_DsDetalles As Data.DataSet, pvc_NombreUsuario As String, pvn_IdUbicacion As Integer, pvc_Observaciones As String, pvn_IdViaCompra As String, pvb_Finalizar As Boolean) As String
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttGestionCompra As New BllOttGestionCompra(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_INSERTAR)

            Return vlo_BllOttGestionCompra.InsertarGestionCompraAprovisionamiento(pvo_DsDetalles, pvc_NombreUsuario, pvn_IdUbicacion, pvc_Observaciones, pvn_IdViaCompra, pvb_Finalizar)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    <WebMethod()> _
    Public Function OTT_GESTION_COMPRA_ModificarGestionCompraAprovisionamiento(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_DsDetalles As Data.DataSet, pvo_EntOttAprovisionamiento As EntOttAprovisionamiento, pvc_Observaciones As String, pvc_NombreUsuario As String, pvn_IdViaCompra As Integer, pvb_Finalizar As Boolean) As String
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttGestionCompra As New BllOttGestionCompra(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_INSERTAR)

            Return vlo_BllOttGestionCompra.ModificarGestionCompraAprovisionamiento(pvo_DsDetalles, pvo_EntOttAprovisionamiento, pvc_Observaciones, pvc_NombreUsuario, pvn_IdViaCompra, pvb_Finalizar)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite agregar un registro en la tabla OTT_GESTION_COMPRA
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_DsDetalles">Entidades a procesar</param>
    ''' <param name="pvc_NombreUsuario">nombre de usuario emn session</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Mauricio Salas Chaves</author>
    ''' <creationDate>07/09/2016</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_GESTION_COMPRA_InsertarGestionCompraSuministros(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_DsDetalles As Data.DataSet, pvc_NombreUsuario As String, pvn_IdUbicacion As Integer, pvc_Observaciones As String) As String
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttGestionCompra As New BllOttGestionCompra(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_INSERTAR)

            Return vlo_BllOttGestionCompra.InsertarGestionCompraSuministros(pvo_DsDetalles, pvc_NombreUsuario, pvn_IdUbicacion, pvc_Observaciones)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    <WebMethod()> _
    Public Function OTT_GESTION_COMPRA_InsertarGestionCompraFinSuministros(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_DsDetalles As Data.DataSet, pvc_NombreUsuario As String, pvn_IdUbicacion As Integer, pvc_Observaciones As String) As String
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttGestionCompra As New BllOttGestionCompra(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_INSERTAR)

            Return vlo_BllOttGestionCompra.InsertarGestionCompraFinSuministros(pvo_DsDetalles, pvc_NombreUsuario, pvn_IdUbicacion, pvc_Observaciones)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    <WebMethod()> _
    Public Function OTT_GESTION_COMPRA_ModificarGestionCompraSuministros(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_DsDetalles As Data.DataSet, pvo_EntOttGestionCompra As EntOttGestionCompra, pvc_Observaciones As String, pvc_NombreUsuario As String) As String
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttGestionCompra As New BllOttGestionCompra(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_INSERTAR)

            Return vlo_BllOttGestionCompra.ModificarGestionCompraSuministros(pvo_DsDetalles, pvo_EntOttGestionCompra, pvc_Observaciones, pvc_NombreUsuario)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite modificar un registro en la tabla OTT_GESTION_COMPRA
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_DsDetalles">Entidades a procesar</param>
    ''' <param name="pvc_NombreUsuario">nombre de usuario emn session</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Carlos Gómez Ondoy</author>
    ''' <creationDate>25/08/2016</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_GESTION_COMPRA_ModificarGestionCompraFondoTrabajo(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_DsDetalles As Data.DataSet, pvc_NombreUsuario As String, pvn_IdUbicacion As Integer, pvo_EntOttGestionCompra As EntOttGestionCompra) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttGestionCompra As New BllOttGestionCompra(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_INSERTAR)

            Return vlo_BllOttGestionCompra.ModificarGestionCompraFondoTrabajo(pvo_DsDetalles, pvc_NombreUsuario, pvn_IdUbicacion, pvo_EntOttGestionCompra)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite modificar un registro en la tabla OTT_GESTION_COMPRA
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_DsDetalles">Entidades a procesar</param>
    ''' <param name="pvc_NombreUsuario">nombre de usuario emn session</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Carlos Gómez Ondoy</author>
    ''' <creationDate>07/10/2016</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_GESTION_COMPRA_ModificarGestionCompraUnidadEspecializada(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_DsDetalles As Data.DataSet, pvc_NombreUsuario As String, pvn_IdUbicacion As Integer, pvo_EntOttGestionCompra As EntOttGestionCompra) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttGestionCompra As New BllOttGestionCompra(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_INSERTAR)

            Return vlo_BllOttGestionCompra.ModificarGestionCompraUnidadEspecializada(pvo_DsDetalles, pvc_NombreUsuario, pvn_IdUbicacion, pvo_EntOttGestionCompra)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite modificar un registro en la tabla OTT_GESTION_COMPRA
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Carlos Gómez Ondoy</author>
    ''' <creationDate>29/08/2016</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_GESTION_COMPRA_ModificarGestionAgregarGrupos(pvc_Usuario As String, pvc_Clave As String, pvo_EntOttGestionCompra As EntOttGestionCompra) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttGestionCompra As New BllOttGestionCompra(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_INSERTAR)

            Return vlo_BllOttGestionCompra.ModificarGestionAgregarGrupos(pvo_EntOttGestionCompra)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite modificar un registro en la tabla OTT_GESTION_COMPRA
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Carlos Gómez Ondoy</author>
    ''' <creationDate>10/10/2016</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_GESTION_COMPRA_ModificarGestionCompraUnidadEspecializadaEstado(pvc_Usuario As String, pvc_Clave As String, pvo_EntOttGestionCompra As EntOttGestionCompra) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttGestionCompra As New BllOttGestionCompra(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_INSERTAR)

            Return vlo_BllOttGestionCompra.ModificarGestionCompraUnidadEspecializadaEstado(pvo_EntOttGestionCompra)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTT_GESTION_COMPRA
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>18/08/2016 02:41:55 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_GESTION_COMPRA_BorrarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttGestionCompra) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttGestionCompra As New BllOttGestionCompra(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_BORRAR)

            Return vlo_BllOttGestionCompra.BorrarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTT_GESTION_COMPRA
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>18/08/2016 02:41:55 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_GESTION_COMPRA_ModificarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttGestionCompra) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttGestionCompra As New DalOttGestionCompra(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_MODIFICAR)

            Return vlo_DalOttGestionCompra.ModificarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTT_GESTION_COMPRA según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>18/08/2016 02:41:55 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_GESTION_COMPRA_ListarRegistros(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttGestionCompra As New DalOttGestionCompra(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttGestionCompra.ListarRegistros(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function


    ''' <summary>
    ''' Obtiene los registros de la vista V_OTT_GESTION_COMPRALst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>18/08/2016 02:41:55 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_GESTION_COMPRA_ListarRegistrosLista(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttGestionCompra As New DalOttGestionCompra(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttGestionCompra.ListarRegistrosLista(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function


    ''' <summary>
    ''' Obtiene un registro de la tabla OTT_GESTION_COMPRA según el criterio indicado
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <returns>Entidad que representa la información obtenida al ejecutar la consulta</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>18/08/2016 02:41:55 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_GESTION_COMPRA_ObtenerRegistro(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String) As EntOttGestionCompra
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttGestionCompra As New DalOttGestionCompra(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttGestionCompra.ObtenerRegistro(pvc_Condicion)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTTH_GESTION_COMPRA según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>18/08/2016 02:41:55 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_GESTION_COMPRA_ListarVOtthGestionCompra(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttGestionCompra As New DalOttGestionCompra(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttGestionCompra.ListarVOtthGestionCompra(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTTH_GESTION_COMPRA según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>18/08/2016 02:41:55 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_GESTION_COMPRA_ObtenerDatosPaginacionVOtthGestionCompra(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttGestionCompra As New DalOttGestionCompra(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttGestionCompra.ObtenerDatosPaginacionVOtthGestionCompra(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTT_GESTION_COMPRA según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>18/08/2016 02:41:55 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_GESTION_COMPRA_ListarVOttGestionCompra(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttGestionCompra As New DalOttGestionCompra(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttGestionCompra.ListarVOttGestionCompra(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTT_GESTION_COMPRA según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>18/08/2016 02:41:55 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_GESTION_COMPRA_ObtenerDatosPaginacionVOttGestionCompra(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttGestionCompra As New DalOttGestionCompra(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttGestionCompra.ObtenerDatosPaginacionVOttGestionCompra(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTT_GESTION_COMPRALST según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>18/08/2016 02:41:55 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_GESTION_COMPRA_ListarVOttGestionCompralst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttGestionCompra As New DalOttGestionCompra(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttGestionCompra.ListarVOttGestionCompralst(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTT_GESTION_COMPRALST según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>18/08/2016 02:41:55 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_GESTION_COMPRA_ObtenerDatosPaginacionVOttGestionCompralst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttGestionCompra As New DalOttGestionCompra(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttGestionCompra.ObtenerDatosPaginacionVOttGestionCompralst(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    <WebMethod()> _
    Public Function OTT_GESTION_COMPRA_FondoTrabajoAprobSupervisor(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttGestionCompra, ByVal pvo_Trazabilidad As EntOtlTrazabilGestionComp, ByVal pvc_IdentificacionAdjudicado As String) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttGestionCompra As New BllOttGestionCompra(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_BORRAR)

            Return vlo_BllOttGestionCompra.FondoTrabajoAprobSupervisor(pvo_Registro, pvo_Trazabilidad, pvc_IdentificacionAdjudicado)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    <WebMethod()> _
    Public Function OTT_GESTION_COMPRA_FondoTrabajoAprobacion(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttGestionCompra, ByVal pvo_Trazabilidad As EntOtlTrazabilGestionComp) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttGestionCompra As New BllOttGestionCompra(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_BORRAR)

            Return vlo_BllOttGestionCompra.FondoTrabajoAprobacion(pvo_Registro, pvo_Trazabilidad)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    <WebMethod()> _
    Public Function OTT_GESTION_COMPRA_FondoTrabajoAprobacionJefatura(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttGestionCompra, ByVal pvo_Trazabilidad As EntOtlTrazabilGestionComp, ByVal pvb_EnviarCorreo As Boolean) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttGestionCompra As New BllOttGestionCompra(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_BORRAR)

            Return vlo_BllOttGestionCompra.FondoTrabajoAprobacionJefatura(pvo_Registro, pvo_Trazabilidad, pvb_EnviarCorreo)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    <WebMethod()> _
    Public Function OTT_GESTION_COMPRA_UnidadEspAprobSupervisor(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttGestionCompra, ByVal pvo_Trazabilidad As EntOtlTrazabilGestionComp) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttGestionCompra As New BllOttGestionCompra(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_BORRAR)

            Return vlo_BllOttGestionCompra.UnidadEspAprobSupervisor(pvo_Registro, pvo_Trazabilidad)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

#End Region

#Region "OTT_LINEA_GESTION_COMPRA"

    ''' <summary>
    ''' Obtiene los registros de la vista V_OT_LINEA_GC_GROUP_UEC según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>10/10/2016 02:16:14 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_LINEA_GESTION_COMPRA_ListarVOtLineaGcGroupUec(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttLineaGestionCompra As New DalOttLineaGestionCompra(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttLineaGestionCompra.ListarVOtLineaGcGroupUec(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OT_LINEA_GC_GROUP_UEC según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>10/10/2016 02:16:14 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_LINEA_GESTION_COMPRA_ObtenerDatosPaginacionVOtLineaGcGroupUec(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttLineaGestionCompra As New DalOttLineaGestionCompra(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttLineaGestionCompra.ObtenerDatosPaginacionVOtLineaGcGroupUec(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTT_TRAZABILIDAD_PROCESOLst según el criterio y orden indicados, cargando información del responsable desde el BLL
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Carlos Gómez Ondoy</author>
    ''' <creationDate>11/02/2016</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_LINEA_GESTION_COMPRA_ListarVOtLineaGestCompGroupPersonalizado(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttLineaGestionCompra As New BllOttLineaGestionCompra(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_INSERTAR)

            Return vlo_BllOttLineaGestionCompra.ListarVOtLineaGestCompGroupPersonalizado(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OT_LINEA_GEST_COMP_GROUP según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>26/08/2016 10:45:46 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_LINEA_GESTION_COMPRA_ListarVOtLineaGestCompGroup(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttLineaGestionCompra As New DalOttLineaGestionCompra(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttLineaGestionCompra.ListarVOtLineaGestCompGroup(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OT_LINEA_GEST_COMP_GROUP según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>26/08/2016 10:45:46 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_LINEA_GESTION_COMPRA_ObtenerDatosPaginacionVOtLineaGestCompGroup(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttLineaGestionCompra As New DalOttLineaGestionCompra(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttLineaGestionCompra.ObtenerDatosPaginacionVOtLineaGestCompGroup(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite agregar un registro en la tabla OTT_LINEA_GESTION_COMPRA
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>18/08/2016 02:41:55 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_LINEA_GESTION_COMPRA_InsertarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttLineaGestionCompra) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttLineaGestionCompra As New BllOttLineaGestionCompra(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_INSERTAR)

            Return vlo_BllOttLineaGestionCompra.InsertarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTT_LINEA_GESTION_COMPRA
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>18/08/2016 02:41:55 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_LINEA_GESTION_COMPRA_BorrarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttLineaGestionCompra) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttLineaGestionCompra As New DalOttLineaGestionCompra(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_BORRAR)

            Return vlo_DalOttLineaGestionCompra.BorrarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTT_LINEA_GESTION_COMPRA
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>18/08/2016 02:41:55 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_LINEA_GESTION_COMPRA_ModificarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttLineaGestionCompra) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttLineaGestionCompra As New BllOttLineaGestionCompra(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_MODIFICAR)

            Return vlo_BllOttLineaGestionCompra.ModificarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTT_LINEA_GESTION_COMPRA según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>18/08/2016 02:41:55 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_LINEA_GESTION_COMPRA_ListarRegistros(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttLineaGestionCompra As New DalOttLineaGestionCompra(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttLineaGestionCompra.ListarRegistros(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTT_LINEA_GESTION_COMPRALst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>18/08/2016 02:41:55 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_LINEA_GESTION_COMPRA_ListarRegistrosLista(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttLineaGestionCompra As New DalOttLineaGestionCompra(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttLineaGestionCompra.ListarRegistrosLista(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene un registro de la tabla OTT_LINEA_GESTION_COMPRA según el criterio indicado
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <returns>Entidad que representa la información obtenida al ejecutar la consulta</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>18/08/2016 02:41:55 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_LINEA_GESTION_COMPRA_ObtenerRegistro(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String) As EntOttLineaGestionCompra
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttLineaGestionCompra As New DalOttLineaGestionCompra(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttLineaGestionCompra.ObtenerRegistro(pvc_Condicion)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTTH_LINEA_GESTION_COMPRA según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>18/08/2016 02:41:55 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_LINEA_GESTION_COMPRA_ListarVOtthLineaGestionCompra(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttLineaGestionCompra As New DalOttLineaGestionCompra(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttLineaGestionCompra.ListarVOtthLineaGestionCompra(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTTH_LINEA_GESTION_COMPRA según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>18/08/2016 02:41:55 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_LINEA_GESTION_COMPRA_ObtenerDatosPaginacionVOtthLineaGestionCompra(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttLineaGestionCompra As New DalOttLineaGestionCompra(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttLineaGestionCompra.ObtenerDatosPaginacionVOtthLineaGestionCompra(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTT_LINEA_GESTION_COMPRA según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>18/08/2016 02:41:55 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_LINEA_GESTION_COMPRA_ListarVOttLineaGestionCompra(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttLineaGestionCompra As New DalOttLineaGestionCompra(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttLineaGestionCompra.ListarVOttLineaGestionCompra(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTT_LINEA_GESTION_COMPRA según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>18/08/2016 02:41:55 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_LINEA_GESTION_COMPRA_ObtenerDatosPaginacionVOttLineaGestionCompra(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttLineaGestionCompra As New DalOttLineaGestionCompra(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttLineaGestionCompra.ObtenerDatosPaginacionVOttLineaGestionCompra(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTT_LINEA_GESTION_COMPRALST según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>18/08/2016 02:41:55 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_LINEA_GESTION_COMPRA_ListarVOttLineaGestionCompralst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttLineaGestionCompra As New DalOttLineaGestionCompra(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttLineaGestionCompra.ListarVOttLineaGestionCompralst(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTT_LINEA_GESTION_COMPRALST según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>18/08/2016 02:41:55 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_LINEA_GESTION_COMPRA_ObtenerDatosPaginacionVOttLineaGestionCompralst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttLineaGestionCompra As New DalOttLineaGestionCompra(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttLineaGestionCompra.ObtenerDatosPaginacionVOttLineaGestionCompralst(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTT_LINEA_GESTION_COMPRALst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>18/08/2016 02:41:55 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_LINEA_GESTION_COMPRA_ListarRegistrosListaReporte(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttLineaGestionCompra As New BllOttLineaGestionCompra(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_BllOttLineaGestionCompra.ListarRegistrosListaReporte(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTT_TRAZABILIDAD_PROCESOLst según el criterio y orden indicados, cargando información del responsable desde el BLL
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Carlos Gómez Ondoy</author>
    ''' <creationDate>11/02/2016</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_LINEA_GESTION_COMPRA_ListarVOtLineaGcGroupFondoPersonalizado(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttLineaGestionCompra As New BllOttLineaGestionCompra(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_INSERTAR)

            '            Return vlo_BllOttLineaGestionCompra.ListarVOtLineaGestCompGroupPersonalizado(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
            Return vlo_BllOttLineaGestionCompra.ListarVOtLineaGcGroupFondoPersonalizado(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OT_LINEA_GC_GROUP_FONDO según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>19/09/2016 12:11:49 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_LINEA_GESTION_COMPRA_ListarVOtLineaGcGroupFondo(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttLineaGestionCompra As New DalOttLineaGestionCompra(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttLineaGestionCompra.ListarVOtLineaGcGroupFondo(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OT_LINEA_GC_GROUP_FONDO según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>19/09/2016 12:11:49 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_LINEA_GESTION_COMPRA_ObtenerDatosPaginacionVOtLineaGcGroupFondo(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttLineaGestionCompra As New DalOttLineaGestionCompra(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttLineaGestionCompra.ObtenerDatosPaginacionVOtLineaGcGroupFondo(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

#End Region

#Region "OTT_ADJUNTO_COTIZACION"
    ''' <summary>
    ''' Permite agregar un registro en la tabla OTT_ADJUNTO_COTIZACION
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>25/08/2016 12:17:45 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ADJUNTO_COTIZACION_InsertarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttAdjuntoCotizacion) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttAdjuntoCotizacion As New BllOttAdjuntoCotizacion(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_INSERTAR)

            Return vlo_BllOttAdjuntoCotizacion.InsertarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTT_ADJUNTO_COTIZACION
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>25/08/2016 12:17:45 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ADJUNTO_COTIZACION_BorrarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttAdjuntoCotizacion) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttAdjuntoCotizacion As New DalOttAdjuntoCotizacion(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_BORRAR)

            Return vlo_DalOttAdjuntoCotizacion.BorrarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTT_ADJUNTO_COTIZACION
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>25/08/2016 12:17:45 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ADJUNTO_COTIZACION_ModificarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttAdjuntoCotizacion) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttAdjuntoCotizacion As New DalOttAdjuntoCotizacion(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_MODIFICAR)

            Return vlo_DalOttAdjuntoCotizacion.ModificarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTT_ADJUNTO_COTIZACION según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>25/08/2016 12:17:45 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ADJUNTO_COTIZACION_ListarRegistros(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttAdjuntoCotizacion As New DalOttAdjuntoCotizacion(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttAdjuntoCotizacion.ListarRegistros(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTT_ADJUNTO_COTIZACIONLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>25/08/2016 12:17:45 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ADJUNTO_COTIZACION_ListarRegistrosLista(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttAdjuntoCotizacion As New DalOttAdjuntoCotizacion(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttAdjuntoCotizacion.ListarRegistrosLista(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function


    ''' <summary>
    ''' Obtiene un registro de la tabla OTT_ADJUNTO_COTIZACION según el criterio indicado
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <returns>Entidad que representa la información obtenida al ejecutar la consulta</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>25/08/2016 12:17:45 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ADJUNTO_COTIZACION_ObtenerRegistro(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String) As EntOttAdjuntoCotizacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttAdjuntoCotizacion As New DalOttAdjuntoCotizacion(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttAdjuntoCotizacion.ObtenerRegistro(pvc_Condicion)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTTH_ADJUNTO_COTIZACION según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>25/08/2016 12:17:45 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ADJUNTO_COTIZACION_ListarVOtthAdjuntoCotizacion(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttAdjuntoCotizacion As New DalOttAdjuntoCotizacion(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttAdjuntoCotizacion.ListarVOtthAdjuntoCotizacion(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTTH_ADJUNTO_COTIZACION según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>25/08/2016 12:17:45 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ADJUNTO_COTIZACION_ObtenerDatosPaginacionVOtthAdjuntoCotizacion(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttAdjuntoCotizacion As New DalOttAdjuntoCotizacion(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttAdjuntoCotizacion.ObtenerDatosPaginacionVOtthAdjuntoCotizacion(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTT_ADJUNTO_COTIZACION según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>25/08/2016 12:17:45 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ADJUNTO_COTIZACION_ListarVOttAdjuntoCotizacion(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttAdjuntoCotizacion As New DalOttAdjuntoCotizacion(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttAdjuntoCotizacion.ListarVOttAdjuntoCotizacion(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTT_ADJUNTO_COTIZACION según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>25/08/2016 12:17:45 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ADJUNTO_COTIZACION_ObtenerDatosPaginacionVOttAdjuntoCotizacion(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttAdjuntoCotizacion As New DalOttAdjuntoCotizacion(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttAdjuntoCotizacion.ObtenerDatosPaginacionVOttAdjuntoCotizacion(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTT_ADJUNTO_COTIZACIONLST según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>25/08/2016 12:17:45 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ADJUNTO_COTIZACION_ListarVOttAdjuntoCotizacionlst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttAdjuntoCotizacion As New DalOttAdjuntoCotizacion(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttAdjuntoCotizacion.ListarVOttAdjuntoCotizacionlst(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTT_ADJUNTO_COTIZACIONLST según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>25/08/2016 12:17:45 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ADJUNTO_COTIZACION_ObtenerDatosPaginacionVOttAdjuntoCotizacionlst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttAdjuntoCotizacion As New DalOttAdjuntoCotizacion(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttAdjuntoCotizacion.ObtenerDatosPaginacionVOttAdjuntoCotizacionlst(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

#End Region

#Region "OTT_GRUPO_GESTION_COMPRA"
    ''' <summary>
    ''' Permite agregar un registro en la tabla OTT_GRUPO_GESTION_COMPRA
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>25/08/2016 12:17:45 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_GRUPO_GESTION_COMPRA_InsertarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttGrupoGestionCompra) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttGrupoGestionCompra As New BllOttGrupoGestionCompra(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_INSERTAR)

            Return vlo_BllOttGrupoGestionCompra.InsertarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite modificar un registro en la tabla OTT_GRUPO_GESTION_COMPRA, y un archivo adjunto a la gestion
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Carlos Gómez Ondoy</author>
    ''' <creationDate>24/10/2016</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_GESTION_COMPRA_GuardarGestionCompraUnidadEspecializadaGECO(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttGestionCompra, pvo_EntOttAdjuntoGestionCompr As EntOttAdjuntoGestionCompr, pvb_PoseeArchivo As Boolean) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttGrupoGestionCompra As New BllOttGrupoGestionCompra(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_INSERTAR)

            Return vlo_BllOttGrupoGestionCompra.GuardarGestionCompraUnidadEspecializadaGECO(pvo_Registro, pvo_EntOttAdjuntoGestionCompr, pvb_PoseeArchivo)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite modificar un registro en la tabla OTT_GRUPO_GESTION_COMPRA, y un archivo adjunto a la gestion
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Carlos Gómez Ondoy</author>
    ''' <creationDate>24/10/2016</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_GESTION_COMPRA_TramitarGestionCompraUnidadEspecializadaGECO(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttGestionCompra, pvo_EntOttAdjuntoGestionCompr As EntOttAdjuntoGestionCompr) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttGrupoGestionCompra As New BllOttGrupoGestionCompra(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_INSERTAR)

            Return vlo_BllOttGrupoGestionCompra.TramitarGestionCompraUnidadEspecializadaGECO(pvo_Registro, pvo_EntOttAdjuntoGestionCompr)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite modificar dos registros en la tabla OTT_GRUPO_GESTION_COMPRA
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Carlos Gómez Ondoy</author>
    ''' <creationDate>14/10/2016</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_GRUPO_GESTION_COMPRA_SubirNumeroLinea(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttGestionCompra, pvn_NumeroLinea As Integer, pvc_UsuarioSession As String) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttGrupoGestionCompra As New BllOttGrupoGestionCompra(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_INSERTAR)

            Return vlo_BllOttGrupoGestionCompra.SubirNumeroLinea(pvo_Registro, pvn_NumeroLinea, pvc_UsuarioSession)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite modificar dos registros en la tabla OTT_GRUPO_GESTION_COMPRA
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Carlos Gómez Ondoy</author>
    ''' <creationDate>14/10/2016</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_GRUPO_GESTION_COMPRA_BajarNumeroLinea(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttGestionCompra, pvn_NumeroLinea As Integer, pvc_UsuarioSession As String) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttGrupoGestionCompra As New BllOttGrupoGestionCompra(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_INSERTAR)

            Return vlo_BllOttGrupoGestionCompra.BajarNumeroLinea(pvo_Registro, pvn_NumeroLinea, pvc_UsuarioSession)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function


    ''' <summary>
    ''' Permite borrar un registro en la tabla OTT_GRUPO_GESTION_COMPRA
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>25/08/2016 12:17:45 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_GRUPO_GESTION_COMPRA_BorrarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttGrupoGestionCompra) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttGrupoGestionCompra As New BllOttGrupoGestionCompra(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_BORRAR)

            Return vlo_BllOttGrupoGestionCompra.BorrarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTT_GRUPO_GESTION_COMPRA
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>25/08/2016 12:17:45 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_GRUPO_GESTION_COMPRA_ModificarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttGrupoGestionCompra) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttGrupoGestionCompra As New BllOttGrupoGestionCompra(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_MODIFICAR)

            Return vlo_BllOttGrupoGestionCompra.ModificarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTT_GRUPO_GESTION_COMPRA según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>25/08/2016 12:17:45 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_GRUPO_GESTION_COMPRA_ListarRegistros(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttGrupoGestionCompra As New DalOttGrupoGestionCompra(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttGrupoGestionCompra.ListarRegistros(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTT_GRUPO_GESTION_COMPRALst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>25/08/2016 12:17:45 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_GRUPO_GESTION_COMPRA_ListarRegistrosLista(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttGrupoGestionCompra As New DalOttGrupoGestionCompra(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttGrupoGestionCompra.ListarRegistrosLista(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene un registro de la tabla OTT_GRUPO_GESTION_COMPRA según el criterio indicado
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <returns>Entidad que representa la información obtenida al ejecutar la consulta</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>25/08/2016 12:17:45 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_GRUPO_GESTION_COMPRA_ObtenerRegistro(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String) As EntOttGrupoGestionCompra
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttGrupoGestionCompra As New DalOttGrupoGestionCompra(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttGrupoGestionCompra.ObtenerRegistro(pvc_Condicion)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTTH_GRUPO_GESTION_COMPRA según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>25/08/2016 12:17:45 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_GRUPO_GESTION_COMPRA_ListarVOtthGrupoGestionCompra(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttGrupoGestionCompra As New DalOttGrupoGestionCompra(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttGrupoGestionCompra.ListarVOtthGrupoGestionCompra(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTTH_GRUPO_GESTION_COMPRA según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>25/08/2016 12:17:45 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_GRUPO_GESTION_COMPRA_ObtenerDatosPaginacionVOtthGrupoGestionCompra(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttGrupoGestionCompra As New DalOttGrupoGestionCompra(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttGrupoGestionCompra.ObtenerDatosPaginacionVOtthGrupoGestionCompra(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTT_GRUPO_GESTION_COMPRA según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>25/08/2016 12:17:45 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_GRUPO_GESTION_COMPRA_ListarVOttGrupoGestionCompra(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttGrupoGestionCompra As New DalOttGrupoGestionCompra(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttGrupoGestionCompra.ListarVOttGrupoGestionCompra(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTT_GRUPO_GESTION_COMPRA según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>25/08/2016 12:17:45 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_GRUPO_GESTION_COMPRA_ObtenerDatosPaginacionVOttGrupoGestionCompra(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttGrupoGestionCompra As New DalOttGrupoGestionCompra(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttGrupoGestionCompra.ObtenerDatosPaginacionVOttGrupoGestionCompra(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTT_GRUPO_GESTION_COMPRALST según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>25/08/2016 12:17:45 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_GRUPO_GESTION_COMPRA_ListarVOttGrupoGestionCompralst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttGrupoGestionCompra As New DalOttGrupoGestionCompra(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttGrupoGestionCompra.ListarVOttGrupoGestionCompralst(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTT_GRUPO_GESTION_COMPRALST según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>25/08/2016 12:17:45 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_GRUPO_GESTION_COMPRA_ObtenerDatosPaginacionVOttGrupoGestionCompralst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttGrupoGestionCompra As New DalOttGrupoGestionCompra(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttGrupoGestionCompra.ObtenerDatosPaginacionVOttGrupoGestionCompralst(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

#End Region

#Region "OTT_OFERTA_PROVEEDOR"
    ''' <summary>
    ''' Permite agregar un registro en la tabla OTT_OFERTA_PROVEEDOR
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>25/08/2016 12:17:45 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_OFERTA_PROVEEDOR_InsertarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttOfertaProveedor) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttOfertaProveedor As New BllOttOfertaProveedor(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_INSERTAR)

            Return vlo_BllOttOfertaProveedor.InsertarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTT_OFERTA_PROVEEDOR
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>25/08/2016 12:17:45 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_OFERTA_PROVEEDOR_BorrarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttOfertaProveedor) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttOfertaProveedor As New DalOttOfertaProveedor(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_BORRAR)

            Return vlo_DalOttOfertaProveedor.BorrarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTT_OFERTA_PROVEEDOR
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>25/08/2016 12:17:45 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_OFERTA_PROVEEDOR_ModificarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttOfertaProveedor) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttOfertaProveedor As New DalOttOfertaProveedor(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_MODIFICAR)

            Return vlo_DalOttOfertaProveedor.ModificarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTT_OFERTA_PROVEEDOR según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>25/08/2016 12:17:45 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_OFERTA_PROVEEDOR_ListarRegistros(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttOfertaProveedor As New DalOttOfertaProveedor(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttOfertaProveedor.ListarRegistros(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTT_OFERTA_PROVEEDORLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>25/08/2016 12:17:45 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_OFERTA_PROVEEDOR_ListarRegistrosLista(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttOfertaProveedor As New DalOttOfertaProveedor(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttOfertaProveedor.ListarRegistrosLista(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function


    ''' <summary>
    ''' Obtiene un registro de la tabla OTT_OFERTA_PROVEEDOR según el criterio indicado
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <returns>Entidad que representa la información obtenida al ejecutar la consulta</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>25/08/2016 12:17:45 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_OFERTA_PROVEEDOR_ObtenerRegistro(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String) As EntOttOfertaProveedor
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttOfertaProveedor As New DalOttOfertaProveedor(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttOfertaProveedor.ObtenerRegistro(pvc_Condicion)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTTH_OFERTA_PROVEEDOR según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>25/08/2016 12:17:45 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_OFERTA_PROVEEDOR_ListarVOtthOfertaProveedor(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttOfertaProveedor As New DalOttOfertaProveedor(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttOfertaProveedor.ListarVOtthOfertaProveedor(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTTH_OFERTA_PROVEEDOR según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>25/08/2016 12:17:45 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_OFERTA_PROVEEDOR_ObtenerDatosPaginacionVOtthOfertaProveedor(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttOfertaProveedor As New DalOttOfertaProveedor(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttOfertaProveedor.ObtenerDatosPaginacionVOtthOfertaProveedor(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTT_OFERTA_PROVEEDOR según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>25/08/2016 12:17:45 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_OFERTA_PROVEEDOR_ListarVOttOfertaProveedor(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttOfertaProveedor As New DalOttOfertaProveedor(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttOfertaProveedor.ListarVOttOfertaProveedor(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTT_OFERTA_PROVEEDOR según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>25/08/2016 12:17:45 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_OFERTA_PROVEEDOR_ObtenerDatosPaginacionVOttOfertaProveedor(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttOfertaProveedor As New DalOttOfertaProveedor(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttOfertaProveedor.ObtenerDatosPaginacionVOttOfertaProveedor(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTT_OFERTA_PROVEEDORLST según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>25/08/2016 12:17:45 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_OFERTA_PROVEEDOR_ListarVOttOfertaProveedorlst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttOfertaProveedor As New DalOttOfertaProveedor(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttOfertaProveedor.ListarVOttOfertaProveedorlst(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTT_OFERTA_PROVEEDORLST según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>25/08/2016 12:17:45 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_OFERTA_PROVEEDOR_ObtenerDatosPaginacionVOttOfertaProveedorlst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttOfertaProveedor As New DalOttOfertaProveedor(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttOfertaProveedor.ObtenerDatosPaginacionVOttOfertaProveedorlst(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

#End Region

#Region "OTT_PROVEEDOR_COTIZACION"
    ''' <summary>
    ''' Permite agregar un registro en la tabla OTT_PROVEEDOR_COTIZACION
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>25/08/2016 12:17:45 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_PROVEEDOR_COTIZACION_InsertarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttProveedorCotizacion) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttProveedorCotizacion As New BllOttProveedorCotizacion(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_INSERTAR)

            Return vlo_BllOttProveedorCotizacion.InsertarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Procesa la solicitud de cotizacion
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_IdentificacionUsuario">identificacion de usuario en session</param>
    ''' <param name="pvo_EntOttGestionCompra">Entidad a de la gestion respectiva</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Carlos Gómez Ondoy</author>
    ''' <creationDate>02/09/2016</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_PROVEEDOR_COTIZACION_SolicitudCotizacion(pvc_Usuario As String, pvc_Clave As String, pvc_IdentificacionUsuario As String, pvo_EntOttGestionCompra As EntOttGestionCompra) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttProveedorCotizacion As New BllOttProveedorCotizacion(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_INSERTAR)

            Return vlo_BllOttProveedorCotizacion.SolicitudCotizacion(pvc_Usuario, pvc_Clave, pvc_IdentificacionUsuario, pvo_EntOttGestionCompra)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Procesa la solicitud de cotizacion
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_IdentificacionUsuario">identificacion de usuario en session</param>
    ''' <param name="pvo_EntOttGestionCompra">Entidad a de la gestion respectiva</param>
    ''' <param name="pvc_IdentificacionProveedor">Identificacion Proveedor</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Carlos Gómez Ondoy</author>
    ''' <creationDate>05/09/2016</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_PROVEEDOR_COTIZACION_EnviarProveedor(pvc_Usuario As String, pvc_Clave As String, pvc_IdentificacionUsuario As String, pvo_EntOttGestionCompra As EntOttGestionCompra, pvc_IdentificacionProveedor As String) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttProveedorCotizacion As New BllOttProveedorCotizacion(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_INSERTAR)

            Return vlo_BllOttProveedorCotizacion.EnviarProveedor(pvc_Usuario, pvc_Clave, pvc_IdentificacionUsuario, pvo_EntOttGestionCompra, pvc_IdentificacionProveedor)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTT_PROVEEDOR_COTIZACION
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>25/08/2016 12:17:45 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_PROVEEDOR_COTIZACION_BorrarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttProveedorCotizacion) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttProveedorCotizacion As New BllOttProveedorCotizacion(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_BORRAR)

            Return vlo_BllOttProveedorCotizacion.BorrarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTT_PROVEEDOR_COTIZACION
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>25/08/2016 12:17:45 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_PROVEEDOR_COTIZACION_ModificarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttProveedorCotizacion) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttProveedorCotizacion As New DalOttProveedorCotizacion(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_MODIFICAR)

            Return vlo_DalOttProveedorCotizacion.ModificarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTT_PROVEEDOR_COTIZACION según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>25/08/2016 12:17:45 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_PROVEEDOR_COTIZACION_ListarRegistros(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttProveedorCotizacion As New DalOttProveedorCotizacion(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttProveedorCotizacion.ListarRegistros(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTT_PROVEEDOR_COTIZACIONLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>25/08/2016 12:17:45 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_PROVEEDOR_COTIZACION_ListarRegistrosLista(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttProveedorCotizacion As New DalOttProveedorCotizacion(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttProveedorCotizacion.ListarRegistrosLista(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene un registro de la tabla OTT_PROVEEDOR_COTIZACION según el criterio indicado
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <returns>Entidad que representa la información obtenida al ejecutar la consulta</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>25/08/2016 12:17:45 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_PROVEEDOR_COTIZACION_ObtenerRegistro(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String) As EntOttProveedorCotizacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttProveedorCotizacion As New DalOttProveedorCotizacion(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttProveedorCotizacion.ObtenerRegistro(pvc_Condicion)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTTH_PROVEEDOR_COTIZACION según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>25/08/2016 12:17:45 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_PROVEEDOR_COTIZACION_ListarVOtthProveedorCotizacion(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttProveedorCotizacion As New DalOttProveedorCotizacion(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttProveedorCotizacion.ListarVOtthProveedorCotizacion(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTTH_PROVEEDOR_COTIZACION según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>25/08/2016 12:17:45 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_PROVEEDOR_COTIZACION_ObtenerDatosPaginacionVOtthProveedorCotizacion(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttProveedorCotizacion As New DalOttProveedorCotizacion(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttProveedorCotizacion.ObtenerDatosPaginacionVOtthProveedorCotizacion(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTT_PROVEEDOR_COTIZACION según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>25/08/2016 12:17:45 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_PROVEEDOR_COTIZACION_ListarVOttProveedorCotizacion(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttProveedorCotizacion As New DalOttProveedorCotizacion(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttProveedorCotizacion.ListarVOttProveedorCotizacion(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTT_PROVEEDOR_COTIZACION según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>25/08/2016 12:17:45 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_PROVEEDOR_COTIZACION_ObtenerDatosPaginacionVOttProveedorCotizacion(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttProveedorCotizacion As New DalOttProveedorCotizacion(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttProveedorCotizacion.ObtenerDatosPaginacionVOttProveedorCotizacion(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTT_PROVEEDOR_COTIZACIONLST según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>25/08/2016 12:17:45 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_PROVEEDOR_COTIZACION_ListarVOttProveedorCotizacionlst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttProveedorCotizacion As New DalOttProveedorCotizacion(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttProveedorCotizacion.ListarVOttProveedorCotizacionlst(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTT_PROVEEDOR_COTIZACIONLST según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>25/08/2016 12:17:45 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_PROVEEDOR_COTIZACION_ObtenerDatosPaginacionVOttProveedorCotizacionlst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttProveedorCotizacion As New DalOttProveedorCotizacion(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttProveedorCotizacion.ObtenerDatosPaginacionVOttProveedorCotizacionlst(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function


    ''' <summary>
    ''' Obtiene los registros de la vista V_OT_ADJUNTO_PROVEEDOR según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>08/09/2016 11:14:03 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_PROVEEDOR_COTIZACION_ListarVOtAdjuntoProveedor(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttProveedorCotizacion As New DalOttProveedorCotizacion(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttProveedorCotizacion.ListarVOtAdjuntoProveedor(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OT_ADJUNTO_PROVEEDOR según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>08/09/2016 11:14:03 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_PROVEEDOR_COTIZACION_ObtenerDatosPaginacionVOtAdjuntoProveedor(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttProveedorCotizacion As New DalOttProveedorCotizacion(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttProveedorCotizacion.ObtenerDatosPaginacionVOtAdjuntoProveedor(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function


#End Region

#Region "OTT_ADJUNTO_GESTION_COMPR"
    ''' <summary>
    ''' Permite agregar un registro en la tabla OTT_ADJUNTO_GESTION_COMPR
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>24/10/2016 01:26:16 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ADJUNTO_GESTION_COMPR_InsertarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttAdjuntoGestionCompr) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttAdjuntoGestionCompr As New BllOttAdjuntoGestionCompr(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_INSERTAR)

            Return vlo_BllOttAdjuntoGestionCompr.InsertarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTT_ADJUNTO_GESTION_COMPR
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>24/10/2016 01:26:16 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ADJUNTO_GESTION_COMPR_BorrarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttAdjuntoGestionCompr) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttAdjuntoGestionCompr As New DalOttAdjuntoGestionCompr(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_BORRAR)

            Return vlo_DalOttAdjuntoGestionCompr.BorrarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTT_ADJUNTO_GESTION_COMPR
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>24/10/2016 01:26:16 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ADJUNTO_GESTION_COMPR_ModificarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttAdjuntoGestionCompr) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttAdjuntoGestionCompr As New DalOttAdjuntoGestionCompr(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_MODIFICAR)

            Return vlo_DalOttAdjuntoGestionCompr.ModificarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTT_ADJUNTO_GESTION_COMPR según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>24/10/2016 01:26:16 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ADJUNTO_GESTION_COMPR_ListarRegistros(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttAdjuntoGestionCompr As New DalOttAdjuntoGestionCompr(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttAdjuntoGestionCompr.ListarRegistros(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTT_ADJUNTO_GESTION_COMPRLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>24/10/2016 01:26:16 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ADJUNTO_GESTION_COMPR_ListarRegistrosLista(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttAdjuntoGestionCompr As New DalOttAdjuntoGestionCompr(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttAdjuntoGestionCompr.ListarRegistrosLista(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene un registro de la tabla OTT_ADJUNTO_GESTION_COMPR según el criterio indicado
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <returns>Entidad que representa la información obtenida al ejecutar la consulta</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>24/10/2016 01:26:16 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ADJUNTO_GESTION_COMPR_ObtenerRegistro(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String) As EntOttAdjuntoGestionCompr
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttAdjuntoGestionCompr As New DalOttAdjuntoGestionCompr(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttAdjuntoGestionCompr.ObtenerRegistro(pvc_Condicion)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTTH_ADJUNTO_GESTION_COMPR según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>24/10/2016 01:26:16 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ADJUNTO_GESTION_COMPR_ListarVOtthAdjuntoGestionCompr(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttAdjuntoGestionCompr As New DalOttAdjuntoGestionCompr(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttAdjuntoGestionCompr.ListarVOtthAdjuntoGestionCompr(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTTH_ADJUNTO_GESTION_COMPR según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>24/10/2016 01:26:16 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ADJUNTO_GESTION_COMPR_ObtenerDatosPaginacionVOtthAdjuntoGestionCompr(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttAdjuntoGestionCompr As New DalOttAdjuntoGestionCompr(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttAdjuntoGestionCompr.ObtenerDatosPaginacionVOtthAdjuntoGestionCompr(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTT_ADJUNTO_GESTION_COMPR según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>24/10/2016 01:26:16 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ADJUNTO_GESTION_COMPR_ListarVOttAdjuntoGestionCompr(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttAdjuntoGestionCompr As New DalOttAdjuntoGestionCompr(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttAdjuntoGestionCompr.ListarVOttAdjuntoGestionCompr(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTT_ADJUNTO_GESTION_COMPR según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>24/10/2016 01:26:16 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ADJUNTO_GESTION_COMPR_ObtenerDatosPaginacionVOttAdjuntoGestionCompr(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttAdjuntoGestionCompr As New DalOttAdjuntoGestionCompr(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttAdjuntoGestionCompr.ObtenerDatosPaginacionVOttAdjuntoGestionCompr(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTT_ADJUNTO_GESTION_COMPRLST según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>24/10/2016 01:26:16 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ADJUNTO_GESTION_COMPR_ListarVOttAdjuntoGestionComprlst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttAdjuntoGestionCompr As New DalOttAdjuntoGestionCompr(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttAdjuntoGestionCompr.ListarVOttAdjuntoGestionComprlst(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTT_ADJUNTO_GESTION_COMPRLST según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>24/10/2016 01:26:16 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ADJUNTO_GESTION_COMPR_ObtenerDatosPaginacionVOttAdjuntoGestionComprlst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttAdjuntoGestionCompr As New DalOttAdjuntoGestionCompr(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttAdjuntoGestionCompr.ObtenerDatosPaginacionVOttAdjuntoGestionComprlst(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

#End Region

#Region "OTL_DET_APROVISIONAMIENTO"
    ''' <summary>
    ''' Permite agregar un registro en la tabla OTL_DET_APROVISIONAMIENTO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>11/01/2017 01:45:14 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTL_DET_APROVISIONAMIENTO_InsertarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtlDetAprovisionamiento) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtlDetAprovisionamiento As New BllOtlDetAprovisionamiento(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_INSERTAR)

            Return vlo_BllOtlDetAprovisionamiento.InsertarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTL_DET_APROVISIONAMIENTO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>11/01/2017 01:45:14 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTL_DET_APROVISIONAMIENTO_BorrarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtlDetAprovisionamiento) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtlDetAprovisionamiento As New DalOtlDetAprovisionamiento(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_BORRAR)

            Return vlo_DalOtlDetAprovisionamiento.BorrarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTL_DET_APROVISIONAMIENTO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>11/01/2017 01:45:14 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTL_DET_APROVISIONAMIENTO_ModificarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtlDetAprovisionamiento) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtlDetAprovisionamiento As New DalOtlDetAprovisionamiento(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_MODIFICAR)

            Return vlo_DalOtlDetAprovisionamiento.ModificarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTL_DET_APROVISIONAMIENTO según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>11/01/2017 01:45:14 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTL_DET_APROVISIONAMIENTO_ListarRegistros(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtlDetAprovisionamiento As New DalOtlDetAprovisionamiento(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtlDetAprovisionamiento.ListarRegistros(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTL_DET_APROVISIONAMIENTO según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>11/01/2017 01:45:14 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTL_DET_APROVISIONAMIENTO_ObtenerDatosPaginacionVOtlDetAprovisionamiento(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtlDetAprovisionamiento As New DalOtlDetAprovisionamiento(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtlDetAprovisionamiento.ObtenerDatosPaginacionVOtlDetAprovisionamiento(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTL_DET_APROVISIONAMIENTOLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>11/01/2017 01:45:14 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTL_DET_APROVISIONAMIENTO_ListarRegistrosLista(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtlDetAprovisionamiento As New DalOtlDetAprovisionamiento(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtlDetAprovisionamiento.ListarRegistrosLista(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTL_DET_APROVISIONAMIENTOLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>11/01/2017 01:45:14 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTL_DET_APROVISIONAMIENTO_ObtenerDatosPaginacionVOtlDetAprovisionamientolst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtlDetAprovisionamiento As New DalOtlDetAprovisionamiento(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtlDetAprovisionamiento.ObtenerDatosPaginacionVOtlDetAprovisionamientolst(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene un registro de la tabla OTL_DET_APROVISIONAMIENTO según el criterio indicado
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <returns>Entidad que representa la información obtenida al ejecutar la consulta</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>11/01/2017 01:45:14 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTL_DET_APROVISIONAMIENTO_ObtenerRegistro(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String) As EntOtlDetAprovisionamiento
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtlDetAprovisionamiento As New DalOtlDetAprovisionamiento(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtlDetAprovisionamiento.ObtenerRegistro(pvc_Condicion)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

#End Region

#Region "OTT_APROVISIONAMIENTO"
    ''' <summary>
    ''' Permite agregar un registro en la tabla OTT_APROVISIONAMIENTO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>11/01/2017 01:45:14 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_APROVISIONAMIENTO_InsertarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttAprovisionamiento) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttAprovisionamiento As New BllOttAprovisionamiento(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_INSERTAR)

            Return vlo_BllOttAprovisionamiento.InsertarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTT_APROVISIONAMIENTO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>11/01/2017 01:45:14 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_APROVISIONAMIENTO_BorrarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttAprovisionamiento) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttAprovisionamiento As New BllOttAprovisionamiento(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_BORRAR)

            Return vlo_BllOttAprovisionamiento.BorrarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTT_APROVISIONAMIENTO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>11/01/2017 01:45:14 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_APROVISIONAMIENTO_ModificarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttAprovisionamiento) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttAprovisionamiento As New DalOttAprovisionamiento(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_MODIFICAR)

            Return vlo_DalOttAprovisionamiento.ModificarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTT_APROVISIONAMIENTO según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>11/01/2017 01:45:14 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_APROVISIONAMIENTO_ListarRegistros(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttAprovisionamiento As New DalOttAprovisionamiento(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttAprovisionamiento.ListarRegistros(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTT_APROVISIONAMIENTO según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>11/01/2017 01:45:14 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_APROVISIONAMIENTO_ObtenerDatosPaginacionVOttAprovisionamiento(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttAprovisionamiento As New DalOttAprovisionamiento(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttAprovisionamiento.ObtenerDatosPaginacionVOttAprovisionamiento(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTT_APROVISIONAMIENTOLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>11/01/2017 01:45:14 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_APROVISIONAMIENTO_ListarRegistrosLista(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttAprovisionamiento As New DalOttAprovisionamiento(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttAprovisionamiento.ListarRegistrosLista(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTT_APROVISIONAMIENTOLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>11/01/2017 01:45:14 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_APROVISIONAMIENTO_ObtenerDatosPaginacionVOttAprovisionamientolst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttAprovisionamiento As New DalOttAprovisionamiento(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttAprovisionamiento.ObtenerDatosPaginacionVOttAprovisionamientolst(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene un registro de la tabla OTT_APROVISIONAMIENTO según el criterio indicado
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <returns>Entidad que representa la información obtenida al ejecutar la consulta</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>11/01/2017 01:45:14 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_APROVISIONAMIENTO_ObtenerRegistro(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String) As EntOttAprovisionamiento
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttAprovisionamiento As New DalOttAprovisionamiento(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttAprovisionamiento.ObtenerRegistro(pvc_Condicion)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTTH_APROVISIONAMIENTO según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>11/01/2017 01:45:14 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_APROVISIONAMIENTO_ListarVOtthAprovisionamiento(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttAprovisionamiento As New DalOttAprovisionamiento(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttAprovisionamiento.ListarVOtthAprovisionamiento(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTTH_APROVISIONAMIENTO según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>11/01/2017 01:45:14 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_APROVISIONAMIENTO_ObtenerDatosPaginacionVOtthAprovisionamiento(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttAprovisionamiento As New DalOttAprovisionamiento(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttAprovisionamiento.ObtenerDatosPaginacionVOtthAprovisionamiento(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

#End Region

#Region "OTT_DET_APROVISIONAMIENTO"
    ''' <summary>
    ''' Permite agregar un registro en la tabla OTT_DET_APROVISIONAMIENTO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>11/01/2017 01:45:15 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_DET_APROVISIONAMIENTO_InsertarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttDetAprovisionamiento) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttDetAprovisionamiento As New BllOttDetAprovisionamiento(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_INSERTAR)

            Return vlo_BllOttDetAprovisionamiento.InsertarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTT_DET_APROVISIONAMIENTO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>11/01/2017 01:45:15 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_DET_APROVISIONAMIENTO_BorrarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttDetAprovisionamiento) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttDetAprovisionamiento As New DalOttDetAprovisionamiento(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_BORRAR)

            Return vlo_DalOttDetAprovisionamiento.BorrarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTT_DET_APROVISIONAMIENTO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>11/01/2017 01:45:15 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_DET_APROVISIONAMIENTO_ModificarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttDetAprovisionamiento) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttDetAprovisionamiento As New DalOttDetAprovisionamiento(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_MODIFICAR)

            Return vlo_DalOttDetAprovisionamiento.ModificarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTT_DET_APROVISIONAMIENTO según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>11/01/2017 01:45:15 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_DET_APROVISIONAMIENTO_ListarRegistros(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttDetAprovisionamiento As New DalOttDetAprovisionamiento(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttDetAprovisionamiento.ListarRegistros(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTT_DET_APROVISIONAMIENTO según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>11/01/2017 01:45:15 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_DET_APROVISIONAMIENTO_ObtenerDatosPaginacionVOttDetAprovisionamiento(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttDetAprovisionamiento As New DalOttDetAprovisionamiento(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttDetAprovisionamiento.ObtenerDatosPaginacionVOttDetAprovisionamiento(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTT_DET_APROVISIONAMIENTOLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>11/01/2017 01:45:15 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_DET_APROVISIONAMIENTO_ListarRegistrosLista(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttDetAprovisionamiento As New DalOttDetAprovisionamiento(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttDetAprovisionamiento.ListarRegistrosLista(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTT_DET_APROVISIONAMIENTOLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>11/01/2017 01:45:15 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_DET_APROVISIONAMIENTO_ObtenerDatosPaginacionVOttDetAprovisionamientolst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttDetAprovisionamiento As New DalOttDetAprovisionamiento(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttDetAprovisionamiento.ObtenerDatosPaginacionVOttDetAprovisionamientolst(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene un registro de la tabla OTT_DET_APROVISIONAMIENTO según el criterio indicado
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <returns>Entidad que representa la información obtenida al ejecutar la consulta</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>11/01/2017 01:45:15 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_DET_APROVISIONAMIENTO_ObtenerRegistro(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String) As EntOttDetAprovisionamiento
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttDetAprovisionamiento As New DalOttDetAprovisionamiento(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttDetAprovisionamiento.ObtenerRegistro(pvc_Condicion)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTTH_DET_APROVISIONAMIENTO según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>11/01/2017 01:45:15 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_DET_APROVISIONAMIENTO_ListarVOtthDetAprovisionamiento(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttDetAprovisionamiento As New DalOttDetAprovisionamiento(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttDetAprovisionamiento.ListarVOtthDetAprovisionamiento(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTTH_DET_APROVISIONAMIENTO según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>11/01/2017 01:45:15 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_DET_APROVISIONAMIENTO_ObtenerDatosPaginacionVOtthDetAprovisionamiento(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttDetAprovisionamiento As New DalOttDetAprovisionamiento(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttDetAprovisionamiento.ObtenerDatosPaginacionVOtthDetAprovisionamiento(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

#End Region

#Region "OTL_TRAZABILIDAD_AJUSTE"
    ''' <summary>
    ''' Permite agregar un registro en la tabla OTL_TRAZABILIDAD_AJUSTE
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>24/01/2017 02:01:22 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTL_TRAZABILIDAD_AJUSTE_InsertarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtlTrazabilidadAjuste) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtlTrazabilidadAjuste As New DalOtlTrazabilidadAjuste(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_INSERTAR)

            Return vlo_DalOtlTrazabilidadAjuste.InsertarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTL_TRAZABILIDAD_AJUSTE
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>24/01/2017 02:01:22 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTL_TRAZABILIDAD_AJUSTE_BorrarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtlTrazabilidadAjuste) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtlTrazabilidadAjuste As New DalOtlTrazabilidadAjuste(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_BORRAR)

            Return vlo_DalOtlTrazabilidadAjuste.BorrarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTL_TRAZABILIDAD_AJUSTE
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>24/01/2017 02:01:22 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTL_TRAZABILIDAD_AJUSTE_ModificarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtlTrazabilidadAjuste) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtlTrazabilidadAjuste As New DalOtlTrazabilidadAjuste(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_MODIFICAR)

            Return vlo_DalOtlTrazabilidadAjuste.ModificarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTL_TRAZABILIDAD_AJUSTE según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>24/01/2017 02:01:22 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTL_TRAZABILIDAD_AJUSTE_ListarRegistros(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtlTrazabilidadAjuste As New DalOtlTrazabilidadAjuste(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtlTrazabilidadAjuste.ListarRegistros(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTL_TRAZABILIDAD_AJUSTE según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>24/01/2017 02:01:22 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTL_TRAZABILIDAD_AJUSTE_ObtenerDatosPaginacionVOtlTrazabilidadAjuste(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtlTrazabilidadAjuste As New DalOtlTrazabilidadAjuste(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtlTrazabilidadAjuste.ObtenerDatosPaginacionVOtlTrazabilidadAjuste(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTL_TRAZABILIDAD_AJUSTELst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>24/01/2017 02:01:22 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTL_TRAZABILIDAD_AJUSTE_ListarRegistrosLista(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtlTrazabilidadAjuste As New DalOtlTrazabilidadAjuste(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtlTrazabilidadAjuste.ListarRegistrosLista(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTL_TRAZABILIDAD_AJUSTELst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>24/01/2017 02:01:22 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTL_TRAZABILIDAD_AJUSTE_ObtenerDatosPaginacionVOtlTrazabilidadAjustelst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtlTrazabilidadAjuste As New DalOtlTrazabilidadAjuste(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtlTrazabilidadAjuste.ObtenerDatosPaginacionVOtlTrazabilidadAjustelst(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene un registro de la tabla OTL_TRAZABILIDAD_AJUSTE según el criterio indicado
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <returns>Entidad que representa la información obtenida al ejecutar la consulta</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>24/01/2017 02:01:22 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTL_TRAZABILIDAD_AJUSTE_ObtenerRegistro(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String) As EntOtlTrazabilidadAjuste
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtlTrazabilidadAjuste As New DalOtlTrazabilidadAjuste(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtlTrazabilidadAjuste.ObtenerRegistro(pvc_Condicion)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

#End Region

#Region "OTT_AJUSTE_INVENTARIO"
    ''' <summary>
    ''' Permite agregar un registro en la tabla OTT_AJUSTE_INVENTARIO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>24/01/2017 02:01:22 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_AJUSTE_INVENTARIO_InsertarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttAjusteInventario) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttAjusteInventario As New BllOttAjusteInventario(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_INSERTAR)

            Return vlo_BllOttAjusteInventario.InsertarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTT_AJUSTE_INVENTARIO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>24/01/2017 02:01:22 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_AJUSTE_INVENTARIO_BorrarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttAjusteInventario) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttAjusteInventario As New BllOttAjusteInventario(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_BORRAR)

            Return vlo_BllOttAjusteInventario.BorrarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTT_AJUSTE_INVENTARIO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>24/01/2017 02:01:22 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_AJUSTE_INVENTARIO_ModificarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttAjusteInventario) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttAjusteInventario As New DalOttAjusteInventario(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_MODIFICAR)

            Return vlo_DalOttAjusteInventario.ModificarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTT_AJUSTE_INVENTARIO según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>24/01/2017 02:01:22 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_AJUSTE_INVENTARIO_ListarRegistros(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttAjusteInventario As New DalOttAjusteInventario(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttAjusteInventario.ListarRegistros(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTT_AJUSTE_INVENTARIO según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>24/01/2017 02:01:22 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_AJUSTE_INVENTARIO_ObtenerDatosPaginacionVOttAjusteInventario(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttAjusteInventario As New DalOttAjusteInventario(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttAjusteInventario.ObtenerDatosPaginacionVOttAjusteInventario(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTT_AJUSTE_INVENTARIOLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>24/01/2017 02:01:22 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_AJUSTE_INVENTARIO_ListarRegistrosLista(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttAjusteInventario As New DalOttAjusteInventario(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttAjusteInventario.ListarRegistrosLista(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTT_AJUSTE_INVENTARIOLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>24/01/2017 02:01:22 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_AJUSTE_INVENTARIO_ObtenerDatosPaginacionVOttAjusteInventariolst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttAjusteInventario As New DalOttAjusteInventario(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttAjusteInventario.ObtenerDatosPaginacionVOttAjusteInventariolst(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene un registro de la tabla OTT_AJUSTE_INVENTARIO según el criterio indicado
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <returns>Entidad que representa la información obtenida al ejecutar la consulta</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>24/01/2017 02:01:22 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_AJUSTE_INVENTARIO_ObtenerRegistro(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String) As EntOttAjusteInventario
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttAjusteInventario As New DalOttAjusteInventario(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttAjusteInventario.ObtenerRegistro(pvc_Condicion)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTTH_AJUSTE_INVENTARIO según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>24/01/2017 02:01:22 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_AJUSTE_INVENTARIO_ListarVOtthAjusteInventario(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttAjusteInventario As New DalOttAjusteInventario(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttAjusteInventario.ListarVOtthAjusteInventario(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTTH_AJUSTE_INVENTARIO según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>24/01/2017 02:01:22 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_AJUSTE_INVENTARIO_ObtenerDatosPaginacionVOtthAjusteInventario(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttAjusteInventario As New DalOttAjusteInventario(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttAjusteInventario.ObtenerDatosPaginacionVOtthAjusteInventario(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    <WebMethod()> _
    Public Function OTT_AJUSTE_INVENTARIO_CrearAjusteIndividual(pvc_Usuario As String, pvc_Clave As String, pvn_IdUbicacion As Integer, pvc_IdBodega As Integer, pvn_IdMaterial As Integer, pvc_CantidadAjuste As String, pvc_Observaciones As String, pvc_Tipo As String, pvc_UsuarioCrea As String, pvb_Finalizar As Boolean) As String
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttAjusteInventario As New BllOttAjusteInventario(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_INSERTAR)

            Return vlo_BllOttAjusteInventario.CrearAjusteIndividual(pvn_IdUbicacion, pvc_IdBodega, pvn_IdMaterial, pvc_CantidadAjuste, pvc_Observaciones, pvc_Tipo, pvc_UsuarioCrea, pvb_Finalizar)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    <WebMethod()> _
    Public Function OTT_AJUSTE_INVENTARIO_ModificarAjusteIndividual(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_EntOttAjusteInventario As EntOttAjusteInventario, pvc_CantidadAjuste As String, pvc_Observaciones As String, pvc_Tipo As String, pvc_UsuarioCrea As String, pvb_Finalizar As Boolean) As String
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttAjusteInventario As New BllOttAjusteInventario(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_INSERTAR)

            Return vlo_BllOttAjusteInventario.ModificarAjusteIndividual(pvo_EntOttAjusteInventario, pvc_CantidadAjuste, pvc_Observaciones, pvc_Tipo, pvc_UsuarioCrea, pvb_Finalizar)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    <WebMethod()> _
    Public Function OTT_AJUSTE_INVENTARIO_CrearAjusteGlobal(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_DsDetalles As Data.DataSet, pvn_IdUbicacion As Integer, pvc_IdBodega As Integer, pvc_Observaciones As String, pvc_UsuarioCrea As String, pvb_Finalizar As Boolean) As String
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttAjusteInventario As New BllOttAjusteInventario(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_INSERTAR)

            Return vlo_BllOttAjusteInventario.CrearAjusteGlobal(pvo_DsDetalles, pvn_IdUbicacion, pvc_IdBodega, pvc_Observaciones, pvc_UsuarioCrea, pvb_Finalizar)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    <WebMethod()> _
    Public Function OTT_AJUSTE_INVENTARIO_ModificarAjusteGlobal(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_DsDetalles As Data.DataSet, ByVal pvo_EntOttAjusteInventario As EntOttAjusteInventario, pvc_Observaciones As String, pvc_UsuarioCrea As String, pvb_Finalizar As Boolean) As String
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttAjusteInventario As New BllOttAjusteInventario(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_INSERTAR)

            Return vlo_BllOttAjusteInventario.ModificarAjusteGlobal(pvo_DsDetalles, pvo_EntOttAjusteInventario, pvc_Observaciones, pvc_UsuarioCrea, pvb_Finalizar)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    <WebMethod()> _
    Public Function OTT_AJUSTE_INVENTARIO_CrearAjusteExistencia(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_DsDetalles As Data.DataSet, pvn_IdUbicacion As Integer, pvc_IdBodega As Integer, pvc_Observaciones As String, pvc_UsuarioCrea As String, pvb_Finalizar As Boolean) As String
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttAjusteInventario As New BllOttAjusteInventario(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_INSERTAR)

            Return vlo_BllOttAjusteInventario.CrearAjusteExistencia(pvo_DsDetalles, pvn_IdUbicacion, pvc_IdBodega, pvc_Observaciones, pvc_UsuarioCrea, pvb_Finalizar)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    <WebMethod()> _
    Public Function OTT_AJUSTE_INVENTARIO_ModificarAjusteExistencia(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_DsDetalles As Data.DataSet, ByVal pvo_EntOttAjusteInventario As EntOttAjusteInventario, pvc_Observaciones As String, pvc_UsuarioCrea As String, pvb_Finalizar As Boolean) As String
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttAjusteInventario As New BllOttAjusteInventario(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_INSERTAR)

            Return vlo_BllOttAjusteInventario.ModificarAjusteExistencia(pvo_DsDetalles, pvo_EntOttAjusteInventario, pvc_Observaciones, pvc_UsuarioCrea, pvb_Finalizar)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Ejecuta la función FC_OT_CONSECUTIVO_AJUSTE
    ''' </summary>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>26/01/2017 11:19:28 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_AJUSTE_INVENTARIO_ObtenerFcOtConsecutivoAjuste(pvc_Usuario As String, pvc_Clave As String, pvn_PvnAnnio As Integer, pvn_PvnIdubicacion As Integer) As Double
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttAjusteInventario As New DalOttAjusteInventario(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttAjusteInventario.ObtenerFcOtConsecutivoAjuste(pvn_PvnAnnio, pvn_PvnIdubicacion)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    <WebMethod()> _
    Public Function OTT_AJUSTE_INVENTARIO_AprobacionSupervisor(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttAjusteInventario, ByVal pvo_Trazabilidad As EntOtlTrazabilidadAjuste) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttAjusteInventario As New BllOttAjusteInventario(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_BORRAR)

            Return vlo_BllOttAjusteInventario.AprobacionSupervisor(pvo_Registro, pvo_Trazabilidad)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    <WebMethod()> _
    Public Function OTT_AJUSTE_INVENTARIO_AprobacionJefatura(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttAjusteInventario, ByVal pvo_Trazabilidad As EntOtlTrazabilidadAjuste) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttAjusteInventario As New BllOttAjusteInventario(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_BORRAR)

            Return vlo_BllOttAjusteInventario.AprobacionJefatura(pvo_Registro, pvo_Trazabilidad)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

#End Region

#Region "OTT_DETALLE_AJUSTE"
    ''' <summary>
    ''' Permite agregar un registro en la tabla OTT_DETALLE_AJUSTE
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>24/01/2017 02:01:22 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_DETALLE_AJUSTE_InsertarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttDetalleAjuste) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttDetalleAjuste As New BllOttDetalleAjuste(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_INSERTAR)

            Return vlo_BllOttDetalleAjuste.InsertarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTT_DETALLE_AJUSTE
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>24/01/2017 02:01:22 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_DETALLE_AJUSTE_BorrarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttDetalleAjuste) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttDetalleAjuste As New DalOttDetalleAjuste(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_BORRAR)

            Return vlo_DalOttDetalleAjuste.BorrarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTT_DETALLE_AJUSTE
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>24/01/2017 02:01:22 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_DETALLE_AJUSTE_ModificarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttDetalleAjuste) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttDetalleAjuste As New DalOttDetalleAjuste(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_MODIFICAR)

            Return vlo_DalOttDetalleAjuste.ModificarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTT_DETALLE_AJUSTE según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>24/01/2017 02:01:22 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_DETALLE_AJUSTE_ListarRegistros(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttDetalleAjuste As New DalOttDetalleAjuste(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttDetalleAjuste.ListarRegistros(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTT_DETALLE_AJUSTE según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>24/01/2017 02:01:22 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_DETALLE_AJUSTE_ObtenerDatosPaginacionVOttDetalleAjuste(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttDetalleAjuste As New DalOttDetalleAjuste(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttDetalleAjuste.ObtenerDatosPaginacionVOttDetalleAjuste(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTT_DETALLE_AJUSTELst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>24/01/2017 02:01:22 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_DETALLE_AJUSTE_ListarRegistrosLista(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttDetalleAjuste As New DalOttDetalleAjuste(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttDetalleAjuste.ListarRegistrosLista(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTT_DETALLE_AJUSTELst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>24/01/2017 02:01:22 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_DETALLE_AJUSTE_ObtenerDatosPaginacionVOttDetalleAjustelst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttDetalleAjuste As New DalOttDetalleAjuste(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttDetalleAjuste.ObtenerDatosPaginacionVOttDetalleAjustelst(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene un registro de la tabla OTT_DETALLE_AJUSTE según el criterio indicado
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <returns>Entidad que representa la información obtenida al ejecutar la consulta</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>24/01/2017 02:01:22 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_DETALLE_AJUSTE_ObtenerRegistro(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String) As EntOttDetalleAjuste
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttDetalleAjuste As New DalOttDetalleAjuste(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttDetalleAjuste.ObtenerRegistro(pvc_Condicion)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTTH_DETALLE_AJUSTE según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>24/01/2017 02:01:22 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_DETALLE_AJUSTE_ListarVOtthDetalleAjuste(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttDetalleAjuste As New DalOttDetalleAjuste(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttDetalleAjuste.ListarVOtthDetalleAjuste(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTTH_DETALLE_AJUSTE según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>24/01/2017 02:01:22 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_DETALLE_AJUSTE_ObtenerDatosPaginacionVOtthDetalleAjuste(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttDetalleAjuste As New DalOttDetalleAjuste(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttDetalleAjuste.ObtenerDatosPaginacionVOtthDetalleAjuste(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

#End Region

#Region "OTT_GESTION_INGRESO_MATER"
    ''' <summary>
    ''' Permite agregar un registro en la tabla OTT_GESTION_INGRESO_MATER
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>01/02/2017 02:22:54 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_GESTION_INGRESO_MATER_InsertarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttGestionIngresoMater) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttGestionIngresoMater As New BllOttGestionIngresoMater(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_INSERTAR)

            Return vlo_BllOttGestionIngresoMater.InsertarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTT_GESTION_INGRESO_MATER
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>01/02/2017 02:22:54 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_GESTION_INGRESO_MATER_BorrarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttGestionIngresoMater) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttGestionIngresoMater As New BllOttGestionIngresoMater(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_BORRAR)

            Return vlo_BllOttGestionIngresoMater.BorrarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTT_GESTION_INGRESO_MATER
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>01/02/2017 02:22:54 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_GESTION_INGRESO_MATER_ModificarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttGestionIngresoMater) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttGestionIngresoMater As New DalOttGestionIngresoMater(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_MODIFICAR)

            Return vlo_DalOttGestionIngresoMater.ModificarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTT_GESTION_INGRESO_MATER según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>01/02/2017 02:22:54 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_GESTION_INGRESO_MATER_ListarRegistros(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttGestionIngresoMater As New DalOttGestionIngresoMater(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttGestionIngresoMater.ListarRegistros(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTT_GESTION_INGRESO_MATER según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>01/02/2017 02:22:54 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_GESTION_INGRESO_MATER_ObtenerDatosPaginacionVOttGestionIngresoMater(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttGestionIngresoMater As New DalOttGestionIngresoMater(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttGestionIngresoMater.ObtenerDatosPaginacionVOttGestionIngresoMater(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTT_GESTION_INGRESO_MATERLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>01/02/2017 02:22:54 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_GESTION_INGRESO_MATER_ListarRegistrosLista(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttGestionIngresoMater As New DalOttGestionIngresoMater(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttGestionIngresoMater.ListarRegistrosLista(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTT_GESTION_INGRESO_MATERLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>01/02/2017 02:22:54 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_GESTION_INGRESO_MATER_ObtenerDatosPaginacionVOttGestionIngresoMaterlst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttGestionIngresoMater As New DalOttGestionIngresoMater(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttGestionIngresoMater.ObtenerDatosPaginacionVOttGestionIngresoMaterlst(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene un registro de la tabla OTT_GESTION_INGRESO_MATER según el criterio indicado
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <returns>Entidad que representa la información obtenida al ejecutar la consulta</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>01/02/2017 02:22:54 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_GESTION_INGRESO_MATER_ObtenerRegistro(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String) As EntOttGestionIngresoMater
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttGestionIngresoMater As New DalOttGestionIngresoMater(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttGestionIngresoMater.ObtenerRegistro(pvc_Condicion)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTTH_GESTION_INGRESO_MATER según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>01/02/2017 02:22:54 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_GESTION_INGRESO_MATER_ListarVOtthGestionIngresoMater(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttGestionIngresoMater As New DalOttGestionIngresoMater(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttGestionIngresoMater.ListarVOtthGestionIngresoMater(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTTH_GESTION_INGRESO_MATER según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>01/02/2017 02:22:54 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_GESTION_INGRESO_MATER_ObtenerDatosPaginacionVOtthGestionIngresoMater(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttGestionIngresoMater As New DalOttGestionIngresoMater(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttGestionIngresoMater.ObtenerDatosPaginacionVOtthGestionIngresoMater(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Ejecuta la función FC_OT_CONSECUTIVO_INGRESO_MAT
    ''' </summary>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>14/02/2017 11:44:36 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_GESTION_INGRESO_MATER_ObtenerFcOtConsecutivoIngresoMat(pvc_Usuario As String, pvc_Clave As String, pvn_PvnAnnio As Integer, pvn_PvnIdubicacion As Integer, pvn_PvnNumerogestion As Integer, pvn_PvnIdviacompra As Integer) As Double
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttGestionIngresoMater As New DalOttGestionIngresoMater(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttGestionIngresoMater.ObtenerFcOtConsecutivoIngresoMat(pvn_PvnAnnio, pvn_PvnIdubicacion, pvn_PvnNumerogestion, pvn_PvnIdviacompra)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    <WebMethod()> _
    Public Function OTT_GESTION_INGRESO_MATER_CrearIngresoMaterial(pvc_Usuario As String, pvc_Clave As String, pvo_EntOttAdjuntoGestionIngr As EntOttAdjuntoGestionIngr, pvo_DsEnca As DataSet, pvo_DsDetalle As DataSet, pvn_IdUbicacion As Integer, pvn_IdViaCompra As Integer, pvn_Anno As Integer, pvn_NumeroGestion As Integer, pvc_IdProveedor As String, pvc_Observaciones As String, pvc_UsuarioCrea As String, pvb_Finalizar As Boolean) As String
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttGestionIngresoMater As New BllOttGestionIngresoMater(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_INSERTAR)

            Return vlo_BllOttGestionIngresoMater.CrearIngresoMaterial(pvo_EntOttAdjuntoGestionIngr, pvo_DsEnca, pvo_DsDetalle, pvn_IdUbicacion, pvn_IdViaCompra, pvn_Anno, pvn_NumeroGestion, pvc_IdProveedor, pvc_Observaciones, pvc_UsuarioCrea, pvb_Finalizar)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    <WebMethod()> _
    Public Function OTT_GESTION_INGRESO_MATER_ModificarIngresoMaterial(pvc_Usuario As String, pvc_Clave As String, pvo_EntOttAdjuntoGestionIngr As EntOttAdjuntoGestionIngr, pvo_DsEnca As DataSet, pvo_DsDetalle As DataSet, pvn_IdUbicacion As Integer, pvn_IdViaCompra As Integer, pvn_Anno As Integer, pvn_NumeroGestion As Integer, pvn_Consecutivo As Integer, pvc_IdProveedor As String, pvc_Observaciones As String, pvc_UsuarioCrea As String, pvb_Finalizar As Boolean) As String
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttGestionIngresoMater As New BllOttGestionIngresoMater(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_INSERTAR)

            Return vlo_BllOttGestionIngresoMater.ModificarIngresoMaterial(pvo_EntOttAdjuntoGestionIngr, pvo_DsEnca, pvo_DsDetalle, pvn_IdUbicacion, pvn_IdViaCompra, pvn_Anno, pvn_NumeroGestion, pvn_Consecutivo, pvc_IdProveedor, pvc_Observaciones, pvc_UsuarioCrea, pvb_Finalizar)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    <WebMethod()> _
    Public Function OTT_GESTION_INGRESO_MATER_DevolverGestionIngresoMatAlmacen(pvc_Usuario As String, pvc_Clave As String, pvn_IdUbicacion As Integer, pvn_IdViaCompraContrato As Integer, pvn_NumeroGestion As Integer, pvn_Anno As Integer, pvn_Consecutivo As Integer, pvc_Observaciones As String, pvc_UsuarioCrea As String) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttGestionIngresoMater As New BllOttGestionIngresoMater(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_INSERTAR)

            Return vlo_BllOttGestionIngresoMater.DevolverGestionIngresoMatAlmacen(pvn_IdUbicacion, pvn_IdViaCompraContrato, pvn_NumeroGestion, pvn_Anno, pvn_Consecutivo, pvc_Observaciones, pvc_UsuarioCrea)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    <WebMethod()> _
    Public Function OTT_GESTION_INGRESO_MATER_GuardarDetalle(pvc_Usuario As String, pvc_Clave As String, pvo_DsDetalle As Data.DataSet) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttGestionIngresoMater As New BllOttGestionIngresoMater(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_INSERTAR)

            Return vlo_BllOttGestionIngresoMater.GuardarDetalle(pvo_DsDetalle)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    <WebMethod()> _
    Public Function OTT_GESTION_INGRESO_MATER_TramitarValidacionMontos(pvc_Usuario As String, pvc_Clave As String, pvn_IdUbicacion As Integer, pvn_IdViaCompraContrato As Integer, pvn_NumeroGestion As Integer, pvn_Anno As Integer, pvn_Consecutivo As Integer, pvc_Observaciones As String, pvc_UsuarioCrea As String, pvo_DsDetalle As DataSet, pvn_IdUbicacionAdministra As Integer) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttGestionIngresoMater As New BllOttGestionIngresoMater(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_INSERTAR)

            Return vlo_BllOttGestionIngresoMater.TramitarValidacionMontos(pvn_IdUbicacion, pvn_IdViaCompraContrato, pvn_NumeroGestion, pvn_Anno, pvn_Consecutivo, pvc_Observaciones, pvc_UsuarioCrea, pvo_DsDetalle, pvn_IdUbicacionAdministra)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    <WebMethod()> _
    Public Function OTT_GESTION_INGRESO_MATER_ExcluirMateriales(pvc_Usuario As String, pvc_Clave As String, pvn_IdUbicacion As Integer, pvn_IdViaCompraContrato As Integer, pvn_NumeroGestion As Integer, pvn_Anno As Integer, pvc_UsuarioCrea As String, pvo_DsDetalle As DataSet, pvn_IdUbicacionAdministra As Integer) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttGestionIngresoMater As New BllOttGestionIngresoMater(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_INSERTAR)

            Return vlo_BllOttGestionIngresoMater.ExcluirMateriales(pvn_IdUbicacion, pvn_IdViaCompraContrato, pvn_NumeroGestion, pvn_Anno, pvc_UsuarioCrea, pvo_DsDetalle, pvn_IdUbicacionAdministra)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function
#End Region

#Region "OTT_ADJUNTO_GESTION_INGR"
    ''' <summary>
    ''' Permite agregar un registro en la tabla OTT_ADJUNTO_GESTION_INGR
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>01/02/2017 04:28:02 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ADJUNTO_GESTION_INGR_InsertarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttAdjuntoGestionIngr) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttAdjuntoGestionIngr As New DalOttAdjuntoGestionIngr(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_INSERTAR)

            Return vlo_DalOttAdjuntoGestionIngr.InsertarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTT_ADJUNTO_GESTION_INGR
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>01/02/2017 04:28:02 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ADJUNTO_GESTION_INGR_BorrarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttAdjuntoGestionIngr) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttAdjuntoGestionIngr As New BllOttAdjuntoGestionIngr(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_BORRAR)

            Return vlo_BllOttAdjuntoGestionIngr.BorrarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTT_ADJUNTO_GESTION_INGR
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>01/02/2017 04:28:02 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ADJUNTO_GESTION_INGR_ModificarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttAdjuntoGestionIngr) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttAdjuntoGestionIngr As New DalOttAdjuntoGestionIngr(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_MODIFICAR)

            Return vlo_DalOttAdjuntoGestionIngr.ModificarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTT_ADJUNTO_GESTION_INGR según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>01/02/2017 04:28:02 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ADJUNTO_GESTION_INGR_ListarRegistros(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttAdjuntoGestionIngr As New DalOttAdjuntoGestionIngr(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttAdjuntoGestionIngr.ListarRegistros(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTT_ADJUNTO_GESTION_INGR según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>01/02/2017 04:28:02 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ADJUNTO_GESTION_INGR_ObtenerDatosPaginacionVOttAdjuntoGestionIngr(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttAdjuntoGestionIngr As New DalOttAdjuntoGestionIngr(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttAdjuntoGestionIngr.ObtenerDatosPaginacionVOttAdjuntoGestionIngr(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTT_ADJUNTO_GESTION_INGRLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>01/02/2017 04:28:02 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ADJUNTO_GESTION_INGR_ListarRegistrosLista(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttAdjuntoGestionIngr As New DalOttAdjuntoGestionIngr(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttAdjuntoGestionIngr.ListarRegistrosLista(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTT_ADJUNTO_GESTION_INGRLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>01/02/2017 04:28:02 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ADJUNTO_GESTION_INGR_ObtenerDatosPaginacionVOttAdjuntoGestionIngrlst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttAdjuntoGestionIngr As New DalOttAdjuntoGestionIngr(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttAdjuntoGestionIngr.ObtenerDatosPaginacionVOttAdjuntoGestionIngrlst(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene un registro de la tabla OTT_ADJUNTO_GESTION_INGR según el criterio indicado
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <returns>Entidad que representa la información obtenida al ejecutar la consulta</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>01/02/2017 04:28:02 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ADJUNTO_GESTION_INGR_ObtenerRegistro(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String) As EntOttAdjuntoGestionIngr
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttAdjuntoGestionIngr As New DalOttAdjuntoGestionIngr(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttAdjuntoGestionIngr.ObtenerRegistro(pvc_Condicion)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTTH_ADJUNTO_GESTION_INGR según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>01/02/2017 04:28:02 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ADJUNTO_GESTION_INGR_ListarVOtthAdjuntoGestionIngr(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttAdjuntoGestionIngr As New DalOttAdjuntoGestionIngr(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttAdjuntoGestionIngr.ListarVOtthAdjuntoGestionIngr(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTTH_ADJUNTO_GESTION_INGR según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>01/02/2017 04:28:02 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_ADJUNTO_GESTION_INGR_ObtenerDatosPaginacionVOtthAdjuntoGestionIngr(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttAdjuntoGestionIngr As New DalOttAdjuntoGestionIngr(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttAdjuntoGestionIngr.ObtenerDatosPaginacionVOtthAdjuntoGestionIngr(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

#End Region

#Region "OTT_DETALLE_GESTION_INGR"
    ''' <summary>
    ''' Permite agregar un registro en la tabla OTT_DETALLE_GESTION_INGR
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>01/02/2017 04:28:02 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_DETALLE_GESTION_INGR_InsertarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttDetalleGestionIngr) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttDetalleGestionIngr As New BllOttDetalleGestionIngr(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_INSERTAR)

            Return vlo_BllOttDetalleGestionIngr.InsertarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTT_DETALLE_GESTION_INGR
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>01/02/2017 04:28:02 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_DETALLE_GESTION_INGR_BorrarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttDetalleGestionIngr) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttDetalleGestionIngr As New DalOttDetalleGestionIngr(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_BORRAR)

            Return vlo_DalOttDetalleGestionIngr.BorrarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTT_DETALLE_GESTION_INGR
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>01/02/2017 04:28:02 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_DETALLE_GESTION_INGR_ModificarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttDetalleGestionIngr) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttDetalleGestionIngr As New DalOttDetalleGestionIngr(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_MODIFICAR)

            Return vlo_DalOttDetalleGestionIngr.ModificarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTT_DETALLE_GESTION_INGR según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>01/02/2017 04:28:02 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_DETALLE_GESTION_INGR_ListarRegistros(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttDetalleGestionIngr As New DalOttDetalleGestionIngr(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttDetalleGestionIngr.ListarRegistros(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTT_DETALLE_GESTION_INGR según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>01/02/2017 04:28:02 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_DETALLE_GESTION_INGR_ObtenerDatosPaginacionVOttDetalleGestionIngr(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttDetalleGestionIngr As New DalOttDetalleGestionIngr(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttDetalleGestionIngr.ObtenerDatosPaginacionVOttDetalleGestionIngr(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTT_DETALLE_GESTION_INGRLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>01/02/2017 04:28:02 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_DETALLE_GESTION_INGR_ListarRegistrosLista(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttDetalleGestionIngr As New DalOttDetalleGestionIngr(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttDetalleGestionIngr.ListarRegistrosLista(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTT_DETALLE_GESTION_INGRLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>01/02/2017 04:28:02 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_DETALLE_GESTION_INGR_ObtenerDatosPaginacionVOttDetalleGestionIngrlst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttDetalleGestionIngr As New DalOttDetalleGestionIngr(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttDetalleGestionIngr.ObtenerDatosPaginacionVOttDetalleGestionIngrlst(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene un registro de la tabla OTT_DETALLE_GESTION_INGR según el criterio indicado
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <returns>Entidad que representa la información obtenida al ejecutar la consulta</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>01/02/2017 04:28:02 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_DETALLE_GESTION_INGR_ObtenerRegistro(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String) As EntOttDetalleGestionIngr
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttDetalleGestionIngr As New DalOttDetalleGestionIngr(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttDetalleGestionIngr.ObtenerRegistro(pvc_Condicion)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTTH_DETALLE_GESTION_INGR según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>01/02/2017 04:28:02 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_DETALLE_GESTION_INGR_ListarVOtthDetalleGestionIngr(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttDetalleGestionIngr As New DalOttDetalleGestionIngr(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttDetalleGestionIngr.ListarVOtthDetalleGestionIngr(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTTH_DETALLE_GESTION_INGR según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>01/02/2017 04:28:02 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_DETALLE_GESTION_INGR_ObtenerDatosPaginacionVOtthDetalleGestionIngr(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttDetalleGestionIngr As New DalOttDetalleGestionIngr(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttDetalleGestionIngr.ObtenerDatosPaginacionVOtthDetalleGestionIngr(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OT_DET_GEST_ING_GROUP según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>21/02/2017 03:56:13 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_DETALLE_GESTION_INGR_ListarVOtDetGestIngGroup(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttDetalleGestionIngr As New DalOttDetalleGestionIngr(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttDetalleGestionIngr.ListarVOtDetGestIngGroup(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OT_DET_GEST_ING_GROUP según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>21/02/2017 03:56:13 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_DETALLE_GESTION_INGR_ObtenerDatosPaginacionVOtDetGestIngGroup(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttDetalleGestionIngr As New DalOttDetalleGestionIngr(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOttDetalleGestionIngr.ObtenerDatosPaginacionVOtDetGestIngGroup(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

#End Region

#Region "OTL_TRAZABIL_GESTION_INGR"
    ''' <summary>
    ''' Permite agregar un registro en la tabla OTL_TRAZABIL_GESTION_INGR
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>15/02/2017 10:29:27 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTL_TRAZABIL_GESTION_INGR_InsertarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtlTrazabilGestionIngr) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtlTrazabilGestionIngr As New DalOtlTrazabilGestionIngr(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_INSERTAR)

            Return vlo_DalOtlTrazabilGestionIngr.InsertarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTL_TRAZABIL_GESTION_INGR
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>15/02/2017 10:29:27 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTL_TRAZABIL_GESTION_INGR_BorrarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtlTrazabilGestionIngr) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtlTrazabilGestionIngr As New DalOtlTrazabilGestionIngr(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_BORRAR)

            Return vlo_DalOtlTrazabilGestionIngr.BorrarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTL_TRAZABIL_GESTION_INGR
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>15/02/2017 10:29:27 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTL_TRAZABIL_GESTION_INGR_ModificarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtlTrazabilGestionIngr) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtlTrazabilGestionIngr As New DalOtlTrazabilGestionIngr(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_MODIFICAR)

            Return vlo_DalOtlTrazabilGestionIngr.ModificarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTL_TRAZABIL_GESTION_INGR según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>15/02/2017 10:29:27 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTL_TRAZABIL_GESTION_INGR_ListarRegistros(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtlTrazabilGestionIngr As New DalOtlTrazabilGestionIngr(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtlTrazabilGestionIngr.ListarRegistros(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTL_TRAZABIL_GESTION_INGR según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>15/02/2017 10:29:27 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTL_TRAZABIL_GESTION_INGR_ObtenerDatosPaginacionVOtlTrazabilGestionIngr(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtlTrazabilGestionIngr As New DalOtlTrazabilGestionIngr(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtlTrazabilGestionIngr.ObtenerDatosPaginacionVOtlTrazabilGestionIngr(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTL_TRAZABIL_GESTION_INGRLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>15/02/2017 10:29:27 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTL_TRAZABIL_GESTION_INGR_ListarRegistrosLista(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtlTrazabilGestionIngr As New DalOtlTrazabilGestionIngr(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtlTrazabilGestionIngr.ListarRegistrosLista(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTL_TRAZABIL_GESTION_INGRLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>15/02/2017 10:29:27 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTL_TRAZABIL_GESTION_INGR_ObtenerDatosPaginacionVOtlTrazabilGestionIngrlst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtlTrazabilGestionIngr As New DalOtlTrazabilGestionIngr(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtlTrazabilGestionIngr.ObtenerDatosPaginacionVOtlTrazabilGestionIngrlst(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene un registro de la tabla OTL_TRAZABIL_GESTION_INGR según el criterio indicado
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <returns>Entidad que representa la información obtenida al ejecutar la consulta</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>15/02/2017 10:29:27 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTL_TRAZABIL_GESTION_INGR_ObtenerRegistro(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String) As EntOtlTrazabilGestionIngr
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtlTrazabilGestionIngr As New DalOtlTrazabilGestionIngr(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtlTrazabilGestionIngr.ObtenerRegistro(pvc_Condicion)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

#End Region

End Class
