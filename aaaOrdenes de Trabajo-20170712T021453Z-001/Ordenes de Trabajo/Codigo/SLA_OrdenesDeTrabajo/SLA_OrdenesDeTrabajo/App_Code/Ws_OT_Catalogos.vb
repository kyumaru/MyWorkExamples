Imports System.Web
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Data
Imports Utilerias.Genericos
Imports Microsoft.Practices.EnterpriseLibrary.ExceptionHandling
Imports OrdenesDeTrabajo.EntidadNegocio.Catalogos
Imports OrdenesDeTrabajo.AccesoDatos.Catalogos
Imports OrdenesDeTrabajo.LogicaNegocio.Catalogos
Imports Utilerias.OrdenesDeTrabajo
Imports ORDENES_TRABAJO.EntidadNegocio.Catalogos
Imports ORDENES_TRABAJO.LogicaNegocio.Catalogos
Imports ORDENES_TRABAJO.AccesoDatos.Catalogos

<System.Web.Script.Services.ScriptService()> _
<WebService(Namespace:="http://Ordenesdetrabajo.ucr.ac.cr/Sla_Ordenesdetrabajo/Ws_OT_Catalogos")> _
<WebServiceBinding(ConformsTo:=WsiProfiles.BasicProfile1_1)> _
<Global.Microsoft.VisualBasic.CompilerServices.DesignerGenerated()> _
Public Class Ws_OT_Catalogos
    Inherits System.Web.Services.WebService
#Region "OTC_ESTADO_ORDEN_TRABAJO"
    ''' <summary>
    ''' Permite agregar un registro en la tabla OTC_ESTADO_ORDEN_TRABAJO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>31/08/2015 08:20:01 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTC_ESTADO_ORDEN_TRABAJO_InsertarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtcEstadoOrdenTrabajo) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtcEstadoOrdenTrabajo As New BllOtcEstadoOrdenTrabajo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_INSERTAR)

            Return vlo_BllOtcEstadoOrdenTrabajo.InsertarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTC_ESTADO_ORDEN_TRABAJO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>31/08/2015 08:20:01 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTC_ESTADO_ORDEN_TRABAJO_BorrarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtcEstadoOrdenTrabajo) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtcEstadoOrdenTrabajo As New BllOtcEstadoOrdenTrabajo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_BORRAR)

            Return vlo_BllOtcEstadoOrdenTrabajo.BorrarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTC_ESTADO_ORDEN_TRABAJO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>31/08/2015 08:20:01 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTC_ESTADO_ORDEN_TRABAJO_ModificarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtcEstadoOrdenTrabajo) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtcEstadoOrdenTrabajo As New DalOtcEstadoOrdenTrabajo(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_MODIFICAR)

            Return vlo_DalOtcEstadoOrdenTrabajo.ModificarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTC_ESTADO_ORDEN_TRABAJO según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>31/08/2015 08:20:01 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTC_ESTADO_ORDEN_TRABAJO_ListarRegistros(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtcEstadoOrdenTrabajo As New DalOtcEstadoOrdenTrabajo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtcEstadoOrdenTrabajo.ListarRegistros(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTC_ESTADO_ORDEN_TRABAJO según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>31/08/2015 08:20:01 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTC_ESTADO_ORDEN_TRABAJO_ObtenerDatosPaginacionVOtcEstadoOrdenTrabajo(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtcEstadoOrdenTrabajo As New DalOtcEstadoOrdenTrabajo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtcEstadoOrdenTrabajo.ObtenerDatosPaginacionVOtcEstadoOrdenTrabajo(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTC_ESTADO_ORDEN_TRABAJOLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>31/08/2015 08:20:01 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTC_ESTADO_ORDEN_TRABAJO_ListarRegistrosLista(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtcEstadoOrdenTrabajo As New DalOtcEstadoOrdenTrabajo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtcEstadoOrdenTrabajo.ListarRegistrosLista(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTC_ESTADO_ORDEN_TRABAJOLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>31/08/2015 08:20:01 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTC_ESTADO_ORDEN_TRABAJO_ObtenerDatosPaginacionVOtcEstadoOrdenTrabajolst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtcEstadoOrdenTrabajo As New DalOtcEstadoOrdenTrabajo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtcEstadoOrdenTrabajo.ObtenerDatosPaginacionVOtcEstadoOrdenTrabajolst(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene un registro de la tabla OTC_ESTADO_ORDEN_TRABAJO según el criterio indicado
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <returns>Entidad que representa la información obtenida al ejecutar la consulta</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>31/08/2015 08:20:01 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTC_ESTADO_ORDEN_TRABAJO_ObtenerRegistro(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String) As EntOtcEstadoOrdenTrabajo
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtcEstadoOrdenTrabajo As New DalOtcEstadoOrdenTrabajo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtcEstadoOrdenTrabajo.ObtenerRegistro(pvc_Condicion)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

#End Region

#Region "OTC_TIPO_ORDEN_TRABAJO"
    ''' <summary>
    ''' Permite agregar un registro en la tabla OTC_TIPO_ORDEN_TRABAJO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>31/08/2015 08:20:01 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTC_TIPO_ORDEN_TRABAJO_InsertarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtcTipoOrdenTrabajo) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtcTipoOrdenTrabajo As New BllOtcTipoOrdenTrabajo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_INSERTAR)

            Return vlo_BllOtcTipoOrdenTrabajo.InsertarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTC_TIPO_ORDEN_TRABAJO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>31/08/2015 08:20:01 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTC_TIPO_ORDEN_TRABAJO_BorrarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtcTipoOrdenTrabajo) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtcTipoOrdenTrabajo As New BllOtcTipoOrdenTrabajo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_BORRAR)

            Return vlo_BllOtcTipoOrdenTrabajo.BorrarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTC_TIPO_ORDEN_TRABAJO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>31/08/2015 08:20:01 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTC_TIPO_ORDEN_TRABAJO_ModificarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtcTipoOrdenTrabajo) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtcTipoOrdenTrabajo As New BllOtcTipoOrdenTrabajo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_MODIFICAR)

            Return vlo_BllOtcTipoOrdenTrabajo.ModificarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTC_TIPO_ORDEN_TRABAJO según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>31/08/2015 08:20:01 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTC_TIPO_ORDEN_TRABAJO_ListarRegistros(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtcTipoOrdenTrabajo As New DalOtcTipoOrdenTrabajo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtcTipoOrdenTrabajo.ListarRegistros(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTC_TIPO_ORDEN_TRABAJO según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>31/08/2015 08:20:01 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTC_TIPO_ORDEN_TRABAJO_ObtenerDatosPaginacionVOtcTipoOrdenTrabajo(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtcTipoOrdenTrabajo As New DalOtcTipoOrdenTrabajo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtcTipoOrdenTrabajo.ObtenerDatosPaginacionVOtcTipoOrdenTrabajo(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTC_TIPO_ORDEN_TRABAJOLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>31/08/2015 08:20:01 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTC_TIPO_ORDEN_TRABAJO_ListarRegistrosLista(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtcTipoOrdenTrabajo As New DalOtcTipoOrdenTrabajo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtcTipoOrdenTrabajo.ListarRegistrosLista(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTC_TIPO_ORDEN_TRABAJOLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>31/08/2015 08:20:01 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTC_TIPO_ORDEN_TRABAJO_ObtenerDatosPaginacionVOtcTipoOrdenTrabajolst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtcTipoOrdenTrabajo As New DalOtcTipoOrdenTrabajo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtcTipoOrdenTrabajo.ObtenerDatosPaginacionVOtcTipoOrdenTrabajolst(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene un registro de la tabla OTC_TIPO_ORDEN_TRABAJO según el criterio indicado
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <returns>Entidad que representa la información obtenida al ejecutar la consulta</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>31/08/2015 08:20:01 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTC_TIPO_ORDEN_TRABAJO_ObtenerRegistro(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String) As EntOtcTipoOrdenTrabajo
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtcTipoOrdenTrabajo As New DalOtcTipoOrdenTrabajo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtcTipoOrdenTrabajo.ObtenerRegistro(pvc_Condicion)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

#End Region

#Region "OTM_ACTIVIDAD"
    ''' <summary>
    ''' Permite agregar un registro en la tabla OTM_ACTIVIDAD
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>31/08/2015 08:20:01 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_ACTIVIDAD_InsertarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtmActividad) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtmActividad As New BllOtmActividad(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_INSERTAR)

            Return vlo_BllOtmActividad.InsertarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTM_ACTIVIDAD
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>31/08/2015 08:20:01 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_ACTIVIDAD_BorrarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtmActividad) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtmActividad As New BllOtmActividad(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_BORRAR)

            Return vlo_BllOtmActividad.BorrarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTM_ACTIVIDAD
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>31/08/2015 08:20:01 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_ACTIVIDAD_ModificarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtmActividad) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtmActividad As New BllOtmActividad(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_MODIFICAR)

            Return vlo_BllOtmActividad.ModificarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTM_ACTIVIDAD según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>31/08/2015 08:20:01 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_ACTIVIDAD_ListarRegistros(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmActividad As New DalOtmActividad(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmActividad.ListarRegistros(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTM_ACTIVIDAD según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>31/08/2015 08:20:01 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_ACTIVIDAD_ObtenerDatosPaginacionVOtmActividad(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmActividad As New DalOtmActividad(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmActividad.ObtenerDatosPaginacionVOtmActividad(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTM_ACTIVIDADLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>31/08/2015 08:20:01 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_ACTIVIDAD_ListarRegistrosLista(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmActividad As New DalOtmActividad(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmActividad.ListarRegistrosLista(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTM_ACTIVIDADLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>31/08/2015 08:20:01 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_ACTIVIDAD_ObtenerDatosPaginacionVOtmActividadlst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmActividad As New DalOtmActividad(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmActividad.ObtenerDatosPaginacionVOtmActividadlst(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene un registro de la tabla OTM_ACTIVIDAD según el criterio indicado
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <returns>Entidad que representa la información obtenida al ejecutar la consulta</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>31/08/2015 08:20:01 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_ACTIVIDAD_ObtenerRegistro(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String) As EntOtmActividad
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmActividad As New DalOtmActividad(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmActividad.ObtenerRegistro(pvc_Condicion)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

#End Region

#Region "OTM_CATEGORIA_SERVICIO"
    ''' <summary>
    ''' Permite agregar un registro en la tabla OTM_CATEGORIA_SERVICIO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>31/08/2015 08:20:01 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_CATEGORIA_SERVICIO_InsertarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtmCategoriaServicio) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtmCategoriaServicio As New BllOtmCategoriaServicio(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_INSERTAR)

            Return vlo_BllOtmCategoriaServicio.InsertarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTM_CATEGORIA_SERVICIO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>31/08/2015 08:20:01 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_CATEGORIA_SERVICIO_BorrarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtmCategoriaServicio) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtmCategoriaServicio As New BllOtmCategoriaServicio(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_BORRAR)

            Return vlo_BllOtmCategoriaServicio.BorrarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTM_CATEGORIA_SERVICIO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>31/08/2015 08:20:01 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_CATEGORIA_SERVICIO_ModificarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtmCategoriaServicio) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtmCategoriaServicio As New BllOtmCategoriaServicio(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_MODIFICAR)

            Return vlo_BllOtmCategoriaServicio.ModificarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTM_CATEGORIA_SERVICIO según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>31/08/2015 08:20:01 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_CATEGORIA_SERVICIO_ListarRegistros(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmCategoriaServicio As New DalOtmCategoriaServicio(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmCategoriaServicio.ListarRegistros(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTM_CATEGORIA_SERVICIO según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>31/08/2015 08:20:01 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_CATEGORIA_SERVICIO_ObtenerDatosPaginacionVOtmCategoriaServicio(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmCategoriaServicio As New DalOtmCategoriaServicio(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmCategoriaServicio.ObtenerDatosPaginacionVOtmCategoriaServicio(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTM_CATEGORIA_SERVICIOLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>31/08/2015 08:20:01 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_CATEGORIA_SERVICIO_ListarRegistrosLista(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmCategoriaServicio As New DalOtmCategoriaServicio(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmCategoriaServicio.ListarRegistrosLista(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTM_CATEGORIA_SERVICIOLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>31/08/2015 08:20:01 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_CATEGORIA_SERVICIO_ObtenerDatosPaginacionVOtmCategoriaServiciolst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmCategoriaServicio As New DalOtmCategoriaServicio(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmCategoriaServicio.ObtenerDatosPaginacionVOtmCategoriaServiciolst(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene un registro de la tabla OTM_CATEGORIA_SERVICIO según el criterio indicado
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <returns>Entidad que representa la información obtenida al ejecutar la consulta</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>31/08/2015 08:20:01 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_CATEGORIA_SERVICIO_ObtenerRegistro(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String) As EntOtmCategoriaServicio
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmCategoriaServicio As New DalOtmCategoriaServicio(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmCategoriaServicio.ObtenerRegistro(pvc_Condicion)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OT_TALLER_CATEGORIAS_SUP según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>09/12/2015 05:48:21 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_CATEGORIA_SERVICIO_ListarVOtTallerCategoriasSup(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmCategoriaServicio As New DalOtmCategoriaServicio(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmCategoriaServicio.ListarVOtTallerCategoriasSup(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

#End Region

#Region "OTM_LUGAR_TRABAJO"
    ''' <summary>
    ''' Permite agregar un registro en la tabla OTM_LUGAR_TRABAJO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>02/09/2015 04:07:30 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_LUGAR_TRABAJO_InsertarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtmLugarTrabajo, pvo_DsUnidades As DataTable) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtmLugarTrabajo As New BllOtmLugarTrabajo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_INSERTAR)

            Return vlo_BllOtmLugarTrabajo.InsertarRegistro(pvo_Registro, pvo_DsUnidades)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTM_LUGAR_TRABAJO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>02/09/2015 04:07:30 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_LUGAR_TRABAJO_BorrarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtmLugarTrabajo) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtmLugarTrabajo As New BllOtmLugarTrabajo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_BORRAR)

            Return vlo_BllOtmLugarTrabajo.BorrarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTM_LUGAR_TRABAJO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>02/09/2015 04:07:30 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_LUGAR_TRABAJO_ModificarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtmLugarTrabajo, pvo_DsUnidades As DataTable) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtmLugarTrabajo As New BllOtmLugarTrabajo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_MODIFICAR)

            Return vlo_BllOtmLugarTrabajo.ModificarRegistro(pvo_Registro, pvo_DsUnidades)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTM_LUGAR_TRABAJO según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>02/09/2015 04:07:30 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_LUGAR_TRABAJO_ListarRegistros(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmLugarTrabajo As New DalOtmLugarTrabajo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmLugarTrabajo.ListarRegistros(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTM_LUGAR_TRABAJO según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>02/09/2015 04:07:30 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_LUGAR_TRABAJO_ObtenerDatosPaginacionVOtmLugarTrabajo(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmLugarTrabajo As New DalOtmLugarTrabajo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmLugarTrabajo.ObtenerDatosPaginacionVOtmLugarTrabajo(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTM_LUGAR_TRABAJOLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>02/09/2015 04:07:30 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_LUGAR_TRABAJO_ListarRegistrosLista(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmLugarTrabajo As New DalOtmLugarTrabajo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmLugarTrabajo.ListarRegistrosLista(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTM_LUGAR_TRABAJOLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>02/09/2015 04:07:30 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_LUGAR_TRABAJO_ObtenerDatosPaginacionVOtmLugarTrabajolst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmLugarTrabajo As New DalOtmLugarTrabajo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmLugarTrabajo.ObtenerDatosPaginacionVOtmLugarTrabajolst(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene un registro de la tabla OTM_LUGAR_TRABAJO según el criterio indicado
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <returns>Entidad que representa la información obtenida al ejecutar la consulta</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>02/09/2015 04:07:30 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_LUGAR_TRABAJO_ObtenerRegistro(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String) As EntOtmLugarTrabajo
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmLugarTrabajo As New DalOtmLugarTrabajo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmLugarTrabajo.ObtenerRegistro(pvc_Condicion)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

#End Region

#Region "OTM_SECTOR_TALLER"
    ''' <summary>
    ''' Permite agregar un registro en la tabla OTM_SECTOR_TALLER
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>31/08/2015 08:20:01 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_SECTOR_TALLER_InsertarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtmSectorTaller) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtmSectorTaller As New BllOtmSectorTaller(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_INSERTAR)

            Return vlo_BllOtmSectorTaller.InsertarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTM_SECTOR_TALLER
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>31/08/2015 08:20:01 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_SECTOR_TALLER_BorrarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtmSectorTaller) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtmSectorTaller As New BllOtmSectorTaller(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_BORRAR)

            Return vlo_BllOtmSectorTaller.BorrarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTM_SECTOR_TALLER
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>31/08/2015 08:20:01 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_SECTOR_TALLER_ModificarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtmSectorTaller) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtmSectorTaller As New BllOtmSectorTaller(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_MODIFICAR)

            Return vlo_BllOtmSectorTaller.ModificarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTM_SECTOR_TALLER según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>31/08/2015 08:20:01 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_SECTOR_TALLER_ListarRegistros(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmSectorTaller As New DalOtmSectorTaller(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmSectorTaller.ListarRegistros(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTM_SECTOR_TALLER según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>31/08/2015 08:20:01 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_SECTOR_TALLER_ObtenerDatosPaginacionVOtmSectorTaller(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmSectorTaller As New DalOtmSectorTaller(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmSectorTaller.ObtenerDatosPaginacionVOtmSectorTaller(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTM_SECTOR_TALLERLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>31/08/2015 08:20:01 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_SECTOR_TALLER_ListarRegistrosLista(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmSectorTaller As New DalOtmSectorTaller(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmSectorTaller.ListarRegistrosLista(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTM_SECTOR_TALLERLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>31/08/2015 08:20:01 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_SECTOR_TALLER_ObtenerDatosPaginacionVOtmSectorTallerlst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmSectorTaller As New DalOtmSectorTaller(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmSectorTaller.ObtenerDatosPaginacionVOtmSectorTallerlst(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene un registro de la tabla OTM_SECTOR_TALLER según el criterio indicado
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <returns>Entidad que representa la información obtenida al ejecutar la consulta</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>31/08/2015 08:20:01 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_SECTOR_TALLER_ObtenerRegistro(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String) As EntOtmSectorTaller
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmSectorTaller As New DalOtmSectorTaller(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmSectorTaller.ObtenerRegistro(pvc_Condicion)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene un registro de la tabla OTM_SECTOR_TALLER según el criterio indicado
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <returns>Entidad que representa la información obtenida al ejecutar la consulta</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>31/08/2015 08:20:01 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_SECTOR_TALLER_ObtenerRegistroLista(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String) As EntOtmSectorTaller
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmSectorTaller As New DalOtmSectorTaller(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmSectorTaller.ObtenerRegistroLista(pvc_Condicion)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function
#End Region

#Region "OTM_TIPO_LUGAR_UBICACION"
    ''' <summary>
    ''' Permite agregar un registro en la tabla OTM_TIPO_LUGAR_UBICACION
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>31/08/2015 08:20:01 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_TIPO_LUGAR_UBICACION_InsertarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtmTipoLugarUbicacion) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtmTipoLugarUbicacion As New BllOtmTipoLugarUbicacion(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_INSERTAR)

            Return vlo_BllOtmTipoLugarUbicacion.InsertarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTM_TIPO_LUGAR_UBICACION
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>31/08/2015 08:20:01 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_TIPO_LUGAR_UBICACION_BorrarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtmTipoLugarUbicacion) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtmTipoLugarUbicacion As New BllOtmTipoLugarUbicacion(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_BORRAR)

            Return vlo_BllOtmTipoLugarUbicacion.BorrarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTM_TIPO_LUGAR_UBICACION
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>31/08/2015 08:20:01 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_TIPO_LUGAR_UBICACION_ModificarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtmTipoLugarUbicacion) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtmTipoLugarUbicacion As New BllOtmTipoLugarUbicacion(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_MODIFICAR)

            Return vlo_BllOtmTipoLugarUbicacion.ModificarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTM_TIPO_LUGAR_UBICACION según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>31/08/2015 08:20:01 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_TIPO_LUGAR_UBICACION_ListarRegistros(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmTipoLugarUbicacion As New DalOtmTipoLugarUbicacion(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmTipoLugarUbicacion.ListarRegistros(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTM_TIPO_LUGAR_UBICACION según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>31/08/2015 08:20:01 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_TIPO_LUGAR_UBICACION_ObtenerDatosPaginacionVOtmTipoLugarUbicacion(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmTipoLugarUbicacion As New DalOtmTipoLugarUbicacion(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmTipoLugarUbicacion.ObtenerDatosPaginacionVOtmTipoLugarUbicacion(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTM_TIPO_LUGAR_UBICACIONLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>31/08/2015 08:20:01 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_TIPO_LUGAR_UBICACION_ListarRegistrosLista(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmTipoLugarUbicacion As New DalOtmTipoLugarUbicacion(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmTipoLugarUbicacion.ListarRegistrosLista(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTM_TIPO_LUGAR_UBICACIONLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>31/08/2015 08:20:01 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_TIPO_LUGAR_UBICACION_ObtenerDatosPaginacionVOtmTipoLugarUbicacionlst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmTipoLugarUbicacion As New DalOtmTipoLugarUbicacion(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmTipoLugarUbicacion.ObtenerDatosPaginacionVOtmTipoLugarUbicacionlst(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene un registro de la tabla OTM_TIPO_LUGAR_UBICACION según el criterio indicado
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <returns>Entidad que representa la información obtenida al ejecutar la consulta</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>31/08/2015 08:20:01 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_TIPO_LUGAR_UBICACION_ObtenerRegistro(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String) As EntOtmTipoLugarUbicacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmTipoLugarUbicacion As New DalOtmTipoLugarUbicacion(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmTipoLugarUbicacion.ObtenerRegistro(pvc_Condicion)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

#End Region

#Region "OTM_UBICACION"
    ''' <summary>
    ''' Permite agregar un registro en la tabla OTM_UBICACION
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>31/08/2015 08:20:01 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_UBICACION_InsertarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtmUbicacion) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtmUbicacion As New BllOtmUbicacion(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_INSERTAR)

            Return vlo_BllOtmUbicacion.InsertarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTM_UBICACION
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>31/08/2015 08:20:01 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_UBICACION_BorrarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtmUbicacion) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtmUbicacion As New BllOtmUbicacion(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_BORRAR)

            Return vlo_BllOtmUbicacion.BorrarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTM_UBICACION
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>31/08/2015 08:20:01 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_UBICACION_ModificarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtmUbicacion) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtmUbicacion As New BllOtmUbicacion(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_MODIFICAR)

            Return vlo_BllOtmUbicacion.ModificarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTM_UBICACION según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>31/08/2015 08:20:01 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_UBICACION_ListarRegistros(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmUbicacion As New DalOtmUbicacion(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmUbicacion.ListarRegistros(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTM_UBICACION según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>31/08/2015 08:20:01 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_UBICACION_ObtenerDatosPaginacionVOtmUbicacion(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmUbicacion As New DalOtmUbicacion(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmUbicacion.ObtenerDatosPaginacionVOtmUbicacion(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTM_UBICACIONLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>31/08/2015 08:20:01 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_UBICACION_ListarRegistrosLista(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmUbicacion As New DalOtmUbicacion(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmUbicacion.ListarRegistrosLista(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTM_UBICACIONLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>31/08/2015 08:20:01 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_UBICACION_ObtenerDatosPaginacionVOtmUbicacionlst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmUbicacion As New DalOtmUbicacion(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmUbicacion.ObtenerDatosPaginacionVOtmUbicacionlst(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene un registro de la tabla OTM_UBICACION según el criterio indicado
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <returns>Entidad que representa la información obtenida al ejecutar la consulta</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>31/08/2015 08:20:01 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_UBICACION_ObtenerRegistro(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String) As EntOtmUbicacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmUbicacion As New DalOtmUbicacion(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmUbicacion.ObtenerRegistro(pvc_Condicion)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

#End Region

#Region "OTL_TRAZABILIDAD_PROCESO"
    ''' <summary>
    ''' Permite agregar un registro en la tabla OTL_TRAZABILIDAD_PROCESO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>14/09/2015 11:16:46 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTL_TRAZABILIDAD_PROCESO_InsertarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtlTrazabilidadProceso) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtlTrazabilidadProceso As New BllOtlTrazabilidadProceso(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_INSERTAR)

            Return vlo_BllOtlTrazabilidadProceso.InsertarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTL_TRAZABILIDAD_PROCESO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>14/09/2015 11:16:46 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTL_TRAZABILIDAD_PROCESO_BorrarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtlTrazabilidadProceso) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtlTrazabilidadProceso As New DalOtlTrazabilidadProceso(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_BORRAR)

            Return vlo_DalOtlTrazabilidadProceso.BorrarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTL_TRAZABILIDAD_PROCESO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>14/09/2015 11:16:46 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTL_TRAZABILIDAD_PROCESO_ModificarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtlTrazabilidadProceso) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtlTrazabilidadProceso As New DalOtlTrazabilidadProceso(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_MODIFICAR)

            Return vlo_DalOtlTrazabilidadProceso.ModificarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTL_TRAZABILIDAD_PROCESO según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>14/09/2015 11:16:46 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTL_TRAZABILIDAD_PROCESO_ListarRegistros(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtlTrazabilidadProceso As New DalOtlTrazabilidadProceso(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtlTrazabilidadProceso.ListarRegistros(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTL_TRAZABILIDAD_PROCESO según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>14/09/2015 11:16:46 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTL_TRAZABILIDAD_PROCESO_ObtenerDatosPaginacionVOtlTrazabilidadProceso(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtlTrazabilidadProceso As New DalOtlTrazabilidadProceso(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtlTrazabilidadProceso.ObtenerDatosPaginacionVOtlTrazabilidadProceso(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTL_TRAZABILIDAD_PROCESOLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>14/09/2015 11:16:46 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTL_TRAZABILIDAD_PROCESO_ListarRegistrosLista(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtlTrazabilidadProceso As New DalOtlTrazabilidadProceso(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtlTrazabilidadProceso.ListarRegistrosLista(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTL_TRAZABILIDAD_PROCESOLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>14/09/2015 11:16:46 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTL_TRAZABILIDAD_PROCESO_ObtenerDatosPaginacionVOtlTrazabilidadProcesolst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtlTrazabilidadProceso As New DalOtlTrazabilidadProceso(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtlTrazabilidadProceso.ObtenerDatosPaginacionVOtlTrazabilidadProcesolst(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene un registro de la tabla OTL_TRAZABILIDAD_PROCESO según el criterio indicado
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <returns>Entidad que representa la información obtenida al ejecutar la consulta</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>14/09/2015 11:16:46 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTL_TRAZABILIDAD_PROCESO_ObtenerRegistro(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String) As EntOtlTrazabilidadProceso
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtlTrazabilidadProceso As New DalOtlTrazabilidadProceso(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtlTrazabilidadProceso.ObtenerRegistro(pvc_Condicion)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

#End Region

#Region "OTM_MOTIVO_RECHAZO"
    ''' <summary>
    ''' Permite agregar un registro en la tabla OTM_MOTIVO_RECHAZO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>22/09/2015 02:47:41 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_MOTIVO_RECHAZO_InsertarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtmMotivoRechazo) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtmMotivoRechazo As New BllOtmMotivoRechazo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_INSERTAR)

            Return vlo_BllOtmMotivoRechazo.InsertarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTM_MOTIVO_RECHAZO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>22/09/2015 02:47:41 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_MOTIVO_RECHAZO_BorrarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtmMotivoRechazo) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmMotivoRechazo As New DalOtmMotivoRechazo(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_BORRAR)

            Return vlo_DalOtmMotivoRechazo.BorrarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTM_MOTIVO_RECHAZO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>22/09/2015 02:47:41 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_MOTIVO_RECHAZO_ModificarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtmMotivoRechazo) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtmMotivoRechazo As New BllOtmMotivoRechazo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_MODIFICAR)

            Return vlo_BllOtmMotivoRechazo.ModificarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTM_MOTIVO_RECHAZO según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>22/09/2015 02:47:41 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_MOTIVO_RECHAZO_ListarRegistros(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmMotivoRechazo As New DalOtmMotivoRechazo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmMotivoRechazo.ListarRegistros(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTM_MOTIVO_RECHAZO según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>22/09/2015 02:47:41 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_MOTIVO_RECHAZO_ObtenerDatosPaginacionVOtmMotivoRechazo(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmMotivoRechazo As New DalOtmMotivoRechazo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmMotivoRechazo.ObtenerDatosPaginacionVOtmMotivoRechazo(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTM_MOTIVO_RECHAZOLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>22/09/2015 02:47:41 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_MOTIVO_RECHAZO_ListarRegistrosLista(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmMotivoRechazo As New DalOtmMotivoRechazo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmMotivoRechazo.ListarRegistrosLista(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTM_MOTIVO_RECHAZOLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>22/09/2015 02:47:41 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_MOTIVO_RECHAZO_ObtenerDatosPaginacionVOtmMotivoRechazolst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmMotivoRechazo As New DalOtmMotivoRechazo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmMotivoRechazo.ObtenerDatosPaginacionVOtmMotivoRechazolst(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene un registro de la tabla OTM_MOTIVO_RECHAZO según el criterio indicado
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <returns>Entidad que representa la información obtenida al ejecutar la consulta</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>22/09/2015 02:47:41 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_MOTIVO_RECHAZO_ObtenerRegistro(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String) As EntOtmMotivoRechazo
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmMotivoRechazo As New DalOtmMotivoRechazo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmMotivoRechazo.ObtenerRegistro(pvc_Condicion)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

#End Region

#Region "OTM_AUTORIZADO_DIRECTOR"
    ''' <summary>
    ''' Permite agregar un registro en la tabla OTM_AUTORIZADO_DIRECTOR
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>24/09/2015 10:06:27 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_AUTORIZADO_DIRECTOR_InsertarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtmAutorizadoDirector) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtmAutorizadoDirector As New BllOtmAutorizadoDirector(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_INSERTAR)

            Return vlo_BllOtmAutorizadoDirector.InsertarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTM_AUTORIZADO_DIRECTOR
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>24/09/2015 10:06:27 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_AUTORIZADO_DIRECTOR_BorrarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtmAutorizadoDirector) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmAutorizadoDirector As New DalOtmAutorizadoDirector(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_BORRAR)

            Return vlo_DalOtmAutorizadoDirector.BorrarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTM_AUTORIZADO_DIRECTOR
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>24/09/2015 10:06:27 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_AUTORIZADO_DIRECTOR_ModificarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtmAutorizadoDirector) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtmAutorizadoDirector As New BllOtmAutorizadoDirector(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_MODIFICAR)

            Return vlo_BllOtmAutorizadoDirector.ModificarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTM_AUTORIZADO_DIRECTOR según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>24/09/2015 10:06:27 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_AUTORIZADO_DIRECTOR_ListarRegistros(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmAutorizadoDirector As New DalOtmAutorizadoDirector(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmAutorizadoDirector.ListarRegistros(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTM_AUTORIZADO_DIRECTORLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>24/09/2015 10:06:27 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_AUTORIZADO_DIRECTOR_ListarRegistrosLista(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmAutorizadoDirector As New DalOtmAutorizadoDirector(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmAutorizadoDirector.ListarRegistrosLista(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTM_AUTORIZADO_DIRECTORLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>24/09/2015 10:06:27 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_AUTORIZADO_DIRECTOR_ListarRegistrosListaPersonalizado(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtmAutorizadoDirector As New BllOtmAutorizadoDirector(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_BllOtmAutorizadoDirector.ListarRegistrosListaPersonalizado(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene un registro de la tabla OTM_AUTORIZADO_DIRECTOR según el criterio indicado
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <returns>Entidad que representa la información obtenida al ejecutar la consulta</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>24/09/2015 10:06:27 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_AUTORIZADO_DIRECTOR_ObtenerRegistro(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String) As EntOtmAutorizadoDirector
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmAutorizadoDirector As New DalOtmAutorizadoDirector(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmAutorizadoDirector.ObtenerRegistro(pvc_Condicion)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTM_AUTORIZADO_DIRECTOR según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>24/09/2015 10:21:16 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_AUTORIZADO_DIRECTOR_ListarVOtmAutorizadoDirector(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmAutorizadoDirector As New DalOtmAutorizadoDirector(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmAutorizadoDirector.ListarVOtmAutorizadoDirector(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTM_AUTORIZADO_DIRECTOR según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>24/09/2015 10:21:16 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_AUTORIZADO_DIRECTOR_ObtenerDatosPaginacionVOtmAutorizadoDirector(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmAutorizadoDirector As New DalOtmAutorizadoDirector(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmAutorizadoDirector.ObtenerDatosPaginacionVOtmAutorizadoDirector(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTM_AUTORIZADO_DIRECTORLST según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>24/09/2015 10:21:16 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_AUTORIZADO_DIRECTOR_ListarVOtmAutorizadoDirectorlst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmAutorizadoDirector As New DalOtmAutorizadoDirector(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmAutorizadoDirector.ListarVOtmAutorizadoDirectorlst(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTM_AUTORIZADO_DIRECTORLST según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>24/09/2015 10:21:16 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_AUTORIZADO_DIRECTOR_ObtenerDatosPaginacionVOtmAutorizadoDirectorlst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmAutorizadoDirector As New DalOtmAutorizadoDirector(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmAutorizadoDirector.ObtenerDatosPaginacionVOtmAutorizadoDirectorlst(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

#End Region

#Region "OTM_AUTORIZADO_UBICACION"
    ''' <summary>
    ''' Permite agregar un registro en la tabla OTM_AUTORIZADO_UBICACION
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>29/09/2015 09:44:09 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_AUTORIZADO_UBICACION_InsertarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtmAutorizadoUbicacion) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtmAutorizadoUbicacion As New BllOtmAutorizadoUbicacion(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_INSERTAR)

            Return vlo_BllOtmAutorizadoUbicacion.InsertarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTM_AUTORIZADO_UBICACION
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>29/09/2015 09:44:09 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_AUTORIZADO_UBICACION_BorrarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtmAutorizadoUbicacion) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmAutorizadoUbicacion As New DalOtmAutorizadoUbicacion(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_BORRAR)

            Return vlo_DalOtmAutorizadoUbicacion.BorrarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTM_AUTORIZADO_UBICACION
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>29/09/2015 09:44:09 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_AUTORIZADO_UBICACION_ModificarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtmAutorizadoUbicacion) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtmAutorizadoUbicacion As New BllOtmAutorizadoUbicacion(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_MODIFICAR)

            Return vlo_BllOtmAutorizadoUbicacion.ModificarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTM_AUTORIZADO_UBICACION según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>29/09/2015 09:44:09 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_AUTORIZADO_UBICACION_ListarRegistros(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmAutorizadoUbicacion As New DalOtmAutorizadoUbicacion(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmAutorizadoUbicacion.ListarRegistros(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTM_AUTORIZADO_UBICACION según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>29/09/2015 09:44:09 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_AUTORIZADO_UBICACION_ObtenerDatosPaginacionVOtmAutorizadoUbicacion(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmAutorizadoUbicacion As New DalOtmAutorizadoUbicacion(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmAutorizadoUbicacion.ObtenerDatosPaginacionVOtmAutorizadoUbicacion(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTM_AUTORIZADO_UBICACIONLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>29/09/2015 09:44:09 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_AUTORIZADO_UBICACION_ListarRegistrosLista(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmAutorizadoUbicacion As New DalOtmAutorizadoUbicacion(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmAutorizadoUbicacion.ListarRegistrosLista(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTM_AUTORIZADO_UBICACIONLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>29/09/2015 09:44:09 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_AUTORIZADO_UBICACION_ObtenerDatosPaginacionVOtmAutorizadoUbicacionlst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmAutorizadoUbicacion As New DalOtmAutorizadoUbicacion(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmAutorizadoUbicacion.ObtenerDatosPaginacionVOtmAutorizadoUbicacionlst(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene un registro de la tabla OTM_AUTORIZADO_UBICACION según el criterio indicado
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <returns>Entidad que representa la información obtenida al ejecutar la consulta</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>29/09/2015 09:44:09 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_AUTORIZADO_UBICACION_ObtenerRegistro(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String) As EntOtmAutorizadoUbicacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmAutorizadoUbicacion As New DalOtmAutorizadoUbicacion(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmAutorizadoUbicacion.ObtenerRegistro(pvc_Condicion)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

#End Region

#Region "OTM_UNIDAD_UBICACION"
    ''' <summary>
    ''' Permite agregar un registro en la tabla OTM_UNIDAD_UBICACION
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>05/10/2015 10:18:16 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_UNIDAD_UBICACION_InsertarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtmUnidadUbicacion) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtmUnidadUbicacion As New BllOtmUnidadUbicacion(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_INSERTAR)

            Return vlo_BllOtmUnidadUbicacion.InsertarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTM_UNIDAD_UBICACION
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>05/10/2015 10:18:16 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_UNIDAD_UBICACION_BorrarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtmUnidadUbicacion) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmUnidadUbicacion As New DalOtmUnidadUbicacion(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_BORRAR)

            Return vlo_DalOtmUnidadUbicacion.BorrarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTM_UNIDAD_UBICACION
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>05/10/2015 10:18:16 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_UNIDAD_UBICACION_ModificarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtmUnidadUbicacion) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmUnidadUbicacion As New DalOtmUnidadUbicacion(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_MODIFICAR)

            Return vlo_DalOtmUnidadUbicacion.ModificarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTM_UNIDAD_UBICACION según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>05/10/2015 10:18:16 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_UNIDAD_UBICACION_ListarRegistros(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmUnidadUbicacion As New DalOtmUnidadUbicacion(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmUnidadUbicacion.ListarRegistros(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTM_UNIDAD_UBICACIONLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>05/10/2015 10:18:16 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_UNIDAD_UBICACION_ListarRegistrosLista(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmUnidadUbicacion As New DalOtmUnidadUbicacion(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmUnidadUbicacion.ListarRegistrosLista(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTM_UNIDAD_UBICACIONLst según el criterio y orden indicados, ademas carga la descripcion de las unidades de SIRH
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <remarks></remarks>
    ''' <author>Carlos Gómez Ondoy</author>
    ''' <creationDate>05/10/2015</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_UNIDAD_UBICACION_ListarRegistrosListaPersonalizado(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtmUnidadUbicacion As New BllOtmUnidadUbicacion(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_BllOtmUnidadUbicacion.ListarRegistrosListaPersonalizado(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene un registro de la tabla OTM_UNIDAD_UBICACION según el criterio indicado
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <returns>Entidad que representa la información obtenida al ejecutar la consulta</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>05/10/2015 10:18:16 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_UNIDAD_UBICACION_ObtenerRegistro(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String) As EntOtmUnidadUbicacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmUnidadUbicacion As New DalOtmUnidadUbicacion(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmUnidadUbicacion.ObtenerRegistro(pvc_Condicion)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTM_UNIDAD_UBICACION según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>05/10/2015 10:18:16 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_UNIDAD_UBICACION_ListarVOtmUnidadUbicacion(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmUnidadUbicacion As New DalOtmUnidadUbicacion(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmUnidadUbicacion.ListarVOtmUnidadUbicacion(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTM_UNIDAD_UBICACION según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>05/10/2015 10:18:16 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_UNIDAD_UBICACION_ObtenerDatosPaginacionVOtmUnidadUbicacion(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmUnidadUbicacion As New DalOtmUnidadUbicacion(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmUnidadUbicacion.ObtenerDatosPaginacionVOtmUnidadUbicacion(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTM_UNIDAD_UBICACIONLST según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>05/10/2015 10:18:16 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_UNIDAD_UBICACION_ListarVOtmUnidadUbicacionlst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmUnidadUbicacion As New DalOtmUnidadUbicacion(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmUnidadUbicacion.ListarVOtmUnidadUbicacionlst(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTM_UNIDAD_UBICACIONLST según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>05/10/2015 10:18:16 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_UNIDAD_UBICACION_ObtenerDatosPaginacionVOtmUnidadUbicacionlst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmUnidadUbicacion As New DalOtmUnidadUbicacion(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmUnidadUbicacion.ObtenerDatosPaginacionVOtmUnidadUbicacionlst(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

#End Region

#Region "OTP_PARAMETRO_GLOBAL"
    ''' <summary>
    ''' Permite agregar un registro en la tabla OTP_PARAMETRO_GLOBAL
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>09/10/2015 10:02:27 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTP_PARAMETRO_GLOBAL_InsertarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtpParametroGlobal) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtpParametroGlobal As New BllOtpParametroGlobal(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_INSERTAR)

            Return vlo_BllOtpParametroGlobal.InsertarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTP_PARAMETRO_GLOBAL
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>09/10/2015 10:02:27 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTP_PARAMETRO_GLOBAL_BorrarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtpParametroGlobal) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtpParametroGlobal As New DalOtpParametroGlobal(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_BORRAR)

            Return vlo_DalOtpParametroGlobal.BorrarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTP_PARAMETRO_GLOBAL
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>09/10/2015 10:02:27 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTP_PARAMETRO_GLOBAL_ModificarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtpParametroGlobal) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtpParametroGlobal As New DalOtpParametroGlobal(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_MODIFICAR)

            Return vlo_DalOtpParametroGlobal.ModificarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTP_PARAMETRO_GLOBAL según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>09/10/2015 10:02:27 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTP_PARAMETRO_GLOBAL_ListarRegistros(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtpParametroGlobal As New DalOtpParametroGlobal(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtpParametroGlobal.ListarRegistros(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTP_PARAMETRO_GLOBALLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>09/10/2015 10:02:27 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTP_PARAMETRO_GLOBAL_ListarRegistrosLista(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtpParametroGlobal As New DalOtpParametroGlobal(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtpParametroGlobal.ListarRegistrosLista(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene un registro de la tabla OTP_PARAMETRO_GLOBAL según el criterio indicado
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <returns>Entidad que representa la información obtenida al ejecutar la consulta</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>09/10/2015 10:02:27 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTP_PARAMETRO_GLOBAL_ObtenerRegistro(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String) As EntOtpParametroGlobal
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtpParametroGlobal As New DalOtpParametroGlobal(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtpParametroGlobal.ObtenerRegistro(pvc_Condicion)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTP_PARAMETRO_GLOBAL según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>09/10/2015 10:02:27 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTP_PARAMETRO_GLOBAL_ListarVOtpParametroGlobal(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtpParametroGlobal As New DalOtpParametroGlobal(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtpParametroGlobal.ListarVOtpParametroGlobal(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTP_PARAMETRO_GLOBAL según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>09/10/2015 10:02:27 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTP_PARAMETRO_GLOBAL_ObtenerDatosPaginacionVOtpParametroGlobal(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtpParametroGlobal As New DalOtpParametroGlobal(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtpParametroGlobal.ObtenerDatosPaginacionVOtpParametroGlobal(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTP_PARAMETRO_GLOBALLST según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>09/10/2015 10:02:27 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTP_PARAMETRO_GLOBAL_ListarVOtpParametroGloballst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtpParametroGlobal As New DalOtpParametroGlobal(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtpParametroGlobal.ListarVOtpParametroGloballst(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTP_PARAMETRO_GLOBALLST según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>09/10/2015 10:02:27 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTP_PARAMETRO_GLOBAL_ObtenerDatosPaginacionVOtpParametroGloballst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtpParametroGlobal As New DalOtpParametroGlobal(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtpParametroGlobal.ObtenerDatosPaginacionVOtpParametroGloballst(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

#End Region

#Region "OTP_PARAMETRO_UBICACION"
    ''' <summary>
    ''' Permite agregar un registro en la tabla OTP_PARAMETRO_UBICACION
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>09/10/2015 10:02:27 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTP_PARAMETRO_UBICACION_InsertarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtpParametroUbicacion) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtpParametroUbicacion As New BllOtpParametroUbicacion(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_INSERTAR)

            Return vlo_BllOtpParametroUbicacion.InsertarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTP_PARAMETRO_UBICACION
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>09/10/2015 10:02:27 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTP_PARAMETRO_UBICACION_BorrarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtpParametroUbicacion) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtpParametroUbicacion As New DalOtpParametroUbicacion(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_BORRAR)

            Return vlo_DalOtpParametroUbicacion.BorrarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTP_PARAMETRO_UBICACION
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>09/10/2015 10:02:27 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTP_PARAMETRO_UBICACION_ModificarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtpParametroUbicacion) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtpParametroUbicacion As New BllOtpParametroUbicacion(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_MODIFICAR)

            Return vlo_BllOtpParametroUbicacion.ModificarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTP_PARAMETRO_UBICACION según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>09/10/2015 10:02:27 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTP_PARAMETRO_UBICACION_ListarRegistros(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtpParametroUbicacion As New DalOtpParametroUbicacion(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtpParametroUbicacion.ListarRegistros(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTP_PARAMETRO_UBICACIONLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>09/10/2015 10:02:27 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTP_PARAMETRO_UBICACION_ListarRegistrosLista(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtpParametroUbicacion As New DalOtpParametroUbicacion(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtpParametroUbicacion.ListarRegistrosLista(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene un registro de la tabla OTP_PARAMETRO_UBICACION según el criterio indicado
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <returns>Entidad que representa la información obtenida al ejecutar la consulta</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>09/10/2015 10:02:27 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTP_PARAMETRO_UBICACION_ObtenerRegistro(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String) As EntOtpParametroUbicacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtpParametroUbicacion As New DalOtpParametroUbicacion(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtpParametroUbicacion.ObtenerRegistro(pvc_Condicion)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTP_PARAMETRO_UBICACION según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>09/10/2015 10:02:27 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTP_PARAMETRO_UBICACION_ListarVOtpParametroUbicacion(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtpParametroUbicacion As New DalOtpParametroUbicacion(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtpParametroUbicacion.ListarVOtpParametroUbicacion(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTP_PARAMETRO_UBICACION según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>09/10/2015 10:02:27 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTP_PARAMETRO_UBICACION_ObtenerDatosPaginacionVOtpParametroUbicacion(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtpParametroUbicacion As New DalOtpParametroUbicacion(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtpParametroUbicacion.ObtenerDatosPaginacionVOtpParametroUbicacion(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTP_PARAMETRO_UBICACIONLST según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>09/10/2015 10:02:27 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTP_PARAMETRO_UBICACION_ListarVOtpParametroUbicacionlst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtpParametroUbicacion As New DalOtpParametroUbicacion(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtpParametroUbicacion.ListarVOtpParametroUbicacionlst(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTP_PARAMETRO_UBICACIONLST según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>09/10/2015 10:02:27 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTP_PARAMETRO_UBICACION_ObtenerDatosPaginacionVOtpParametroUbicacionlst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtpParametroUbicacion As New DalOtpParametroUbicacion(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtpParametroUbicacion.ObtenerDatosPaginacionVOtpParametroUbicacionlst(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

#End Region

#Region "OTM_ESPACIO"
    ''' <summary>
    ''' Permite agregar un registro en la tabla OTM_ESPACIO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>09/11/2015 04:34:23 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_ESPACIO_InsertarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtmEspacio) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtmEspacio As New BllOtmEspacio(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_INSERTAR)

            Return vlo_BllOtmEspacio.InsertarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTM_ESPACIO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>09/11/2015 04:34:23 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_ESPACIO_BorrarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtmEspacio) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtmEspacio As New BllOtmEspacio(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_BORRAR)

            Return vlo_BllOtmEspacio.BorrarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTM_ESPACIO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>09/11/2015 04:34:23 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_ESPACIO_ModificarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtmEspacio) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtmEspacio As New BllOtmEspacio(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_MODIFICAR)

            Return vlo_BllOtmEspacio.ModificarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTM_ESPACIO según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>09/11/2015 04:34:23 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_ESPACIO_ListarRegistros(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmEspacio As New DalOtmEspacio(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmEspacio.ListarRegistros(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTM_ESPACIO según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>09/11/2015 04:34:23 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_ESPACIO_ObtenerDatosPaginacionVOtmEspacio(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmEspacio As New DalOtmEspacio(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmEspacio.ObtenerDatosPaginacionVOtmEspacio(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTM_ESPACIOLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>09/11/2015 04:34:23 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_ESPACIO_ListarRegistrosLista(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmEspacio As New DalOtmEspacio(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmEspacio.ListarRegistrosLista(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTM_ESPACIOLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>09/11/2015 04:34:23 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_ESPACIO_ObtenerDatosPaginacionVOtmEspaciolst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmEspacio As New DalOtmEspacio(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmEspacio.ObtenerDatosPaginacionVOtmEspaciolst(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene un registro de la tabla OTM_ESPACIO según el criterio indicado
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <returns>Entidad que representa la información obtenida al ejecutar la consulta</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>09/11/2015 04:34:23 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_ESPACIO_ObtenerRegistro(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String) As EntOtmEspacio
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmEspacio As New DalOtmEspacio(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmEspacio.ObtenerRegistro(pvc_Condicion)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene el ultimo orden, esto para insertar un espacio al final de la lista
    ''' </summary>
    ''' <param name="pvc_Usuario"></param>
    ''' <param name="pvc_Clave"></param>
    ''' <returns>El vaalor del último orden presente en la tabla espacios</returns>
    ''' <remarks></remarks>
    ''' <author>Cesar Bermudez</author>
    ''' <creationDate>11/11/2015 08:34:25 a.m.</creationDate>
    ''' <changeLog></changeLog>
    ''' 
    <WebMethod()> _
    Public Function OTM_ESPACIO_ObtenerFnOtObtenerUltimoOrden(pvc_Usuario As String, pvc_Clave As String) As Double
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmEspacio As New DalOtmEspacio(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmEspacio.ObtenerFnOtObtenerUltimoOrden()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite ejecutar el procedimiento PR_OT_BAJARESPACIO para cambiar el ordenamiento de los registros
    ''' </summary>
    ''' <param name="pvc_Usuario"></param>
    ''' <param name="pvc_Clave"></param>
    ''' <remarks></remarks>
    ''' <author>Cesar Bermudez Garcia</author>
    ''' <creationDate>12/11/2015 10:48:28 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Sub OTM_ESPACIO_EjecutarPrOtBajarespacio(pvc_Usuario As String, pvc_Clave As String, pvn_PvnIdespacio As Double)
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmEspacio As New DalOtmEspacio(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_PROCESAR)

            vlo_DalOtmEspacio.EjecutarPrOtBajarespacio(pvn_PvnIdespacio)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Sub

    ''' <summary>
    ''' Permite ejecutar el procedimiento PR_OT_BAJARESPACIO para cambiar el ordenamiento de los registros
    ''' </summary>
    ''' <param name="pvc_Usuario"></param>
    ''' <param name="pvc_Clave"></param>
    ''' <param name="pvn_PvnIdespacio"></param>
    ''' <remarks></remarks>
    ''' <author>Cesar Bermudez Garcia</author>
    ''' <creationDate>12/11/2015 10:48:28 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Sub OTM_ESPACIO_EjecutarPrOtSubirespacio(pvc_Usuario As String, pvc_Clave As String, pvn_PvnIdespacio As Double)
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmEspacio As New DalOtmEspacio(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_PROCESAR)

            vlo_DalOtmEspacio.EjecutarPrOtSubirespacio(pvn_PvnIdespacio)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Sub

#End Region

#Region "OTM_SUBCOMPONENTE"
    ''' <summary>
    ''' Permite agregar un registro en la tabla OTM_SUBCOMPONENTE
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>13/11/2015 01:36:20 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_SUBCOMPONENTE_InsertarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtmSubcomponente) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtmSubcomponente As New BllOtmSubcomponente(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_INSERTAR)

            Return vlo_BllOtmSubcomponente.InsertarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTM_SUBCOMPONENTE
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>13/11/2015 01:36:20 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_SUBCOMPONENTE_BorrarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtmSubcomponente) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtmSubcomponente As New BllOtmSubcomponente(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_BORRAR)

            Return vlo_BllOtmSubcomponente.BorrarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTM_SUBCOMPONENTE
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>13/11/2015 01:36:20 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_SUBCOMPONENTE_ModificarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtmSubcomponente) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtmSubcomponente As New BllOtmSubcomponente(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_MODIFICAR)

            Return vlo_BllOtmSubcomponente.ModificarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTM_SUBCOMPONENTE según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>13/11/2015 01:36:20 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_SUBCOMPONENTE_ListarRegistros(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmSubcomponente As New DalOtmSubcomponente(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmSubcomponente.ListarRegistros(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTM_SUBCOMPONENTELst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>13/11/2015 01:36:20 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_SUBCOMPONENTE_ListarRegistrosLista(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmSubcomponente As New DalOtmSubcomponente(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmSubcomponente.ListarRegistrosLista(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene un registro de la tabla OTM_SUBCOMPONENTE según el criterio indicado
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <returns>Entidad que representa la información obtenida al ejecutar la consulta</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>13/11/2015 01:36:20 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_SUBCOMPONENTE_ObtenerRegistro(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String) As EntOtmSubcomponente
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmSubcomponente As New DalOtmSubcomponente(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmSubcomponente.ObtenerRegistro(pvc_Condicion)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTM_SUBCOMPONENTE según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>13/11/2015 01:36:20 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_SUBCOMPONENTE_ListarVOtmSubcomponente(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmSubcomponente As New DalOtmSubcomponente(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmSubcomponente.ListarVOtmSubcomponente(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTM_SUBCOMPONENTE según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>13/11/2015 01:36:20 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_SUBCOMPONENTE_ObtenerDatosPaginacionVOtmSubcomponente(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmSubcomponente As New DalOtmSubcomponente(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmSubcomponente.ObtenerDatosPaginacionVOtmSubcomponente(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTM_SUBCOMPONENTELST según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>13/11/2015 01:36:20 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_SUBCOMPONENTE_ListarVOtmSubcomponentelst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmSubcomponente As New DalOtmSubcomponente(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmSubcomponente.ListarVOtmSubcomponentelst(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTM_SUBCOMPONENTELST según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>13/11/2015 01:36:20 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_SUBCOMPONENTE_ObtenerDatosPaginacionVOtmSubcomponentelst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmSubcomponente As New DalOtmSubcomponente(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmSubcomponente.ObtenerDatosPaginacionVOtmSubcomponentelst(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite ejecutar el procedimiento PRD_OTM_SUBCOMPONENTE para eliminar 
    ''' </summary>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>13/11/2015 01:36:20 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Sub OTM_SUBCOMPONENTE_EjecutarPrdOtmSubcomponente(pvc_Usuario As String, pvc_Clave As String, pvn_PvnIdespacio As Integer, pvn_PvnIdsubcomponente As Integer)
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmSubcomponente As New DalOtmSubcomponente(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_PROCESAR)

            vlo_DalOtmSubcomponente.EjecutarPrdOtmSubcomponente(pvn_PvnIdespacio, pvn_PvnIdsubcomponente)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Sub

    ''' <summary>
    ''' Permite ejecutar el procedimiento PRI_OTM_SUBCOMPONENTE para insertar un subcomponente
    ''' </summary>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>17/11/2015 09:16:29 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Sub OTM_SUBCOMPONENTE_EjecutarPriOtmSubcomponente(pvc_Usuario As String, pvc_Clave As String, pvn_PvnIdespacio As Integer, pvn_PrnIdsubcomponente As Integer, pvc_PvcDescripcion As String, pvn_PvnOrden As Integer, pvc_PvcEstado As String, pvc_PvcUsuario As String)
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmSubcomponente As New DalOtmSubcomponente(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_PROCESAR)

            vlo_DalOtmSubcomponente.EjecutarPriOtmSubcomponente(pvn_PvnIdespacio, pvn_PrnIdsubcomponente, pvc_PvcDescripcion, pvn_PvnOrden, pvc_PvcEstado, pvc_PvcUsuario)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Sub

    ''' <summary>
    ''' Permite ejecutar el procedimiento PRU_OTM_SUBCOMPONENTE para actualizar un subcomponente
    ''' </summary>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>13/11/2015 01:36:20 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Sub OTM_SUBCOMPONENTE_EjecutarPruOtmSubcomponente(pvc_Usuario As String, pvc_Clave As String, pvn_PvnIdespacio As Integer, pvn_PvnIdsubcomponente As Integer, pvc_PvcDescripcion As String, pvn_PvnOrden As Integer, pvc_PvcEstado As String, pvc_PvcUsuario As String, pvd_PvdTimestamp As DateTime)
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmSubcomponente As New DalOtmSubcomponente(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_PROCESAR)

            vlo_DalOtmSubcomponente.EjecutarPruOtmSubcomponente(pvn_PvnIdespacio, pvn_PvnIdsubcomponente, pvc_PvcDescripcion, pvn_PvnOrden, pvc_PvcEstado, pvc_PvcUsuario, pvd_PvdTimestamp)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Sub

    ''' <summary>
    ''' Permite ejecutar el procedimiento PR_OT_BAJARSUBCOMPONENTE para efectuar la operación de bajar el orden del registro
    ''' </summary>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>17/11/2015 03:50:12 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Sub OTM_SUBCOMPONENTE_EjecutarPrOtBajarsubcomponente(pvc_Usuario As String, pvc_Clave As String, pvn_PvnIdespacio As Double, pvn_PvnIdsubcomponente As Double)
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmSubcomponente As New DalOtmSubcomponente(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_PROCESAR)

            vlo_DalOtmSubcomponente.EjecutarPrOtBajarsubcomponente(pvn_PvnIdespacio, pvn_PvnIdsubcomponente)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Sub

    ''' <summary>
    ''' Permite ejecutar el procedimiento PR_OT_SUBIRSUBCOMPONENTE para intercambiar el orden del registro
    ''' </summary>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>17/11/2015 03:50:12 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Sub OTM_SUBCOMPONENTE_EjecutarPrOtSubirsubcomponente(pvc_Usuario As String, pvc_Clave As String, pvn_PvnIdespacio As Double, pvn_PvnIdsubcomponente As Double)
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmSubcomponente As New DalOtmSubcomponente(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_PROCESAR)

            vlo_DalOtmSubcomponente.EjecutarPrOtSubirsubcomponente(pvn_PvnIdespacio, pvn_PvnIdsubcomponente)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Sub

    ''' <summary>
    ''' Controla la columna orden para agregar valores válidos
    ''' </summary>
    ''' <param name="pvc_Usuario"></param>
    ''' <param name="pvc_Clave"></param>
    ''' <param name="pvn_PvnIdespacio"></param>
    ''' <returns>numero de orden a agregar o uno si es un nuevo espacio y no hay subcomponentes asignados</returns>
    ''' <remarks></remarks>
    ''' <author>César Bermúdez García</author>
    ''' <creationDate>17/11/2015</creationDate>
    <WebMethod()> _
    Public Function OTM_SUBCOMPONENTE_ObtenerFnOtUltimoordensubcomponente(pvc_Usuario As String, pvc_Clave As String, pvn_PvnIdespacio As Integer) As Double
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmSubcomponente As New DalOtmSubcomponente(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmSubcomponente.ObtenerFnOtUltimoordensubcomponente(pvn_PvnIdespacio)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

#End Region

#Region "OTM_REQUERIMIENTO"
    ''' <summary>
    ''' Permite agregar un registro en la tabla OTM_REQUERIMIENTO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>19/11/2015 10:30:05 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_REQUERIMIENTO_InsertarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtmRequerimiento) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmRequerimiento As New DalOtmRequerimiento(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_INSERTAR)

            Return vlo_DalOtmRequerimiento.InsertarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTM_REQUERIMIENTO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>19/11/2015 10:30:05 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_REQUERIMIENTO_BorrarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtmRequerimiento) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtmRequerimiento As New BllOtmRequerimiento(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_BORRAR)

            Return vlo_BllOtmRequerimiento.BorrarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTM_REQUERIMIENTO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>19/11/2015 10:30:05 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_REQUERIMIENTO_ModificarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtmRequerimiento) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmRequerimiento As New DalOtmRequerimiento(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_MODIFICAR)

            Return vlo_DalOtmRequerimiento.ModificarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTM_REQUERIMIENTO según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>19/11/2015 10:30:05 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_REQUERIMIENTO_ListarRegistros(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmRequerimiento As New DalOtmRequerimiento(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmRequerimiento.ListarRegistros(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTM_REQUERIMIENTO según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>19/11/2015 10:30:05 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_REQUERIMIENTO_ObtenerDatosPaginacionVOtmRequerimiento(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmRequerimiento As New DalOtmRequerimiento(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmRequerimiento.ObtenerDatosPaginacionVOtmRequerimiento(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTM_REQUERIMIENTOLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>19/11/2015 10:30:05 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_REQUERIMIENTO_ListarRegistrosLista(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmRequerimiento As New DalOtmRequerimiento(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmRequerimiento.ListarRegistrosLista(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTM_REQUERIMIENTOLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>19/11/2015 10:30:05 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_REQUERIMIENTO_ObtenerDatosPaginacionVOtmRequerimientolst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmRequerimiento As New DalOtmRequerimiento(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmRequerimiento.ObtenerDatosPaginacionVOtmRequerimientolst(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene un registro de la tabla OTM_REQUERIMIENTO según el criterio indicado
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <returns>Entidad que representa la información obtenida al ejecutar la consulta</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>19/11/2015 10:30:05 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_REQUERIMIENTO_ObtenerRegistro(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String) As EntOtmRequerimiento
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmRequerimiento As New DalOtmRequerimiento(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmRequerimiento.ObtenerRegistro(pvc_Condicion)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function


    ''' <summary>
    ''' Ejecuta la función FC_OT_ULTIMO_ORDEN_REQ
    ''' </summary>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>25/11/2015 09:37:36 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_REQUERIMIENTO_ObtenerFnOtUltimoordenrequerimiento(pvc_Usuario As String, pvc_Clave As String, pvn_PvnNivel As Double) As Double
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmRequerimiento As New DalOtmRequerimiento(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmRequerimiento.ObtenerFnOtUltimoordenrequerimiento(pvn_PvnNivel)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite ejecutar el procedimiento PR_OT_BAJARREQUERIMIENTO
    ''' </summary>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>25/11/2015 09:16:32 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Sub OTM_REQUERIMIENTO_EjecutarPrOtBajarrequerimiento(pvc_Usuario As String, pvc_Clave As String, pvn_PvnIdrequerimiento As Double)
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmRequerimiento As New DalOtmRequerimiento(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_PROCESAR)

            vlo_DalOtmRequerimiento.EjecutarPrOtBajarrequerimiento(pvn_PvnIdrequerimiento)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Sub

    ''' <summary>
    ''' Permite ejecutar el procedimiento PR_OT_SUBIRREQUERIMIENTO
    ''' </summary>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>25/11/2015 09:16:32 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Sub OTM_REQUERIMIENTO_EjecutarPrOtSubirrequerimiento(pvc_Usuario As String, pvc_Clave As String, pvn_PvnIdrequerimiento As Double)
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmRequerimiento As New DalOtmRequerimiento(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_PROCESAR)

            vlo_DalOtmRequerimiento.EjecutarPrOtSubirrequerimiento(pvn_PvnIdrequerimiento)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Sub

    ''' <summary>
    ''' Permite ejecutar el procedimiento PR_OT_INHABILITAR_REQUERIMIENTO
    ''' </summary>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>12/01/2016 08:30:35 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Sub OTM_REQUERIMIENTO_EjecutarPrOtInhabilitarrequerimiento(pvc_Usuario As String, pvc_Clave As String, pvn_PvnIdrequerimiento As Double)
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmRequerimiento As New DalOtmRequerimiento(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_PROCESAR)

            vlo_DalOtmRequerimiento.EjecutarPrOtInhabilitarrequerimiento(pvn_PvnIdrequerimiento)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Sub


#End Region

#Region "OTM_UNIDAD_TIEMPO"
    ''' <summary>
    ''' Permite agregar un registro en la tabla OTM_UNIDAD_TIEMPO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>15/01/2016 02:29:16 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_UNIDAD_TIEMPO_InsertarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtmUnidadTiempo) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtmUnidadTiempo As New BllOtmUnidadTiempo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_INSERTAR)

            Return vlo_BllOtmUnidadTiempo.InsertarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTM_UNIDAD_TIEMPO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>15/01/2016 02:29:16 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_UNIDAD_TIEMPO_BorrarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtmUnidadTiempo) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtmUnidadTiempo As New BllOtmUnidadTiempo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_BORRAR)

            Return vlo_BllOtmUnidadTiempo.BorrarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTM_UNIDAD_TIEMPO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>15/01/2016 02:29:16 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_UNIDAD_TIEMPO_ModificarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtmUnidadTiempo) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtmUnidadTiempo As New BllOtmUnidadTiempo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_MODIFICAR)

            Return vlo_BllOtmUnidadTiempo.ModificarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTM_UNIDAD_TIEMPO según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>15/01/2016 02:29:16 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_UNIDAD_TIEMPO_ListarRegistros(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmUnidadTiempo As New DalOtmUnidadTiempo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmUnidadTiempo.ListarRegistros(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTM_UNIDAD_TIEMPO según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>15/01/2016 02:29:16 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_UNIDAD_TIEMPO_ObtenerDatosPaginacionVOtmUnidadTiempo(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmUnidadTiempo As New DalOtmUnidadTiempo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmUnidadTiempo.ObtenerDatosPaginacionVOtmUnidadTiempo(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTM_UNIDAD_TIEMPOLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>15/01/2016 02:29:16 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_UNIDAD_TIEMPO_ListarRegistrosLista(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmUnidadTiempo As New DalOtmUnidadTiempo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmUnidadTiempo.ListarRegistrosLista(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTM_UNIDAD_TIEMPOLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>15/01/2016 02:29:16 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_UNIDAD_TIEMPO_ObtenerDatosPaginacionVOtmUnidadTiempolst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmUnidadTiempo As New DalOtmUnidadTiempo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmUnidadTiempo.ObtenerDatosPaginacionVOtmUnidadTiempolst(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene un registro de la tabla OTM_UNIDAD_TIEMPO según el criterio indicado
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <returns>Entidad que representa la información obtenida al ejecutar la consulta</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>15/01/2016 02:29:16 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_UNIDAD_TIEMPO_ObtenerRegistro(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String) As EntOtmUnidadTiempo
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmUnidadTiempo As New DalOtmUnidadTiempo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmUnidadTiempo.ObtenerRegistro(pvc_Condicion)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

#End Region

#Region "OTF_PERIODO_CIERRE"
    ''' <summary>
    ''' Permite agregar un registro en la tabla OTF_PERIODO_CIERRE
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>18/01/2016 10:53:17 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_PERIODO_CIERRE_InsertarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtfPeriodoCierre) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtfPeriodoCierre As New BllOtfPeriodoCierre(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_INSERTAR)

            Return vlo_BllOtfPeriodoCierre.InsertarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTF_PERIODO_CIERRE
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>18/01/2016 10:53:17 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_PERIODO_CIERRE_BorrarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtfPeriodoCierre) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtfPeriodoCierre As New DalOtfPeriodoCierre(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_BORRAR)

            Return vlo_DalOtfPeriodoCierre.BorrarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTF_PERIODO_CIERRE
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>18/01/2016 10:53:17 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_PERIODO_CIERRE_ModificarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtfPeriodoCierre) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtfPeriodoCierre As New BllOtfPeriodoCierre(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_MODIFICAR)

            Return vlo_BllOtfPeriodoCierre.ModificarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTF_PERIODO_CIERRE según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>18/01/2016 10:53:17 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_PERIODO_CIERRE_ListarRegistros(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtfPeriodoCierre As New DalOtfPeriodoCierre(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtfPeriodoCierre.ListarRegistros(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTF_PERIODO_CIERRE según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>18/01/2016 10:53:17 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_PERIODO_CIERRE_ObtenerDatosPaginacionVOtfPeriodoCierre(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtfPeriodoCierre As New DalOtfPeriodoCierre(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtfPeriodoCierre.ObtenerDatosPaginacionVOtfPeriodoCierre(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTF_PERIODO_CIERRELst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>18/01/2016 10:53:17 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_PERIODO_CIERRE_ListarRegistrosLista(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtfPeriodoCierre As New DalOtfPeriodoCierre(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtfPeriodoCierre.ListarRegistrosLista(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTF_PERIODO_CIERRELst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>18/01/2016 10:53:17 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_PERIODO_CIERRE_ObtenerDatosPaginacionVOtfPeriodoCierrelst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtfPeriodoCierre As New DalOtfPeriodoCierre(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtfPeriodoCierre.ObtenerDatosPaginacionVOtfPeriodoCierrelst(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene un registro de la tabla OTF_PERIODO_CIERRE según el criterio indicado
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <returns>Entidad que representa la información obtenida al ejecutar la consulta</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>18/01/2016 10:53:17 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_PERIODO_CIERRE_ObtenerRegistro(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String) As EntOtfPeriodoCierre
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtfPeriodoCierre As New DalOtfPeriodoCierre(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtfPeriodoCierre.ObtenerRegistro(pvc_Condicion)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

#End Region

#Region "OTM_AREA_PROFESIONAL"
    ''' <summary>
    ''' Permite agregar un registro en la tabla OTM_AREA_PROFESIONAL
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>20/01/2016 11:22:41 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_AREA_PROFESIONAL_InsertarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtmAreaProfesional) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmAreaProfesional As New DalOtmAreaProfesional(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_INSERTAR)

            Return vlo_DalOtmAreaProfesional.InsertarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTM_AREA_PROFESIONAL
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>20/01/2016 11:22:41 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_AREA_PROFESIONAL_BorrarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtmAreaProfesional) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtmAreaProfesional As New BllOtmAreaProfesional(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_BORRAR)

            Return vlo_BllOtmAreaProfesional.BorrarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTM_AREA_PROFESIONAL
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>20/01/2016 11:22:41 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_AREA_PROFESIONAL_ModificarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtmAreaProfesional) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmAreaProfesional As New DalOtmAreaProfesional(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_MODIFICAR)

            Return vlo_DalOtmAreaProfesional.ModificarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTM_AREA_PROFESIONAL según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>20/01/2016 11:22:41 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_AREA_PROFESIONAL_ListarRegistros(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmAreaProfesional As New DalOtmAreaProfesional(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmAreaProfesional.ListarRegistros(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTM_AREA_PROFESIONALLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>20/01/2016 11:22:41 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_AREA_PROFESIONAL_ListarRegistrosLista(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmAreaProfesional As New DalOtmAreaProfesional(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmAreaProfesional.ListarRegistrosLista(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene un registro de la tabla OTM_AREA_PROFESIONAL según el criterio indicado
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <returns>Entidad que representa la información obtenida al ejecutar la consulta</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>20/01/2016 11:22:41 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_AREA_PROFESIONAL_ObtenerRegistro(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String) As EntOtmAreaProfesional
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmAreaProfesional As New DalOtmAreaProfesional(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmAreaProfesional.ObtenerRegistro(pvc_Condicion)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTM_AREA_PROFESIONAL según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>20/01/2016 11:36:49 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_AREA_PROFESIONAL_ListarVOtmAreaProfesional(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmAreaProfesional As New DalOtmAreaProfesional(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmAreaProfesional.ListarVOtmAreaProfesional(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTM_AREA_PROFESIONAL según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>20/01/2016 11:36:49 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_AREA_PROFESIONAL_ObtenerDatosPaginacionVOtmAreaProfesional(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmAreaProfesional As New DalOtmAreaProfesional(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmAreaProfesional.ObtenerDatosPaginacionVOtmAreaProfesional(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTM_AREA_PROFESIONALLST según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>20/01/2016 11:36:49 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_AREA_PROFESIONAL_ListarVOtmAreaProfesionallst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmAreaProfesional As New DalOtmAreaProfesional(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmAreaProfesional.ListarVOtmAreaProfesionallst(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTM_AREA_PROFESIONALLST según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>20/01/2016 11:36:49 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_AREA_PROFESIONAL_ObtenerDatosPaginacionVOtmAreaProfesionallst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmAreaProfesional As New DalOtmAreaProfesional(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmAreaProfesional.ObtenerDatosPaginacionVOtmAreaProfesionallst(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

#End Region

#Region "OTF_OPERARIO_AREA"
    ''' <summary>
    ''' Permite agregar un registro en la tabla OTF_OPERARIO_AREA
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>27/01/2016 12:12:35 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_OPERARIO_AREA_InsertarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtfOperarioArea) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtfOperarioArea As New BllOtfOperarioArea(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_INSERTAR)

            Return vlo_BllOtfOperarioArea.InsertarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTF_OPERARIO_AREA
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>27/01/2016 12:12:35 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_OPERARIO_AREA_BorrarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtfOperarioArea) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtfOperarioArea As New BllOtfOperarioArea(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_BORRAR)

            Return vlo_BllOtfOperarioArea.BorrarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTF_OPERARIO_AREA
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>27/01/2016 12:12:35 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_OPERARIO_AREA_ModificarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtfOperarioArea) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtfOperarioArea As New BllOtfOperarioArea(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_MODIFICAR)

            Return vlo_BllOtfOperarioArea.ModificarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTF_OPERARIO_AREA según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>27/01/2016 12:12:35 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_OPERARIO_AREA_ListarRegistros(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtfOperarioArea As New DalOtfOperarioArea(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtfOperarioArea.ListarRegistros(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTF_OPERARIO_AREA según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>27/01/2016 12:12:35 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_OPERARIO_AREA_ObtenerDatosPaginacionVOtfOperarioArea(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtfOperarioArea As New DalOtfOperarioArea(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtfOperarioArea.ObtenerDatosPaginacionVOtfOperarioArea(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTF_OPERARIO_AREALst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>27/01/2016 12:12:35 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_OPERARIO_AREA_ListarRegistrosLista(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtfOperarioArea As New BllOtfOperarioArea(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_BllOtfOperarioArea.ListarRegistrosLista(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTF_OPERARIO_AREALst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>27/01/2016 12:12:35 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_OPERARIO_AREA_ObtenerDatosPaginacionVOtfOperarioArealst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtfOperarioArea As New DalOtfOperarioArea(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtfOperarioArea.ObtenerDatosPaginacionVOtfOperarioArealst(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene un registro de la tabla OTF_OPERARIO_AREA según el criterio indicado
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <returns>Entidad que representa la información obtenida al ejecutar la consulta</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>27/01/2016 12:12:35 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_OPERARIO_AREA_ObtenerRegistro(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String) As EntOtfOperarioArea
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtfOperarioArea As New DalOtfOperarioArea(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtfOperarioArea.ObtenerRegistro(pvc_Condicion)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

#End Region

#Region "OTM_TIPO_DOCUMENTO"
    ''' <summary>
    ''' Permite agregar un registro en la tabla OTM_TIPO_DOCUMENTO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>28/01/2016 10:09:27 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_TIPO_DOCUMENTO_InsertarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtmTipoDocumento) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtmTipoDocumento As New BllOtmTipoDocumento(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_INSERTAR)

            Return vlo_BllOtmTipoDocumento.InsertarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTM_TIPO_DOCUMENTO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>28/01/2016 10:09:27 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_TIPO_DOCUMENTO_BorrarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtmTipoDocumento) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmTipoDocumento As New DalOtmTipoDocumento(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_BORRAR)

            Return vlo_DalOtmTipoDocumento.BorrarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTM_TIPO_DOCUMENTO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>28/01/2016 10:09:27 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_TIPO_DOCUMENTO_ModificarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtmTipoDocumento) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtmTipoDocumento As New BllOtmTipoDocumento(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_MODIFICAR)

            Return vlo_BllOtmTipoDocumento.ModificarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTM_TIPO_DOCUMENTO según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>28/01/2016 10:09:27 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_TIPO_DOCUMENTO_ListarRegistros(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmTipoDocumento As New DalOtmTipoDocumento(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmTipoDocumento.ListarRegistros(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTM_TIPO_DOCUMENTO según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>28/01/2016 10:09:27 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_TIPO_DOCUMENTO_ObtenerDatosPaginacionVOtmTipoDocumento(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmTipoDocumento As New DalOtmTipoDocumento(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmTipoDocumento.ObtenerDatosPaginacionVOtmTipoDocumento(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTM_TIPO_DOCUMENTOLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>28/01/2016 10:09:27 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_TIPO_DOCUMENTO_ListarRegistrosLista(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmTipoDocumento As New DalOtmTipoDocumento(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmTipoDocumento.ListarRegistrosLista(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTM_TIPO_DOCUMENTOLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>28/01/2016 10:09:27 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_TIPO_DOCUMENTO_ObtenerDatosPaginacionVOtmTipoDocumentolst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmTipoDocumento As New DalOtmTipoDocumento(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmTipoDocumento.ObtenerDatosPaginacionVOtmTipoDocumentolst(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene un registro de la tabla OTM_TIPO_DOCUMENTO según el criterio indicado
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <returns>Entidad que representa la información obtenida al ejecutar la consulta</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>28/01/2016 10:09:27 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_TIPO_DOCUMENTO_ObtenerRegistro(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String) As EntOtmTipoDocumento
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmTipoDocumento As New DalOtmTipoDocumento(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmTipoDocumento.ObtenerRegistro(pvc_Condicion)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

#End Region

#Region "OTM_ETAPA_ORDEN_TRABAJO"
    ''' <summary>
    ''' Permite agregar un registro en la tabla OTM_ETAPA_ORDEN_TRABAJO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>29/01/2016 04:20:42 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_ETAPA_ORDEN_TRABAJO_InsertarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtmEtapaOrdenTrabajo) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmEtapaOrdenTrabajo As New DalOtmEtapaOrdenTrabajo(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_INSERTAR)

            Return vlo_DalOtmEtapaOrdenTrabajo.InsertarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTM_ETAPA_ORDEN_TRABAJO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>29/01/2016 04:20:42 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_ETAPA_ORDEN_TRABAJO_BorrarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtmEtapaOrdenTrabajo) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtmEtapaOrdenTrabajo As New BllOtmEtapaOrdenTrabajo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_BORRAR)

            Return vlo_BllOtmEtapaOrdenTrabajo.BorrarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTM_ETAPA_ORDEN_TRABAJO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>29/01/2016 04:20:42 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_ETAPA_ORDEN_TRABAJO_ModificarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtmEtapaOrdenTrabajo) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmEtapaOrdenTrabajo As New DalOtmEtapaOrdenTrabajo(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_MODIFICAR)

            Return vlo_DalOtmEtapaOrdenTrabajo.ModificarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTM_ETAPA_ORDEN_TRABAJO según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>29/01/2016 04:20:42 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_ETAPA_ORDEN_TRABAJO_ListarRegistros(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmEtapaOrdenTrabajo As New DalOtmEtapaOrdenTrabajo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmEtapaOrdenTrabajo.ListarRegistros(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTM_ETAPA_ORDEN_TRABAJOLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>29/01/2016 04:20:42 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_ETAPA_ORDEN_TRABAJO_ListarRegistrosLista(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmEtapaOrdenTrabajo As New DalOtmEtapaOrdenTrabajo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmEtapaOrdenTrabajo.ListarRegistrosLista(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene un registro de la tabla OTM_ETAPA_ORDEN_TRABAJO según el criterio indicado
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <returns>Entidad que representa la información obtenida al ejecutar la consulta</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>29/01/2016 04:20:42 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_ETAPA_ORDEN_TRABAJO_ObtenerRegistro(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String) As EntOtmEtapaOrdenTrabajo
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmEtapaOrdenTrabajo As New DalOtmEtapaOrdenTrabajo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmEtapaOrdenTrabajo.ObtenerRegistro(pvc_Condicion)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTM_ETAPA_ORDEN_TRABAJO según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>29/01/2016 04:20:42 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_ETAPA_ORDEN_TRABAJO_ListarVOtmEtapaOrdenTrabajo(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmEtapaOrdenTrabajo As New DalOtmEtapaOrdenTrabajo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmEtapaOrdenTrabajo.ListarVOtmEtapaOrdenTrabajo(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTM_ETAPA_ORDEN_TRABAJO según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>29/01/2016 04:20:42 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_ETAPA_ORDEN_TRABAJO_ObtenerDatosPaginacionVOtmEtapaOrdenTrabajo(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmEtapaOrdenTrabajo As New DalOtmEtapaOrdenTrabajo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmEtapaOrdenTrabajo.ObtenerDatosPaginacionVOtmEtapaOrdenTrabajo(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTM_ETAPA_ORDEN_TRABAJOLST según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>29/01/2016 04:20:42 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_ETAPA_ORDEN_TRABAJO_ListarVOtmEtapaOrdenTrabajolst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmEtapaOrdenTrabajo As New DalOtmEtapaOrdenTrabajo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmEtapaOrdenTrabajo.ListarVOtmEtapaOrdenTrabajolst(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTM_ETAPA_ORDEN_TRABAJOLST según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>29/01/2016 04:20:42 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_ETAPA_ORDEN_TRABAJO_ObtenerDatosPaginacionVOtmEtapaOrdenTrabajolst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmEtapaOrdenTrabajo As New DalOtmEtapaOrdenTrabajo(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmEtapaOrdenTrabajo.ObtenerDatosPaginacionVOtmEtapaOrdenTrabajolst(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

#End Region

#Region "OTM_UNIDAD_ENCARGADA"
    ''' <summary>
    ''' Permite agregar un registro en la tabla OTM_UNIDAD_ENCARGADA
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>14/03/2016 12:22:09 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_UNIDAD_ENCARGADA_InsertarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtmUnidadEncargada) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtmUnidadEncargada As New BllOtmUnidadEncargada(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_INSERTAR)

            Return vlo_BllOtmUnidadEncargada.InsertarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTM_UNIDAD_ENCARGADA
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>14/03/2016 12:22:09 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_UNIDAD_ENCARGADA_BorrarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtmUnidadEncargada) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmUnidadEncargada As New DalOtmUnidadEncargada(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_BORRAR)

            Return vlo_DalOtmUnidadEncargada.BorrarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTM_UNIDAD_ENCARGADA
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>14/03/2016 12:22:09 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_UNIDAD_ENCARGADA_ModificarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtmUnidadEncargada) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmUnidadEncargada As New DalOtmUnidadEncargada(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_MODIFICAR)

            Return vlo_DalOtmUnidadEncargada.ModificarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTM_UNIDAD_ENCARGADA según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>14/03/2016 12:22:09 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_UNIDAD_ENCARGADA_ListarRegistros(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmUnidadEncargada As New DalOtmUnidadEncargada(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtmUnidadEncargada.ListarRegistros(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTM_UNIDAD_ENCARGADA según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>14/03/2016 12:22:09 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_UNIDAD_ENCARGADA_ObtenerDatosPaginacionVOtmUnidadEncargada(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmUnidadEncargada As New DalOtmUnidadEncargada(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtmUnidadEncargada.ObtenerDatosPaginacionVOtmUnidadEncargada(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTM_UNIDAD_ENCARGADALst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>14/03/2016 12:22:09 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_UNIDAD_ENCARGADA_ListarRegistrosLista(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmUnidadEncargada As New DalOtmUnidadEncargada(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtmUnidadEncargada.ListarRegistrosLista(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTM_UNIDAD_ENCARGADALst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>14/03/2016 12:22:09 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_UNIDAD_ENCARGADA_ObtenerDatosPaginacionVOtmUnidadEncargadalst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmUnidadEncargada As New DalOtmUnidadEncargada(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtmUnidadEncargada.ObtenerDatosPaginacionVOtmUnidadEncargadalst(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene un registro de la tabla OTM_UNIDAD_ENCARGADA según el criterio indicado
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <returns>Entidad que representa la información obtenida al ejecutar la consulta</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>14/03/2016 12:22:09 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_UNIDAD_ENCARGADA_ObtenerRegistro(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String) As EntOtmUnidadEncargada
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmUnidadEncargada As New DalOtmUnidadEncargada(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtmUnidadEncargada.ObtenerRegistro(pvc_Condicion)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

#End Region

#Region "OTM_RUBRO_DECISION_INICIA"
    ''' <summary>
    ''' Permite agregar un registro en la tabla OTM_RUBRO_DECISION_INICIA
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>16/03/2016 10:01:16 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_RUBRO_DECISION_INICIA_InsertarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtmRubroDecisionInicia) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmRubroDecisionInicia As New DalOtmRubroDecisionInicia(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_INSERTAR)

            Return vlo_DalOtmRubroDecisionInicia.InsertarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTM_RUBRO_DECISION_INICIA
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>16/03/2016 10:01:16 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_RUBRO_DECISION_INICIA_BorrarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtmRubroDecisionInicia) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtmRubroDecisionInicia As New BllOtmRubroDecisionInicia(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_BORRAR)

            Return vlo_BllOtmRubroDecisionInicia.BorrarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTM_RUBRO_DECISION_INICIA
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>16/03/2016 10:01:16 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_RUBRO_DECISION_INICIA_ModificarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtmRubroDecisionInicia) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmRubroDecisionInicia As New DalOtmRubroDecisionInicia(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_MODIFICAR)

            Return vlo_DalOtmRubroDecisionInicia.ModificarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTM_RUBRO_DECISION_INICIA según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>16/03/2016 10:01:16 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_RUBRO_DECISION_INICIA_ListarRegistros(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmRubroDecisionInicia As New DalOtmRubroDecisionInicia(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmRubroDecisionInicia.ListarRegistros(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTM_RUBRO_DECISION_INICIA según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>16/03/2016 10:01:16 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_RUBRO_DECISION_INICIA_ObtenerDatosPaginacionVOtmRubroDecisionInicia(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmRubroDecisionInicia As New DalOtmRubroDecisionInicia(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmRubroDecisionInicia.ObtenerDatosPaginacionVOtmRubroDecisionInicia(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTM_RUBRO_DECISION_INICIALst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>16/03/2016 10:01:16 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_RUBRO_DECISION_INICIA_ListarRegistrosLista(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmRubroDecisionInicia As New DalOtmRubroDecisionInicia(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmRubroDecisionInicia.ListarRegistrosLista(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTM_RUBRO_DECISION_INICIALst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>16/03/2016 10:01:16 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_RUBRO_DECISION_INICIA_ObtenerDatosPaginacionVOtmRubroDecisionInicialst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmRubroDecisionInicia As New DalOtmRubroDecisionInicia(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmRubroDecisionInicia.ObtenerDatosPaginacionVOtmRubroDecisionInicialst(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene un registro de la tabla OTM_RUBRO_DECISION_INICIA según el criterio indicado
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <returns>Entidad que representa la información obtenida al ejecutar la consulta</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>16/03/2016 10:01:16 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_RUBRO_DECISION_INICIA_ObtenerRegistro(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String) As EntOtmRubroDecisionInicia
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmRubroDecisionInicia As New DalOtmRubroDecisionInicia(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmRubroDecisionInicia.ObtenerRegistro(pvc_Condicion)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene el ultimo orden, esto para insertar un rubro al final de la lista
    ''' </summary>
    ''' <param name="pvc_Usuario"></param>
    ''' <param name="pvc_Clave"></param>
    ''' <returns>El valor del último orden presente en la tabla rubros</returns>
    ''' <remarks></remarks>
    ''' <author>Cesar Bermudez</author>
    ''' <creationDate>16/03/2016</creationDate>
    ''' <changeLog></changeLog>
    ''' 
    <WebMethod()> _
    Public Function OTM_RUBRO_DECISION_INICIA_ObtenerFnOtObtenerUltimoOrden(pvc_Usuario As String, pvc_Clave As String) As Double
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmRubroDecisionInicia As New DalOtmRubroDecisionInicia(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmRubroDecisionInicia.ObtenerFnOtObtenerUltimoOrden()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite ejecutar el procedimiento PR_OT_BajarRubro para cambiar el ordenamiento de los registros
    ''' </summary>
    ''' <param name="pvc_Usuario"></param>
    ''' <param name="pvc_Clave"></param>
    ''' <remarks></remarks>
    ''' <author>Cesar Bermudez Garcia</author>
    ''' <creationDate>12/11/2015 10:48:28 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Sub OTM_RUBRO_DECISION_INICIA_EjecutarPrOtBajarRubro(pvc_Usuario As String, pvc_Clave As String, pvn_PvnIdRubro As Integer)
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmRubroDecisionInicia As New DalOtmRubroDecisionInicia(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_PROCESAR)

            vlo_DalOtmRubroDecisionInicia.EjecutarPrOtBajarRubro(pvn_PvnIdRubro)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Sub

    ''' <summary>
    ''' Permite ejecutar el procedimiento PR_OT_SubirRubro para cambiar el ordenamiento de los registros
    ''' </summary>
    ''' <param name="pvc_Usuario"></param>
    ''' <param name="pvc_Clave"></param>
    ''' <param name="pvn_PvnIdespacio"></param>
    ''' <remarks></remarks>
    ''' <author>Cesar Bermudez Garcia</author>
    ''' <creationDate>12/11/2015 10:48:28 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Sub OTM_RUBRO_DECISION_INICIA_EjecutarPrOtSubirRubro(pvc_Usuario As String, pvc_Clave As String, pvn_PvnIdRubro As Integer)
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmRubroDecisionInicia As New DalOtmRubroDecisionInicia(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_PROCESAR)

            vlo_DalOtmRubroDecisionInicia.EjecutarPrOtSubirRubro(pvn_PvnIdRubro)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Sub

#End Region

#Region "OTM_TIPO_OBRA"
    ''' <summary>
    ''' Permite agregar un registro en la tabla OTM_TIPO_OBRA
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>30/03/2016 10:55:00 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_TIPO_OBRA_InsertarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtmTipoObra) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmTipoObra As New DalOtmTipoObra(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_INSERTAR)

            Return vlo_DalOtmTipoObra.InsertarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTM_TIPO_OBRA
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>30/03/2016 10:55:00 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_TIPO_OBRA_BorrarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtmTipoObra) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtmTipoObra As New BllOtmTipoObra(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_BORRAR)

            Return vlo_BllOtmTipoObra.BorrarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTM_TIPO_OBRA
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>30/03/2016 10:55:00 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_TIPO_OBRA_ModificarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtmTipoObra) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmTipoObra As New DalOtmTipoObra(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_MODIFICAR)

            Return vlo_DalOtmTipoObra.ModificarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTM_TIPO_OBRA según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>30/03/2016 10:55:00 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_TIPO_OBRA_ListarRegistros(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmTipoObra As New DalOtmTipoObra(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmTipoObra.ListarRegistros(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTM_TIPO_OBRALst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>30/03/2016 10:55:00 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_TIPO_OBRA_ListarRegistrosLista(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmTipoObra As New DalOtmTipoObra(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmTipoObra.ListarRegistrosLista(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene un registro de la tabla OTM_TIPO_OBRA según el criterio indicado
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <returns>Entidad que representa la información obtenida al ejecutar la consulta</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>30/03/2016 10:55:00 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_TIPO_OBRA_ObtenerRegistro(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String) As EntOtmTipoObra
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmTipoObra As New DalOtmTipoObra(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmTipoObra.ObtenerRegistro(pvc_Condicion)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTM_TIPO_OBRA según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>30/03/2016 10:55:00 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_TIPO_OBRA_ListarVOtmTipoObra(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmTipoObra As New DalOtmTipoObra(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmTipoObra.ListarVOtmTipoObra(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTM_TIPO_OBRA según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>30/03/2016 10:55:00 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_TIPO_OBRA_ObtenerDatosPaginacionVOtmTipoObra(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmTipoObra As New DalOtmTipoObra(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmTipoObra.ObtenerDatosPaginacionVOtmTipoObra(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTM_TIPO_OBRALST según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>30/03/2016 10:55:00 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_TIPO_OBRA_ListarVOtmTipoObralst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmTipoObra As New DalOtmTipoObra(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmTipoObra.ListarVOtmTipoObralst(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTM_TIPO_OBRALST según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>30/03/2016 10:55:00 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_TIPO_OBRA_ObtenerDatosPaginacionVOtmTipoObralst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmTipoObra As New DalOtmTipoObra(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmTipoObra.ObtenerDatosPaginacionVOtmTipoObralst(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

#End Region

    '#Region "OTM_VIA_CONTRATO"
    '    ''' <summary>
    '    ''' Permite agregar un registro en la tabla OTM_VIA_CONTRATO
    '    ''' </summary>
    '    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    '    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    '    ''' <param name="pvo_Registro">Entidad a procesar</param>
    '    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    '    ''' <author>Generador de Código basado en objetos Oracle</author>
    '    ''' <creationDate>14/04/2016 08:01:21 a.m.</creationDate>
    '    ''' <changeLog></changeLog>
    '    <WebMethod()> _
    '    Public Function OTM_VIA_CONTRATO_InsertarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtmViaContrato) As Integer
    '        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
    '        Dim vlo_BllOtmViaContrato As New BllOtmViaContrato(vlo_Conexion)
    '        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

    '        Try
    '            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
    '            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
    '            vlo_Seguridad.Timeout = -1
    '            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_INSERTAR)

    '            Return vlo_BllOtmViaContrato.InsertarRegistro(pvo_Registro)
    '        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
    '            Throw New System.Web.Services.Protocols.SoapException(
    '                vlo_OT_Excepcion.Message,
    '                System.Web.Services.Protocols.SoapException.ServerFaultCode,
    '                OrdenesDeTrabajoException.NOMBRE_CLASE,
    '                vlo_OT_Excepcion.GetSoapExceptionDetail)

    '        Catch vlo_Excepcion As Exception
    '            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
    '            If (vlo_Rethrow) Then
    '                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
    '            End If
    '        End Try
    '    End Function

    '    ''' <summary>
    '    ''' Permite borrar un registro en la tabla OTM_VIA_CONTRATO
    '    ''' </summary>
    '    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    '    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    '    ''' <param name="pvo_Registro">Entidad a procesar</param>
    '    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    '    ''' <author>Generador de Código basado en objetos Oracle</author>
    '    ''' <creationDate>14/04/2016 08:01:21 a.m.</creationDate>
    '    ''' <changeLog></changeLog>
    '    <WebMethod()> _
    '    Public Function OTM_VIA_CONTRATO_BorrarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtmViaContrato) As Integer
    '        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
    '        Dim vlo_BllOtmViaContrato As New BllOtmViaContrato(vlo_Conexion)
    '        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

    '        Try
    '            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
    '            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
    '            vlo_Seguridad.Timeout = -1
    '            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_BORRAR)

    '            Return vlo_BllOtmViaContrato.BorrarRegistro(pvo_Registro)
    '        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
    '            Throw New System.Web.Services.Protocols.SoapException(
    '                vlo_OT_Excepcion.Message,
    '                System.Web.Services.Protocols.SoapException.ServerFaultCode,
    '                OrdenesDeTrabajoException.NOMBRE_CLASE,
    '                vlo_OT_Excepcion.GetSoapExceptionDetail)

    '        Catch vlo_Excepcion As Exception
    '            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
    '            If (vlo_Rethrow) Then
    '                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
    '            End If
    '        End Try
    '    End Function

    '    ''' <summary>
    '    ''' Permite borrar un registro en la tabla OTM_VIA_CONTRATO
    '    ''' </summary>
    '    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    '    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    '    ''' <param name="pvo_Registro">Entidad a procesar</param>
    '    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    '    ''' <author>Generador de Código basado en objetos Oracle</author>
    '    ''' <creationDate>14/04/2016 08:01:21 a.m.</creationDate>
    '    ''' <changeLog></changeLog>
    '    <WebMethod()> _
    '    Public Function OTM_VIA_CONTRATO_ModificarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtmViaContrato) As Integer
    '        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
    '        Dim vlo_BllOtmViaContrato As New BllOtmViaContrato(vlo_Conexion)
    '        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

    '        Try
    '            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
    '            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
    '            vlo_Seguridad.Timeout = -1
    '            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_MODIFICAR)

    '            Return vlo_BllOtmViaContrato.ModificarRegistro(pvo_Registro)
    '        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
    '            Throw New System.Web.Services.Protocols.SoapException(
    '                vlo_OT_Excepcion.Message,
    '                System.Web.Services.Protocols.SoapException.ServerFaultCode,
    '                OrdenesDeTrabajoException.NOMBRE_CLASE,
    '                vlo_OT_Excepcion.GetSoapExceptionDetail)

    '        Catch vlo_Excepcion As Exception
    '            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
    '            If (vlo_Rethrow) Then
    '                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
    '            End If
    '        End Try
    '    End Function

    '    ''' <summary>
    '    ''' Obtiene los registros de la vista V_OTM_VIA_CONTRATO según el criterio y orden indicados
    '    ''' </summary>
    '    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    '    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    '    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    '    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    '    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    '    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    '    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    '    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    '    ''' <author>Generador de Código basado en objetos Oracle</author>
    '    ''' <creationDate>14/04/2016 08:01:21 a.m.</creationDate>
    '    ''' <changeLog></changeLog>
    '    <WebMethod()> _
    '    Public Function OTM_VIA_CONTRATO_ListarRegistros(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
    '        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
    '        Dim vlo_DalOtmViaContrato As New DalOtmViaContrato(vlo_Conexion)
    '        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

    '        Try
    '            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
    '            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
    '            vlo_Seguridad.Timeout = -1
    '            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

    '            Return vlo_DalOtmViaContrato.ListarRegistros(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
    '        Catch vlo_Excepcion As Exception
    '            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
    '            If (vlo_Rethrow) Then
    '                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
    '            End If
    '        End Try
    '    End Function

    '    ''' <summary>
    '    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTM_VIA_CONTRATO según el criterio y orden indicados
    '    ''' </summary>
    '    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    '    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    '    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    '    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    '    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    '    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    '    ''' <author>Generador de Código basado en objetos Oracle</author>
    '    ''' <creationDate>14/04/2016 08:01:21 a.m.</creationDate>
    '    ''' <changeLog></changeLog>
    '    <WebMethod()> _
    '    Public Function OTM_VIA_CONTRATO_ObtenerDatosPaginacionVOtmViaContrato(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
    '        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
    '        Dim vlo_DalOtmViaContrato As New DalOtmViaContrato(vlo_Conexion)
    '        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

    '        Try
    '            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
    '            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
    '            vlo_Seguridad.Timeout = -1
    '            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

    '            Return vlo_DalOtmViaContrato.ObtenerDatosPaginacionVOtmViaContrato(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
    '        Catch vlo_Excepcion As Exception
    '            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
    '            If (vlo_Rethrow) Then
    '                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
    '            End If
    '        End Try
    '    End Function

    '    ''' <summary>
    '    ''' Obtiene los registros de la vista V_OTM_VIA_CONTRATOLst según el criterio y orden indicados
    '    ''' </summary>
    '    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    '    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    '    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    '    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    '    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    '    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    '    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    '    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    '    ''' <author>Generador de Código basado en objetos Oracle</author>
    '    ''' <creationDate>14/04/2016 08:01:21 a.m.</creationDate>
    '    ''' <changeLog></changeLog>
    '    <WebMethod()> _
    '    Public Function OTM_VIA_CONTRATO_ListarRegistrosLista(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
    '        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
    '        Dim vlo_BllOtmViaContrato As New BllOtmViaContrato(vlo_Conexion)
    '        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

    '        Try
    '            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
    '            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
    '            vlo_Seguridad.Timeout = -1
    '            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

    '            Return vlo_BllOtmViaContrato.ListarRegistrosLista(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
    '        Catch vlo_Excepcion As Exception
    '            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
    '            If (vlo_Rethrow) Then
    '                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
    '            End If
    '        End Try
    '    End Function

    '    ''' <summary>
    '    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTM_VIA_CONTRATOLst según el criterio y orden indicados
    '    ''' </summary>
    '    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    '    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    '    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    '    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    '    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    '    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    '    ''' <author>Generador de Código basado en objetos Oracle</author>
    '    ''' <creationDate>14/04/2016 08:01:21 a.m.</creationDate>
    '    ''' <changeLog></changeLog>
    '    <WebMethod()> _
    '    Public Function OTM_VIA_CONTRATO_ObtenerDatosPaginacionVOtmViaContratolst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
    '        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
    '        Dim vlo_DalOtmViaContrato As New DalOtmViaContrato(vlo_Conexion)
    '        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

    '        Try
    '            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
    '            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
    '            vlo_Seguridad.Timeout = -1
    '            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

    '            Return vlo_DalOtmViaContrato.ObtenerDatosPaginacionVOtmViaContratolst(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
    '        Catch vlo_Excepcion As Exception
    '            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
    '            If (vlo_Rethrow) Then
    '                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
    '            End If
    '        End Try
    '    End Function

    '    ''' <summary>
    '    ''' Obtiene un registro de la tabla OTM_VIA_CONTRATO según el criterio indicado
    '    ''' </summary>
    '    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    '    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    '    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    '    ''' <returns>Entidad que representa la información obtenida al ejecutar la consulta</returns>
    '    ''' <author>Generador de Código basado en objetos Oracle</author>
    '    ''' <creationDate>14/04/2016 08:01:21 a.m.</creationDate>
    '    ''' <changeLog></changeLog>
    '    <WebMethod()> _
    '    Public Function OTM_VIA_CONTRATO_ObtenerRegistro(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String) As EntOtmViaContrato
    '        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
    '        Dim vlo_DalOtmViaContrato As New DalOtmViaContrato(vlo_Conexion)
    '        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

    '        Try
    '            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
    '            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
    '            vlo_Seguridad.Timeout = -1
    '            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

    '            Return vlo_DalOtmViaContrato.ObtenerRegistro(pvc_Condicion)
    '        Catch vlo_Excepcion As Exception
    '            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
    '            If (vlo_Rethrow) Then
    '                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
    '            End If
    '        End Try
    '    End Function

    '#End Region

#Region "OTM_ETAPA_VIA_CONTRATO"
    ''' <summary>
    ''' Permite agregar un registro en la tabla OTM_ETAPA_VIA_CONTRATO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>14/04/2016 09:56:09 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_ETAPA_VIA_CONTRATO_InsertarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtmEtapaViaContrato) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtmEtapaViaContrato As New BllOtmEtapaViaContrato(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_INSERTAR)

            Return vlo_BllOtmEtapaViaContrato.InsertarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTM_ETAPA_VIA_CONTRATO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>14/04/2016 09:56:09 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_ETAPA_VIA_CONTRATO_BorrarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtmEtapaViaContrato) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmEtapaViaContrato As New DalOtmEtapaViaContrato(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_BORRAR)

            Return vlo_DalOtmEtapaViaContrato.BorrarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTM_ETAPA_VIA_CONTRATO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>14/04/2016 09:56:09 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_ETAPA_VIA_CONTRATO_ModificarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtmEtapaViaContrato) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmEtapaViaContrato As New DalOtmEtapaViaContrato(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_MODIFICAR)

            Return vlo_DalOtmEtapaViaContrato.ModificarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTM_ETAPA_VIA_CONTRATO según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>14/04/2016 09:56:09 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_ETAPA_VIA_CONTRATO_ListarRegistros(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmEtapaViaContrato As New DalOtmEtapaViaContrato(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtmEtapaViaContrato.ListarRegistros(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTM_ETAPA_VIA_CONTRATO según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>14/04/2016 09:56:09 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_ETAPA_VIA_CONTRATO_ObtenerDatosPaginacionVOtmEtapaViaContrato(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmEtapaViaContrato As New DalOtmEtapaViaContrato(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtmEtapaViaContrato.ObtenerDatosPaginacionVOtmEtapaViaContrato(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTM_ETAPA_VIA_CONTRATOLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>14/04/2016 09:56:09 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_ETAPA_VIA_CONTRATO_ListarRegistrosLista(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmEtapaViaContrato As New DalOtmEtapaViaContrato(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtmEtapaViaContrato.ListarRegistrosLista(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTM_ETAPA_VIA_CONTRATOLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>14/04/2016 09:56:09 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_ETAPA_VIA_CONTRATO_ObtenerDatosPaginacionVOtmEtapaViaContratolst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmEtapaViaContrato As New DalOtmEtapaViaContrato(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtmEtapaViaContrato.ObtenerDatosPaginacionVOtmEtapaViaContratolst(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene un registro de la tabla OTM_ETAPA_VIA_CONTRATO según el criterio indicado
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <returns>Entidad que representa la información obtenida al ejecutar la consulta</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>14/04/2016 09:56:09 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_ETAPA_VIA_CONTRATO_ObtenerRegistro(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String) As EntOtmEtapaViaContrato
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmEtapaViaContrato As New DalOtmEtapaViaContrato(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_ORDENESDETRABAJO_CONSULTAR)

            Return vlo_DalOtmEtapaViaContrato.ObtenerRegistro(pvc_Condicion)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

#End Region

#Region "OTM_ENCARGADO_CONTRATO"
    ''' <summary>
    ''' Permite agregar un registro en la tabla OTM_ENCARGADO_CONTRATO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>14/04/2016 12:03:08 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_ENCARGADO_CONTRATO_InsertarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtmEncargadoContrato) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtmEncargadoContrato As New BllOtmEncargadoContrato(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_INSERTAR)

            Return vlo_BllOtmEncargadoContrato.InsertarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTM_ENCARGADO_CONTRATO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>14/04/2016 12:03:08 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_ENCARGADO_CONTRATO_BorrarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtmEncargadoContrato) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmEncargadoContrato As New DalOtmEncargadoContrato(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_BORRAR)

            Return vlo_DalOtmEncargadoContrato.BorrarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTM_ENCARGADO_CONTRATO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>14/04/2016 12:03:08 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_ENCARGADO_CONTRATO_ModificarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtmEncargadoContrato) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmEncargadoContrato As New DalOtmEncargadoContrato(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_MODIFICAR)

            Return vlo_DalOtmEncargadoContrato.ModificarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTM_ENCARGADO_CONTRATO según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>14/04/2016 12:03:08 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_ENCARGADO_CONTRATO_ListarRegistros(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmEncargadoContrato As New DalOtmEncargadoContrato(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmEncargadoContrato.ListarRegistros(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTM_ENCARGADO_CONTRATO según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>14/04/2016 12:03:08 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_ENCARGADO_CONTRATO_ObtenerDatosPaginacionVOtmEncargadoContrato(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmEncargadoContrato As New DalOtmEncargadoContrato(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmEncargadoContrato.ObtenerDatosPaginacionVOtmEncargadoContrato(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTM_ENCARGADO_CONTRATOLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>14/04/2016 12:03:08 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_ENCARGADO_CONTRATO_ListarRegistrosLista(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmEncargadoContrato As New DalOtmEncargadoContrato(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmEncargadoContrato.ListarRegistrosLista(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTM_ENCARGADO_CONTRATOLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>14/04/2016 12:03:08 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_ENCARGADO_CONTRATO_ObtenerDatosPaginacionVOtmEncargadoContratolst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmEncargadoContrato As New DalOtmEncargadoContrato(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmEncargadoContrato.ObtenerDatosPaginacionVOtmEncargadoContratolst(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene un registro de la tabla OTM_ENCARGADO_CONTRATO según el criterio indicado
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <returns>Entidad que representa la información obtenida al ejecutar la consulta</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>14/04/2016 12:03:08 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_ENCARGADO_CONTRATO_ObtenerRegistro(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String) As EntOtmEncargadoContrato
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmEncargadoContrato As New DalOtmEncargadoContrato(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmEncargadoContrato.ObtenerRegistro(pvc_Condicion)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

#End Region

#Region "OTM_SUBCATEGORIA_MATERIAL"
    ''' <summary>
    ''' Permite agregar un registro en la tabla OTM_SUBCATEGORIA_MATERIAL
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>19/05/2016 09:54:59 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_SUBCATEGORIA_MATERIAL_InsertarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtmSubcategoriaMaterial) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtmSubcategoriaMaterial As New BllOtmSubcategoriaMaterial(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_INSERTAR)

            Return vlo_BllOtmSubcategoriaMaterial.InsertarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTM_SUBCATEGORIA_MATERIAL
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>19/05/2016 09:54:59 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_SUBCATEGORIA_MATERIAL_BorrarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtmSubcategoriaMaterial) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtmSubcategoriaMaterial As New BllOtmSubcategoriaMaterial(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_BORRAR)

            Return vlo_BllOtmSubcategoriaMaterial.BorrarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTM_SUBCATEGORIA_MATERIAL
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>19/05/2016 09:54:59 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_SUBCATEGORIA_MATERIAL_ModificarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtmSubcategoriaMaterial) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtmSubcategoriaMaterial As New BllOtmSubcategoriaMaterial(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_MODIFICAR)

            Return vlo_BllOtmSubcategoriaMaterial.ModificarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTM_SUBCATEGORIA_MATERIAL según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>19/05/2016 09:54:59 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_SUBCATEGORIA_MATERIAL_ListarRegistros(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmSubcategoriaMaterial As New DalOtmSubcategoriaMaterial(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmSubcategoriaMaterial.ListarRegistros(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTM_SUBCATEGORIA_MATERIALLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>19/05/2016 09:54:59 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_SUBCATEGORIA_MATERIAL_ListarRegistrosLista(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmSubcategoriaMaterial As New DalOtmSubcategoriaMaterial(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmSubcategoriaMaterial.ListarRegistrosLista(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene un registro de la tabla OTM_SUBCATEGORIA_MATERIAL según el criterio indicado
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <returns>Entidad que representa la información obtenida al ejecutar la consulta</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>19/05/2016 09:54:59 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_SUBCATEGORIA_MATERIAL_ObtenerRegistro(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String) As EntOtmSubcategoriaMaterial
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmSubcategoriaMaterial As New DalOtmSubcategoriaMaterial(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmSubcategoriaMaterial.ObtenerRegistro(pvc_Condicion)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTM_SUBCATEGORIA_MATERIAL según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>19/05/2016 09:54:59 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_SUBCATEGORIA_MATERIAL_ListarVOtmSubcategoriaMaterial(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmSubcategoriaMaterial As New DalOtmSubcategoriaMaterial(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmSubcategoriaMaterial.ListarVOtmSubcategoriaMaterial(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTM_SUBCATEGORIA_MATERIAL según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>19/05/2016 09:54:59 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_SUBCATEGORIA_MATERIAL_ObtenerDatosPaginacionVOtmSubcategoriaMaterial(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmSubcategoriaMaterial As New DalOtmSubcategoriaMaterial(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmSubcategoriaMaterial.ObtenerDatosPaginacionVOtmSubcategoriaMaterial(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTM_SUBCATEGORIA_MATERIALLST según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>19/05/2016 09:54:59 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_SUBCATEGORIA_MATERIAL_ListarVOtmSubcategoriaMateriallst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmSubcategoriaMaterial As New DalOtmSubcategoriaMaterial(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmSubcategoriaMaterial.ListarVOtmSubcategoriaMateriallst(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTM_SUBCATEGORIA_MATERIALLST según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>19/05/2016 09:54:59 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_SUBCATEGORIA_MATERIAL_ObtenerDatosPaginacionVOtmSubcategoriaMateriallst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmSubcategoriaMaterial As New DalOtmSubcategoriaMaterial(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmSubcategoriaMaterial.ObtenerDatosPaginacionVOtmSubcategoriaMateriallst(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

#End Region

#Region "OTM_CATEGORIA_MATERIAL"
    ''' <summary>
    ''' Permite agregar un registro en la tabla OTM_CATEGORIA_MATERIAL
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>19/05/2016 05:14:54 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_CATEGORIA_MATERIAL_InsertarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtmCategoriaMaterial) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtmCategoriaMaterial As New BllOtmCategoriaMaterial(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_INSERTAR)

            Return vlo_BllOtmCategoriaMaterial.InsertarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite agregar un registro en la tabla OTM_CATEGORIA_MATERIAL y N registros en OTM_SUBCATEGORIA_CATEGOR
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Carlos Gómez Ondoy</author>
    ''' <creationDate>20/05/2016</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_CATEGORIA_MATERIAL_InsertarCategoriaAsociaciones(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtmCategoriaMaterial, pvo_DsAsociaciones As Data.DataSet) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtmCategoriaMaterial As New BllOtmCategoriaMaterial(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_INSERTAR)

            Return vlo_BllOtmCategoriaMaterial.InsertarCategoriaAsociaciones(pvo_Registro, pvo_DsAsociaciones)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function


    ''' <summary>
    ''' Permite borrar un registro en la tabla OTM_CATEGORIA_MATERIAL
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>19/05/2016 05:14:54 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_CATEGORIA_MATERIAL_BorrarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtmCategoriaMaterial) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtmCategoriaMaterial As New BllOtmCategoriaMaterial(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_BORRAR)

            Return vlo_BllOtmCategoriaMaterial.BorrarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTM_CATEGORIA_MATERIAL
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Carlos Gómez Ondoy</author>
    ''' <creationDate>23/05/2016</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_CATEGORIA_MATERIAL_BorrarRegistroConAsociados(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtmCategoriaMaterial) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtmCategoriaMaterial As New BllOtmCategoriaMaterial(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_BORRAR)

            Return vlo_BllOtmCategoriaMaterial.BorrarRegistroConAsociados(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTM_CATEGORIA_MATERIAL
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>19/05/2016 05:14:54 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_CATEGORIA_MATERIAL_ModificarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtmCategoriaMaterial) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtmCategoriaMaterial As New BllOtmCategoriaMaterial(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_MODIFICAR)

            Return vlo_BllOtmCategoriaMaterial.ModificarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la  OTM_CATEGORIA_MATERIAL y N registros en OTM_SUBCATEGORIA_CATEGOR
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Carlos Gómez Ondoy</author>
    ''' <creationDate>20/05/2016</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_CATEGORIA_MATERIAL_ModificarCategoriaAsociaciones(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtmCategoriaMaterial, pvo_DsAsociaciones As Data.DataSet) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtmCategoriaMaterial As New BllOtmCategoriaMaterial(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_MODIFICAR)

            Return vlo_BllOtmCategoriaMaterial.ModificarCategoriaAsociaciones(pvo_Registro, pvo_DsAsociaciones)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTM_CATEGORIA_MATERIAL según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>19/05/2016 05:14:54 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_CATEGORIA_MATERIAL_ListarRegistros(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmCategoriaMaterial As New DalOtmCategoriaMaterial(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmCategoriaMaterial.ListarRegistros(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTM_CATEGORIA_MATERIALLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>19/05/2016 05:14:54 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_CATEGORIA_MATERIAL_ListarRegistrosLista(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmCategoriaMaterial As New DalOtmCategoriaMaterial(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmCategoriaMaterial.ListarRegistrosLista(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene un registro de la tabla OTM_CATEGORIA_MATERIAL según el criterio indicado
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <returns>Entidad que representa la información obtenida al ejecutar la consulta</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>19/05/2016 05:14:54 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_CATEGORIA_MATERIAL_ObtenerRegistro(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String) As EntOtmCategoriaMaterial
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmCategoriaMaterial As New DalOtmCategoriaMaterial(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmCategoriaMaterial.ObtenerRegistro(pvc_Condicion)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTM_CATEGORIA_MATERIAL según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>19/05/2016 05:14:54 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_CATEGORIA_MATERIAL_ListarVOtmCategoriaMaterial(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmCategoriaMaterial As New DalOtmCategoriaMaterial(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmCategoriaMaterial.ListarVOtmCategoriaMaterial(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTM_CATEGORIA_MATERIAL según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>19/05/2016 05:14:54 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_CATEGORIA_MATERIAL_ObtenerDatosPaginacionVOtmCategoriaMaterial(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmCategoriaMaterial As New DalOtmCategoriaMaterial(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmCategoriaMaterial.ObtenerDatosPaginacionVOtmCategoriaMaterial(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTM_CATEGORIA_MATERIALLST según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>19/05/2016 05:14:54 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_CATEGORIA_MATERIAL_ListarVOtmCategoriaMateriallst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmCategoriaMaterial As New DalOtmCategoriaMaterial(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmCategoriaMaterial.ListarVOtmCategoriaMateriallst(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTM_CATEGORIA_MATERIALLST según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>19/05/2016 05:14:54 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_CATEGORIA_MATERIAL_ObtenerDatosPaginacionVOtmCategoriaMateriallst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmCategoriaMaterial As New DalOtmCategoriaMaterial(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmCategoriaMaterial.ObtenerDatosPaginacionVOtmCategoriaMateriallst(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

#End Region

#Region "OTM_SUBCATEGORIA_CATEGOR"
    ''' <summary>
    ''' Permite agregar un registro en la tabla OTM_SUBCATEGORIA_CATEGOR
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>19/05/2016 05:14:54 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_SUBCATEGORIA_CATEGOR_InsertarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtmSubcategoriaCategor) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtmSubcategoriaCategor As New BllOtmSubcategoriaCategor(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_INSERTAR)

            Return vlo_BllOtmSubcategoriaCategor.InsertarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTM_SUBCATEGORIA_CATEGOR
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>19/05/2016 05:14:54 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_SUBCATEGORIA_CATEGOR_BorrarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtmSubcategoriaCategor) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtmSubcategoriaCategor As New BllOtmSubcategoriaCategor(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_BORRAR)

            Return vlo_BllOtmSubcategoriaCategor.BorrarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTM_SUBCATEGORIA_CATEGOR
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>19/05/2016 05:14:54 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_SUBCATEGORIA_CATEGOR_ModificarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtmSubcategoriaCategor) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmSubcategoriaCategor As New DalOtmSubcategoriaCategor(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_MODIFICAR)

            Return vlo_DalOtmSubcategoriaCategor.ModificarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTM_SUBCATEGORIA_CATEGOR según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>19/05/2016 05:14:54 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_SUBCATEGORIA_CATEGOR_ListarRegistros(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmSubcategoriaCategor As New DalOtmSubcategoriaCategor(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmSubcategoriaCategor.ListarRegistros(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTM_SUBCATEGORIA_CATEGORLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>19/05/2016 05:14:54 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_SUBCATEGORIA_CATEGOR_ListarRegistrosLista(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmSubcategoriaCategor As New DalOtmSubcategoriaCategor(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmSubcategoriaCategor.ListarRegistrosLista(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene un registro de la tabla OTM_SUBCATEGORIA_CATEGOR según el criterio indicado
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <returns>Entidad que representa la información obtenida al ejecutar la consulta</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>19/05/2016 05:14:54 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_SUBCATEGORIA_CATEGOR_ObtenerRegistro(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String) As EntOtmSubcategoriaCategor
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmSubcategoriaCategor As New DalOtmSubcategoriaCategor(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmSubcategoriaCategor.ObtenerRegistro(pvc_Condicion)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTM_SUBCATEGORIA_CATEGOR según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>19/05/2016 05:14:54 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_SUBCATEGORIA_CATEGOR_ListarVOtmSubcategoriaCategor(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmSubcategoriaCategor As New DalOtmSubcategoriaCategor(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmSubcategoriaCategor.ListarVOtmSubcategoriaCategor(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTM_SUBCATEGORIA_CATEGOR según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>19/05/2016 05:14:54 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_SUBCATEGORIA_CATEGOR_ObtenerDatosPaginacionVOtmSubcategoriaCategor(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmSubcategoriaCategor As New DalOtmSubcategoriaCategor(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmSubcategoriaCategor.ObtenerDatosPaginacionVOtmSubcategoriaCategor(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTM_SUBCATEGORIA_CATEGORLST según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>19/05/2016 05:14:54 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_SUBCATEGORIA_CATEGOR_ListarVOtmSubcategoriaCategorlst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmSubcategoriaCategor As New DalOtmSubcategoriaCategor(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmSubcategoriaCategor.ListarVOtmSubcategoriaCategorlst(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTM_SUBCATEGORIA_CATEGORLST según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>19/05/2016 05:14:54 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_SUBCATEGORIA_CATEGOR_ObtenerDatosPaginacionVOtmSubcategoriaCategorlst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmSubcategoriaCategor As New DalOtmSubcategoriaCategor(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmSubcategoriaCategor.ObtenerDatosPaginacionVOtmSubcategoriaCategorlst(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

#End Region

#Region "OTM_UNIDAD_MEDIDA"
    ''' <summary>
    ''' Permite agregar un registro en la tabla OTM_UNIDAD_MEDIDA
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>23/05/2016 10:24:54 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_UNIDAD_MEDIDA_InsertarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtmUnidadMedida) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtmUnidadMedida As New BllOtmUnidadMedida(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_INSERTAR)

            Return vlo_BllOtmUnidadMedida.InsertarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTM_UNIDAD_MEDIDA
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>23/05/2016 10:24:54 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_UNIDAD_MEDIDA_BorrarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtmUnidadMedida) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtmUnidadMedida As New BllOtmUnidadMedida(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_BORRAR)

            Return vlo_BllOtmUnidadMedida.BorrarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTM_UNIDAD_MEDIDA
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>23/05/2016 10:24:54 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_UNIDAD_MEDIDA_ModificarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtmUnidadMedida) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtmUnidadMedida As New BllOtmUnidadMedida(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_MODIFICAR)

            Return vlo_BllOtmUnidadMedida.ModificarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTM_UNIDAD_MEDIDA según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>23/05/2016 10:24:54 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_UNIDAD_MEDIDA_ListarRegistros(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmUnidadMedida As New DalOtmUnidadMedida(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmUnidadMedida.ListarRegistros(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTM_UNIDAD_MEDIDALst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>23/05/2016 10:24:54 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_UNIDAD_MEDIDA_ListarRegistrosLista(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmUnidadMedida As New DalOtmUnidadMedida(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmUnidadMedida.ListarRegistrosLista(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene un registro de la tabla OTM_UNIDAD_MEDIDA según el criterio indicado
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <returns>Entidad que representa la información obtenida al ejecutar la consulta</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>23/05/2016 10:24:54 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_UNIDAD_MEDIDA_ObtenerRegistro(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String) As EntOtmUnidadMedida
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmUnidadMedida As New DalOtmUnidadMedida(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmUnidadMedida.ObtenerRegistro(pvc_Condicion)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTM_UNIDAD_MEDIDA según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>23/05/2016 10:24:54 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_UNIDAD_MEDIDA_ListarVOtmUnidadMedida(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmUnidadMedida As New DalOtmUnidadMedida(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmUnidadMedida.ListarVOtmUnidadMedida(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTM_UNIDAD_MEDIDA según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>23/05/2016 10:24:54 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_UNIDAD_MEDIDA_ObtenerDatosPaginacionVOtmUnidadMedida(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmUnidadMedida As New DalOtmUnidadMedida(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmUnidadMedida.ObtenerDatosPaginacionVOtmUnidadMedida(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTM_UNIDAD_MEDIDALST según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>23/05/2016 10:24:54 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_UNIDAD_MEDIDA_ListarVOtmUnidadMedidalst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmUnidadMedida As New DalOtmUnidadMedida(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmUnidadMedida.ListarVOtmUnidadMedidalst(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTM_UNIDAD_MEDIDALST según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>23/05/2016 10:24:54 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_UNIDAD_MEDIDA_ObtenerDatosPaginacionVOtmUnidadMedidalst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmUnidadMedida As New DalOtmUnidadMedida(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmUnidadMedida.ObtenerDatosPaginacionVOtmUnidadMedidalst(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

#End Region

#Region "OTM_ALMACEN_BODEGA"
    ''' <summary>
    ''' Permite agregar un registro en la tabla OTM_ALMACEN_BODEGA
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>23/05/2016 02:48:06 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_ALMACEN_BODEGA_InsertarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtmAlmacenBodega) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtmAlmacenBodega As New BllOtmAlmacenBodega(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_INSERTAR)

            Return vlo_BllOtmAlmacenBodega.InsertarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTM_ALMACEN_BODEGA
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>23/05/2016 02:48:06 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_ALMACEN_BODEGA_BorrarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtmAlmacenBodega) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtmAlmacenBodega As New BllOtmAlmacenBodega(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_BORRAR)

            Return vlo_BllOtmAlmacenBodega.BorrarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTM_ALMACEN_BODEGA
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>23/05/2016 02:48:06 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_ALMACEN_BODEGA_ModificarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtmAlmacenBodega) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtmAlmacenBodega As New BllOtmAlmacenBodega(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_MODIFICAR)

            Return vlo_BllOtmAlmacenBodega.ModificarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTM_ALMACEN_BODEGA según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>23/05/2016 02:48:06 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_ALMACEN_BODEGA_ListarRegistros(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmAlmacenBodega As New DalOtmAlmacenBodega(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmAlmacenBodega.ListarRegistros(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTM_ALMACEN_BODEGALst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>23/05/2016 02:48:06 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_ALMACEN_BODEGA_ListarRegistrosLista(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmAlmacenBodega As New DalOtmAlmacenBodega(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmAlmacenBodega.ListarRegistrosLista(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene un registro de la tabla OTM_ALMACEN_BODEGA según el criterio indicado
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <returns>Entidad que representa la información obtenida al ejecutar la consulta</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>23/05/2016 02:48:06 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_ALMACEN_BODEGA_ObtenerRegistro(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String) As EntOtmAlmacenBodega
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmAlmacenBodega As New DalOtmAlmacenBodega(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmAlmacenBodega.ObtenerRegistro(pvc_Condicion)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTM_ALMACEN_BODEGA según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>23/05/2016 02:48:06 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_ALMACEN_BODEGA_ListarVOtmAlmacenBodega(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmAlmacenBodega As New DalOtmAlmacenBodega(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmAlmacenBodega.ListarVOtmAlmacenBodega(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTM_ALMACEN_BODEGA según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>23/05/2016 02:48:06 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_ALMACEN_BODEGA_ObtenerDatosPaginacionVOtmAlmacenBodega(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmAlmacenBodega As New DalOtmAlmacenBodega(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmAlmacenBodega.ObtenerDatosPaginacionVOtmAlmacenBodega(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTM_ALMACEN_BODEGALST según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>23/05/2016 02:48:06 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_ALMACEN_BODEGA_ListarVOtmAlmacenBodegalst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmAlmacenBodega As New DalOtmAlmacenBodega(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmAlmacenBodega.ListarVOtmAlmacenBodegalst(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTM_ALMACEN_BODEGALST según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>23/05/2016 02:48:06 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_ALMACEN_BODEGA_ObtenerDatosPaginacionVOtmAlmacenBodegalst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmAlmacenBodega As New DalOtmAlmacenBodega(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmAlmacenBodega.ObtenerDatosPaginacionVOtmAlmacenBodegalst(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTT_VIA_COMPRA_ALMACEN según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>09/06/2016 02:01:18 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_ALMACEN_BODEGA_ListarVOttViaCompraAlmacen(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtmAlmacenBodega As New BllOtmAlmacenBodega(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_BllOtmAlmacenBodega.ListarViaCompraAlmacen(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

#End Region

#Region "OTM_VIA_COMPRA_CONTRATO"
    ''' <summary>
    ''' Permite agregar un registro en la tabla OTM_VIA_COMPRA_CONTRATO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>27/05/2016 02:21:34 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_VIA_COMPRA_CONTRATO_InsertarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtmViaCompraContrato) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtmViaCompraContrato As New BllOtmViaCompraContrato(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_INSERTAR)

            Return vlo_BllOtmViaCompraContrato.InsertarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTM_VIA_COMPRA_CONTRATO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>27/05/2016 02:21:34 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_VIA_COMPRA_CONTRATO_BorrarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtmViaCompraContrato) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtmViaCompraContrato As New BllOtmViaCompraContrato(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_BORRAR)

            Return vlo_BllOtmViaCompraContrato.BorrarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTM_VIA_COMPRA_CONTRATO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>27/05/2016 02:21:34 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_VIA_COMPRA_CONTRATO_ModificarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtmViaCompraContrato) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtmViaCompraContrato As New BllOtmViaCompraContrato(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_MODIFICAR)

            Return vlo_BllOtmViaCompraContrato.ModificarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTM_VIA_COMPRA_CONTRATO según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>27/05/2016 02:21:34 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_VIA_COMPRA_CONTRATO_ListarRegistros(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmViaCompraContrato As New DalOtmViaCompraContrato(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmViaCompraContrato.ListarRegistros(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function


    ''' <summary>
    ''' Obtiene los registros de la vista V_OTM_VIA_COMPRA_CONTRATOLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>27/05/2016 02:21:34 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_VIA_COMPRA_CONTRATO_ListarRegistrosLista(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtmViaCompraContrato As New BllOtmViaCompraContrato(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_BllOtmViaCompraContrato.ListarRegistrosLista(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene un registro de la tabla OTM_VIA_COMPRA_CONTRATO según el criterio indicado
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <returns>Entidad que representa la información obtenida al ejecutar la consulta</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>27/05/2016 02:21:34 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_VIA_COMPRA_CONTRATO_ObtenerRegistro(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String) As EntOtmViaCompraContrato
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmViaCompraContrato As New DalOtmViaCompraContrato(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmViaCompraContrato.ObtenerRegistro(pvc_Condicion)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTM_VIA_COMPRA_CONTRATO según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>27/05/2016 03:09:22 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_VIA_COMPRA_CONTRATO_ListarVOtmViaCompraContrato(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmViaCompraContrato As New DalOtmViaCompraContrato(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmViaCompraContrato.ListarVOtmViaCompraContrato(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTM_VIA_COMPRA_CONTRATO según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>27/05/2016 03:09:22 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_VIA_COMPRA_CONTRATO_ObtenerDatosPaginacionVOtmViaCompraContrato(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmViaCompraContrato As New DalOtmViaCompraContrato(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmViaCompraContrato.ObtenerDatosPaginacionVOtmViaCompraContrato(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTM_VIA_COMPRA_CONTRATOLST según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>27/05/2016 03:09:22 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_VIA_COMPRA_CONTRATO_ListarVOtmViaCompraContratolst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmViaCompraContrato As New DalOtmViaCompraContrato(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmViaCompraContrato.ListarVOtmViaCompraContratolst(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' holis
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>27/05/2016 03:09:22 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_VIA_COMPRA_CONTRATO_ObtenerDatosPaginacionVOtmViaCompraContratolst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmViaCompraContrato As New DalOtmViaCompraContrato(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmViaCompraContrato.ObtenerDatosPaginacionVOtmViaCompraContratolst(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

#End Region

#Region "OTM_MATERIAL"
    ''' <summary>
    ''' Permite agregar un registro en la tabla OTM_MATERIAL
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>29/05/2016 11:14:50 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_MATERIAL_InsertarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtmMaterial) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtmMaterial As New BllOtmMaterial(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_INSERTAR)

            Return vlo_BllOtmMaterial.InsertarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTM_MATERIAL
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>29/05/2016 11:14:50 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_MATERIAL_BorrarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtmMaterial) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtmMaterial As New BllOtmMaterial(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_BORRAR)

            Return vlo_BllOtmMaterial.BorrarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTM_MATERIAL
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>29/05/2016 11:14:50 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_MATERIAL_ModificarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtmMaterial) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtmMaterial As New BllOtmMaterial(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_MODIFICAR)

            Return vlo_BllOtmMaterial.ModificarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTM_MATERIAL según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>29/05/2016 11:14:50 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_MATERIAL_ListarRegistros(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmMaterial As New DalOtmMaterial(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmMaterial.ListarRegistros(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTM_MATERIAL según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>29/05/2016 11:14:50 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_MATERIAL_ObtenerDatosPaginacionVOtmMaterial(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmMaterial As New DalOtmMaterial(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmMaterial.ObtenerDatosPaginacionVOtmMaterial(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTM_MATERIALLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>29/05/2016 11:14:50 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_MATERIAL_ListarRegistrosLista(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmMaterial As New DalOtmMaterial(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmMaterial.ListarRegistrosLista(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    <WebMethod()> _
    Public Function OTM_MATERIAL_ListarRegistrosListaINVENTARIO(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmMaterial As New DalOtmMaterial(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmMaterial.ListarRegistrosListaINVENTARIO(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTM_MATERIALLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>29/05/2016 11:14:50 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_MATERIAL_ObtenerDatosPaginacionVOtmMateriallst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmMaterial As New DalOtmMaterial(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmMaterial.ObtenerDatosPaginacionVOtmMateriallst(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene un registro de la tabla OTM_MATERIAL según el criterio indicado
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <returns>Entidad que representa la información obtenida al ejecutar la consulta</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>29/05/2016 11:14:50 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_MATERIAL_ObtenerRegistro(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String) As EntOtmMaterial
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmMaterial As New DalOtmMaterial(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmMaterial.ObtenerRegistro(pvc_Condicion)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

#End Region

#Region "OTF_INVENTARIO"
    ''' <summary>
    ''' Permite agregar un registro en la tabla OTF_INVENTARIO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>29/05/2016 02:56:19 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_INVENTARIO_InsertarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtfInventario) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtfInventario As New BllOtfInventario(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_INSERTAR)

            Return vlo_BllOtfInventario.InsertarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTF_INVENTARIO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>29/05/2016 02:56:19 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_INVENTARIO_BorrarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtfInventario) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtfInventario As New BllOtfInventario(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_BORRAR)

            Return vlo_BllOtfInventario.BorrarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTF_INVENTARIO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>29/05/2016 02:56:19 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_INVENTARIO_ModificarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtfInventario) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtfInventario As New DalOtfInventario(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_MODIFICAR)

            Return vlo_DalOtfInventario.ModificarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTF_INVENTARIO según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>29/05/2016 02:56:19 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_INVENTARIO_ListarRegistros(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtfInventario As New DalOtfInventario(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtfInventario.ListarRegistros(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTF_INVENTARIO según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>29/05/2016 02:56:19 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_INVENTARIO_ObtenerDatosPaginacionVOtfInventario(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtfInventario As New DalOtfInventario(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtfInventario.ObtenerDatosPaginacionVOtfInventario(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTF_INVENTARIOLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>29/05/2016 02:56:19 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_INVENTARIO_ListarRegistrosLista(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtfInventario As New DalOtfInventario(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtfInventario.ListarRegistrosLista(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTF_INVENTARIOLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>29/05/2016 02:56:19 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_INVENTARIO_ObtenerDatosPaginacionVOtfInventariolst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtfInventario As New DalOtfInventario(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtfInventario.ObtenerDatosPaginacionVOtfInventariolst(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene un registro de la tabla OTF_INVENTARIO según el criterio indicado
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <returns>Entidad que representa la información obtenida al ejecutar la consulta</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>29/05/2016 02:56:19 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_INVENTARIO_ObtenerRegistro(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String) As EntOtfInventario
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtfInventario As New DalOtfInventario(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtfInventario.ObtenerRegistro(pvc_Condicion)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite almacenar el material en determinado almacen o bodega
    ''' </summary>
    ''' <param name="pvc_Usuario"></param>
    ''' <param name="pvc_Clave"></param>
    ''' <param name="pvc_idOrdenTrabajo"></param>
    ''' <param name="pvn_PvnIdalmacenbodega"></param>
    ''' <param name="pvn_PvnIdubicacionadministra"></param>
    ''' <param name="pvn_PvnIdmaterial"></param>
    ''' <param name="pvn_PvnCantidadretiro"></param>
    ''' <param name="pvc_PvcUsuario"></param>
    ''' <param name="pvd_PvdTimestamp"></param>
    ''' <returns></returns>
    ''' <remarks></remarks>
    ''' <author>Cesar Bermudez G</author>
    ''' <creationDate>04/07/2016</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTF_INVENTARIO_ProcesarRetiro(pvc_Usuario As String, pvc_Clave As String, pvc_idOrdenTrabajo As String, pvn_idDetalleMaterial As Integer, pvn_PvnIdalmacenbodega As Integer, pvn_PvnIdubicacionadministra As Integer, pvn_PvnIdmaterial As Integer, pvn_PvnCantidadretiro As Double, pvc_PvcUsuario As String, pvd_PvdTimestamp As DateTime) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtfInventario As New BllOtfInventario(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_PROCESAR)

            Return vlo_BllOtfInventario.RetiroMaterial(pvc_idOrdenTrabajo, pvn_idDetalleMaterial, pvn_PvnIdalmacenbodega,
                                                       pvn_PvnIdubicacionadministra, pvn_PvnIdmaterial, pvn_PvnCantidadretiro,
                                                       pvc_PvcUsuario, pvd_PvdTimestamp)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    <WebMethod()> _
    Public Function OTF_INVENTARIO_ProcesarRetiroMaterial(pvc_Usuario As String, pvc_Clave As String, pvc_idOrdenTrabajo As String, pvn_idDetalleMaterial As Integer, pvn_PvnIdalmacenbodega As Integer, pvn_PvnIdubicacionadministra As Integer, pvn_PvnIdmaterial As Integer, pvn_PvnCantidadretiro As Double, pvc_PvcUsuario As String, pvn_PvnAnno As Integer, pvn_PvnIdSolicitudRetiro As Integer) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtfInventario As New BllOtfInventario(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_PROCESAR)

            Return vlo_BllOtfInventario.ProcesoRetiroMaterial(pvc_idOrdenTrabajo, pvn_idDetalleMaterial, pvn_PvnIdalmacenbodega,
                                                       pvn_PvnIdubicacionadministra, pvn_PvnIdmaterial, pvn_PvnCantidadretiro,
                                                       pvc_PvcUsuario, pvn_PvnAnno, pvn_PvnIdSolicitudRetiro)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    <WebMethod()> _
    Public Function OTF_INVENTARIO_ActualizaSolicitudRetiroMaterial(pvc_Usuario As String, pvc_Clave As String, pvc_PvcUsuario As String, pvn_PvnAnno As Integer, pvn_PvnIdSolicitudRetiro As Integer) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtfInventario As New BllOtfInventario(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_PROCESAR)

            Return vlo_BllOtfInventario.ActualizaSolicitudRetiroMaterial(pvc_PvcUsuario, pvn_PvnAnno, pvn_PvnIdSolicitudRetiro)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function


#End Region

#Region "OTM_ENCARGADO_ALMACEN"
    ''' <summary>
    ''' Permite agregar un registro en la tabla OTM_ENCARGADO_ALMACEN
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>28/06/2016 07:52:43 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_ENCARGADO_ALMACEN_InsertarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtmEncargadoAlmacen) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtmEncargadoAlmacen As New BllOtmEncargadoAlmacen(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_INSERTAR)

            Return vlo_BllOtmEncargadoAlmacen.InsertarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTM_ENCARGADO_ALMACEN
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>28/06/2016 07:52:43 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_ENCARGADO_ALMACEN_BorrarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtmEncargadoAlmacen) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmEncargadoAlmacen As New DalOtmEncargadoAlmacen(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_BORRAR)

            Return vlo_DalOtmEncargadoAlmacen.BorrarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTM_ENCARGADO_ALMACEN
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>28/06/2016 07:52:43 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_ENCARGADO_ALMACEN_ModificarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtmEncargadoAlmacen) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmEncargadoAlmacen As New DalOtmEncargadoAlmacen(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_MODIFICAR)

            Return vlo_DalOtmEncargadoAlmacen.ModificarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTM_ENCARGADO_ALMACEN según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>28/06/2016 07:52:43 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_ENCARGADO_ALMACEN_ListarRegistros(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmEncargadoAlmacen As New DalOtmEncargadoAlmacen(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmEncargadoAlmacen.ListarRegistros(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function



    ''' <summary>
    ''' Obtiene los registros de la vista V_OTM_ENCARGADO_ALMACENLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>28/06/2016 07:52:43 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_ENCARGADO_ALMACEN_ListarRegistrosLista(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmEncargadoAlmacen As New DalOtmEncargadoAlmacen(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmEncargadoAlmacen.ListarRegistrosLista(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function



    ''' <summary>
    ''' Obtiene un registro de la tabla OTM_ENCARGADO_ALMACEN según el criterio indicado
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <returns>Entidad que representa la información obtenida al ejecutar la consulta</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>28/06/2016 07:52:43 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_ENCARGADO_ALMACEN_ObtenerRegistro(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String) As EntOtmEncargadoAlmacen
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmEncargadoAlmacen As New DalOtmEncargadoAlmacen(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmEncargadoAlmacen.ObtenerRegistro(pvc_Condicion)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTM_ENCARGADO_ALMACEN según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>28/06/2016 07:52:43 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_ENCARGADO_ALMACEN_ListarVOtmEncargadoAlmacen(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmEncargadoAlmacen As New DalOtmEncargadoAlmacen(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmEncargadoAlmacen.ListarVOtmEncargadoAlmacen(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTM_ENCARGADO_ALMACEN según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>28/06/2016 07:52:43 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_ENCARGADO_ALMACEN_ObtenerDatosPaginacionVOtmEncargadoAlmacen(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmEncargadoAlmacen As New DalOtmEncargadoAlmacen(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmEncargadoAlmacen.ObtenerDatosPaginacionVOtmEncargadoAlmacen(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTM_ENCARGADO_ALMACENLST según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>28/06/2016 07:52:43 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_ENCARGADO_ALMACEN_ListarVOtmEncargadoAlmacenlst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmEncargadoAlmacen As New DalOtmEncargadoAlmacen(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmEncargadoAlmacen.ListarVOtmEncargadoAlmacenlst(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTM_ENCARGADO_ALMACENLST según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>28/06/2016 07:52:43 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_ENCARGADO_ALMACEN_ObtenerDatosPaginacionVOtmEncargadoAlmacenlst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmEncargadoAlmacen As New DalOtmEncargadoAlmacen(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmEncargadoAlmacen.ObtenerDatosPaginacionVOtmEncargadoAlmacenlst(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

#End Region

#Region "OTM_TIPO_INCIDENTE"
    ''' <summary>
    ''' Permite agregar un registro en la tabla OTM_TIPO_INCIDENTE
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>04/08/2016 03:36:03 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_TIPO_INCIDENTE_InsertarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtmTipoIncidente) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmTipoIncidente As New DalOtmTipoIncidente(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_INSERTAR)

            Return vlo_DalOtmTipoIncidente.InsertarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTM_TIPO_INCIDENTE
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>04/08/2016 03:36:03 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_TIPO_INCIDENTE_BorrarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtmTipoIncidente) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtmTipoIncidente As New BllOtmTipoIncidente(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_BORRAR)

            Return vlo_BllOtmTipoIncidente.BorrarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTM_TIPO_INCIDENTE
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>04/08/2016 03:36:03 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_TIPO_INCIDENTE_ModificarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtmTipoIncidente) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmTipoIncidente As New DalOtmTipoIncidente(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_MODIFICAR)

            Return vlo_DalOtmTipoIncidente.ModificarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTM_TIPO_INCIDENTE según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>04/08/2016 03:36:03 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_TIPO_INCIDENTE_ListarRegistros(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmTipoIncidente As New DalOtmTipoIncidente(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmTipoIncidente.ListarRegistros(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function


    ''' <summary>
    ''' Obtiene los registros de la vista V_OTM_TIPO_INCIDENTELst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>04/08/2016 03:36:03 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_TIPO_INCIDENTE_ListarRegistrosLista(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmTipoIncidente As New DalOtmTipoIncidente(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmTipoIncidente.ListarRegistrosLista(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene un registro de la tabla OTM_TIPO_INCIDENTE según el criterio indicado
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <returns>Entidad que representa la información obtenida al ejecutar la consulta</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>04/08/2016 03:36:03 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_TIPO_INCIDENTE_ObtenerRegistro(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String) As EntOtmTipoIncidente
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmTipoIncidente As New DalOtmTipoIncidente(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmTipoIncidente.ObtenerRegistro(pvc_Condicion)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTM_TIPO_INCIDENTE según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>04/08/2016 03:36:03 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_TIPO_INCIDENTE_ListarVOtmTipoIncidente(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmTipoIncidente As New DalOtmTipoIncidente(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmTipoIncidente.ListarVOtmTipoIncidente(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTM_TIPO_INCIDENTE según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>04/08/2016 03:36:03 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_TIPO_INCIDENTE_ObtenerDatosPaginacionVOtmTipoIncidente(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmTipoIncidente As New DalOtmTipoIncidente(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmTipoIncidente.ObtenerDatosPaginacionVOtmTipoIncidente(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTM_TIPO_INCIDENTELST según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>04/08/2016 03:36:03 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_TIPO_INCIDENTE_ListarVOtmTipoIncidentelst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmTipoIncidente As New DalOtmTipoIncidente(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmTipoIncidente.ListarVOtmTipoIncidentelst(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTM_TIPO_INCIDENTELST según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>04/08/2016 03:36:03 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_TIPO_INCIDENTE_ObtenerDatosPaginacionVOtmTipoIncidentelst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmTipoIncidente As New DalOtmTipoIncidente(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmTipoIncidente.ObtenerDatosPaginacionVOtmTipoIncidentelst(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

#End Region

#Region "OTM_PROVEEDOR"
    ''' <summary>
    ''' Permite agregar un registro en la tabla OTM_PROVEEDOR
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>04/08/2016 03:35:36 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_PROVEEDOR_InsertarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtmProveedor) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtmProveedor As New BllOtmProveedor(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_INSERTAR)

            Return vlo_BllOtmProveedor.InsertarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTM_PROVEEDOR
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>04/08/2016 03:35:36 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_PROVEEDOR_BorrarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtmProveedor) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtmProveedor As New BllOtmProveedor(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_BORRAR)

            Return vlo_BllOtmProveedor.BorrarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTM_PROVEEDOR
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>04/08/2016 03:35:36 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_PROVEEDOR_ModificarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtmProveedor) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmProveedor As New DalOtmProveedor(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_MODIFICAR)

            Return vlo_DalOtmProveedor.ModificarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTM_PROVEEDOR según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>04/08/2016 03:35:36 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_PROVEEDOR_ListarRegistros(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmProveedor As New DalOtmProveedor(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmProveedor.ListarRegistros(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTM_PROVEEDOR según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>04/08/2016 03:35:36 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_PROVEEDOR_ObtenerDatosPaginacionVOtmProveedor(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmProveedor As New DalOtmProveedor(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmProveedor.ObtenerDatosPaginacionVOtmProveedor(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTM_PROVEEDORLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>04/08/2016 03:35:36 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_PROVEEDOR_ListarRegistrosLista(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmProveedor As New DalOtmProveedor(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmProveedor.ListarRegistrosLista(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTM_PROVEEDORLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>04/08/2016 03:35:36 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_PROVEEDOR_ObtenerDatosPaginacionVOtmProveedorlst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmProveedor As New DalOtmProveedor(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmProveedor.ObtenerDatosPaginacionVOtmProveedorlst(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene un registro de la tabla OTM_PROVEEDOR según el criterio indicado
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <returns>Entidad que representa la información obtenida al ejecutar la consulta</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>04/08/2016 03:35:36 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_PROVEEDOR_ObtenerRegistro(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String) As EntOtmProveedor
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmProveedor As New DalOtmProveedor(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmProveedor.ObtenerRegistro(pvc_Condicion)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite agregar un registro en la tabla OTM_PROVEEDOR
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>04/08/2016 03:35:36 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_PROVEEDOR_InsertarModificarRegistroConAsociados(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtmProveedor, ByVal pvo_DsTelefonos As DataSet, ByVal pvo_DsCorreos As DataSet, ByVal pvb_EsAgregar As Boolean) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtmProveedor As New BllOtmProveedor(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_INSERTAR)

            Return vlo_BllOtmProveedor.InsertarModificarRegistroConAsociados(pvo_Registro, pvo_DsTelefonos, pvo_DsCorreos, pvb_EsAgregar)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function
#End Region

#Region "OTM_TELEFONO_PROVEEDOR"
    ''' <summary>
    ''' Permite agregar un registro en la tabla OTM_TELEFONO_PROVEEDOR
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>04/08/2016 03:38:48 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_TELEFONO_PROVEEDOR_InsertarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtmTelefonoProveedor) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtmTelefonoProveedor As New BllOtmTelefonoProveedor(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_INSERTAR)

            Return vlo_BllOtmTelefonoProveedor.InsertarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTM_TELEFONO_PROVEEDOR
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>04/08/2016 03:38:48 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_TELEFONO_PROVEEDOR_BorrarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtmTelefonoProveedor) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmTelefonoProveedor As New DalOtmTelefonoProveedor(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_BORRAR)

            Return vlo_DalOtmTelefonoProveedor.BorrarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTM_TELEFONO_PROVEEDOR
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>04/08/2016 03:38:48 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_TELEFONO_PROVEEDOR_ModificarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtmTelefonoProveedor) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmTelefonoProveedor As New DalOtmTelefonoProveedor(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_MODIFICAR)

            Return vlo_DalOtmTelefonoProveedor.ModificarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTM_TELEFONO_PROVEEDOR según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>04/08/2016 03:38:48 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_TELEFONO_PROVEEDOR_ListarRegistros(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmTelefonoProveedor As New DalOtmTelefonoProveedor(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmTelefonoProveedor.ListarRegistros(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTM_TELEFONO_PROVEEDOR según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>04/08/2016 03:38:48 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_TELEFONO_PROVEEDOR_ObtenerDatosPaginacionVOtmTelefonoProveedor(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmTelefonoProveedor As New DalOtmTelefonoProveedor(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmTelefonoProveedor.ObtenerDatosPaginacionVOtmTelefonoProveedor(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTM_TELEFONO_PROVEEDORLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>04/08/2016 03:38:48 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_TELEFONO_PROVEEDOR_ListarRegistrosLista(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmTelefonoProveedor As New DalOtmTelefonoProveedor(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmTelefonoProveedor.ListarRegistrosLista(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTM_TELEFONO_PROVEEDORLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>04/08/2016 03:38:48 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_TELEFONO_PROVEEDOR_ObtenerDatosPaginacionVOtmTelefonoProveedorlst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmTelefonoProveedor As New DalOtmTelefonoProveedor(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmTelefonoProveedor.ObtenerDatosPaginacionVOtmTelefonoProveedorlst(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene un registro de la tabla OTM_TELEFONO_PROVEEDOR según el criterio indicado
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <returns>Entidad que representa la información obtenida al ejecutar la consulta</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>04/08/2016 03:38:48 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_TELEFONO_PROVEEDOR_ObtenerRegistro(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String) As EntOtmTelefonoProveedor
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmTelefonoProveedor As New DalOtmTelefonoProveedor(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmTelefonoProveedor.ObtenerRegistro(pvc_Condicion)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

#End Region

#Region "OTM_CORREO_PROVEEDOR"
    ''' <summary>
    ''' Permite agregar un registro en la tabla OTM_CORREO_PROVEEDOR
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>04/08/2016 03:37:27 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_CORREO_PROVEEDOR_InsertarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtmCorreoProveedor) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtmCorreoProveedor As New BllOtmCorreoProveedor(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_INSERTAR)

            Return vlo_BllOtmCorreoProveedor.InsertarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTM_CORREO_PROVEEDOR
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>04/08/2016 03:37:27 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_CORREO_PROVEEDOR_BorrarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtmCorreoProveedor) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmCorreoProveedor As New DalOtmCorreoProveedor(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_BORRAR)

            Return vlo_DalOtmCorreoProveedor.BorrarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTM_CORREO_PROVEEDOR
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>04/08/2016 03:37:27 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_CORREO_PROVEEDOR_ModificarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtmCorreoProveedor) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmCorreoProveedor As New DalOtmCorreoProveedor(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_MODIFICAR)

            Return vlo_DalOtmCorreoProveedor.ModificarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTM_CORREO_PROVEEDOR según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>04/08/2016 03:37:27 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_CORREO_PROVEEDOR_ListarRegistros(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmCorreoProveedor As New DalOtmCorreoProveedor(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmCorreoProveedor.ListarRegistros(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTM_CORREO_PROVEEDOR según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>04/08/2016 03:37:27 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_CORREO_PROVEEDOR_ObtenerDatosPaginacionVOtmCorreoProveedor(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmCorreoProveedor As New DalOtmCorreoProveedor(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmCorreoProveedor.ObtenerDatosPaginacionVOtmCorreoProveedor(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTM_CORREO_PROVEEDORLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>04/08/2016 03:37:27 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_CORREO_PROVEEDOR_ListarRegistrosLista(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmCorreoProveedor As New DalOtmCorreoProveedor(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmCorreoProveedor.ListarRegistrosLista(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTM_CORREO_PROVEEDORLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>04/08/2016 03:37:27 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_CORREO_PROVEEDOR_ObtenerDatosPaginacionVOtmCorreoProveedorlst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmCorreoProveedor As New DalOtmCorreoProveedor(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmCorreoProveedor.ObtenerDatosPaginacionVOtmCorreoProveedorlst(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene un registro de la tabla OTM_CORREO_PROVEEDOR según el criterio indicado
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <returns>Entidad que representa la información obtenida al ejecutar la consulta</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>04/08/2016 03:37:27 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTM_CORREO_PROVEEDOR_ObtenerRegistro(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String) As EntOtmCorreoProveedor
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtmCorreoProveedor As New DalOtmCorreoProveedor(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtmCorreoProveedor.ObtenerRegistro(pvc_Condicion)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

#End Region

#Region "OTC_ESTADO_TRASLADO"
    ''' <summary>
    ''' Permite agregar un registro en la tabla OTC_ESTADO_TRASLADO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>09/08/2016 08:59:53 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTC_ESTADO_TRASLADO_InsertarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtcEstadoTraslado) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtcEstadoTraslado As New BllOtcEstadoTraslado(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_INSERTAR)

            Return vlo_BllOtcEstadoTraslado.InsertarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTC_ESTADO_TRASLADO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>09/08/2016 08:59:53 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTC_ESTADO_TRASLADO_BorrarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtcEstadoTraslado) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtcEstadoTraslado As New BllOtcEstadoTraslado(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_BORRAR)

            Return vlo_BllOtcEstadoTraslado.BorrarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTC_ESTADO_TRASLADO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>09/08/2016 08:59:53 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTC_ESTADO_TRASLADO_ModificarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtcEstadoTraslado) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtcEstadoTraslado As New DalOtcEstadoTraslado(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_MODIFICAR)

            Return vlo_DalOtcEstadoTraslado.ModificarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTC_ESTADO_TRASLADO según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>09/08/2016 08:59:53 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTC_ESTADO_TRASLADO_ListarRegistros(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtcEstadoTraslado As New DalOtcEstadoTraslado(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtcEstadoTraslado.ListarRegistros(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTC_ESTADO_TRASLADO según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>09/08/2016 08:59:53 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTC_ESTADO_TRASLADO_ObtenerDatosPaginacionVOtcEstadoTraslado(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtcEstadoTraslado As New DalOtcEstadoTraslado(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtcEstadoTraslado.ObtenerDatosPaginacionVOtcEstadoTraslado(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTC_ESTADO_TRASLADOLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>09/08/2016 08:59:53 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTC_ESTADO_TRASLADO_ListarRegistrosLista(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtcEstadoTraslado As New DalOtcEstadoTraslado(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtcEstadoTraslado.ListarRegistrosLista(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTC_ESTADO_TRASLADOLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>09/08/2016 08:59:53 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTC_ESTADO_TRASLADO_ObtenerDatosPaginacionVOtcEstadoTrasladolst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtcEstadoTraslado As New DalOtcEstadoTraslado(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtcEstadoTraslado.ObtenerDatosPaginacionVOtcEstadoTrasladolst(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene un registro de la tabla OTC_ESTADO_TRASLADO según el criterio indicado
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <returns>Entidad que representa la información obtenida al ejecutar la consulta</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>09/08/2016 08:59:53 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTC_ESTADO_TRASLADO_ObtenerRegistro(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String) As EntOtcEstadoTraslado
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtcEstadoTraslado As New DalOtcEstadoTraslado(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtcEstadoTraslado.ObtenerRegistro(pvc_Condicion)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

#End Region

#Region "OTL_LINEA_TRASLADO"
    ''' <summary>
    ''' Permite agregar un registro en la tabla OTL_LINEA_TRASLADO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>09/08/2016 09:07:05 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTL_LINEA_TRASLADO_InsertarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtlLineaTraslado) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtlLineaTraslado As New BllOtlLineaTraslado(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_INSERTAR)

            Return vlo_BllOtlLineaTraslado.InsertarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTL_LINEA_TRASLADO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>09/08/2016 09:07:05 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTL_LINEA_TRASLADO_BorrarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtlLineaTraslado) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtlLineaTraslado As New DalOtlLineaTraslado(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_BORRAR)

            Return vlo_DalOtlLineaTraslado.BorrarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTL_LINEA_TRASLADO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>09/08/2016 09:07:05 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTL_LINEA_TRASLADO_ModificarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtlLineaTraslado) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtlLineaTraslado As New DalOtlLineaTraslado(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_MODIFICAR)

            Return vlo_DalOtlLineaTraslado.ModificarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTL_LINEA_TRASLADO según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>09/08/2016 09:07:05 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTL_LINEA_TRASLADO_ListarRegistros(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtlLineaTraslado As New DalOtlLineaTraslado(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtlLineaTraslado.ListarRegistros(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTL_LINEA_TRASLADO según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>09/08/2016 09:07:05 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTL_LINEA_TRASLADO_ObtenerDatosPaginacionVOtlLineaTraslado(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtlLineaTraslado As New DalOtlLineaTraslado(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtlLineaTraslado.ObtenerDatosPaginacionVOtlLineaTraslado(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTL_LINEA_TRASLADOLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>09/08/2016 09:07:05 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTL_LINEA_TRASLADO_ListarRegistrosLista(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtlLineaTraslado As New DalOtlLineaTraslado(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtlLineaTraslado.ListarRegistrosLista(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTL_LINEA_TRASLADOLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>09/08/2016 09:07:05 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTL_LINEA_TRASLADO_ObtenerDatosPaginacionVOtlLineaTrasladolst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtlLineaTraslado As New DalOtlLineaTraslado(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtlLineaTraslado.ObtenerDatosPaginacionVOtlLineaTrasladolst(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene un registro de la tabla OTL_LINEA_TRASLADO según el criterio indicado
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <returns>Entidad que representa la información obtenida al ejecutar la consulta</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>09/08/2016 09:07:05 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTL_LINEA_TRASLADO_ObtenerRegistro(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String) As EntOtlLineaTraslado
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtlLineaTraslado As New DalOtlLineaTraslado(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtlLineaTraslado.ObtenerRegistro(pvc_Condicion)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

#End Region

#Region "OTL_SOLICITUD_TRASLADO"
    ''' <summary>
    ''' Permite agregar un registro en la tabla OTL_SOLICITUD_TRASLADO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>09/08/2016 09:09:43 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTL_SOLICITUD_TRASLADO_InsertarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtlSolicitudTraslado) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtlSolicitudTraslado As New BllOtlSolicitudTraslado(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_INSERTAR)

            Return vlo_BllOtlSolicitudTraslado.InsertarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTL_SOLICITUD_TRASLADO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>09/08/2016 09:09:43 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTL_SOLICITUD_TRASLADO_BorrarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtlSolicitudTraslado) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtlSolicitudTraslado As New DalOtlSolicitudTraslado(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_BORRAR)

            Return vlo_DalOtlSolicitudTraslado.BorrarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTL_SOLICITUD_TRASLADO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>09/08/2016 09:09:43 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTL_SOLICITUD_TRASLADO_ModificarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtlSolicitudTraslado) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtlSolicitudTraslado As New DalOtlSolicitudTraslado(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_MODIFICAR)

            Return vlo_DalOtlSolicitudTraslado.ModificarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTL_SOLICITUD_TRASLADO según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>09/08/2016 09:09:43 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTL_SOLICITUD_TRASLADO_ListarRegistros(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtlSolicitudTraslado As New DalOtlSolicitudTraslado(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtlSolicitudTraslado.ListarRegistros(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTL_SOLICITUD_TRASLADO según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>09/08/2016 09:09:43 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTL_SOLICITUD_TRASLADO_ObtenerDatosPaginacionVOtlSolicitudTraslado(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtlSolicitudTraslado As New DalOtlSolicitudTraslado(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtlSolicitudTraslado.ObtenerDatosPaginacionVOtlSolicitudTraslado(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTL_SOLICITUD_TRASLADOLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>09/08/2016 09:09:43 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTL_SOLICITUD_TRASLADO_ListarRegistrosLista(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtlSolicitudTraslado As New DalOtlSolicitudTraslado(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtlSolicitudTraslado.ListarRegistrosLista(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTL_SOLICITUD_TRASLADOLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>09/08/2016 09:09:43 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTL_SOLICITUD_TRASLADO_ObtenerDatosPaginacionVOtlSolicitudTrasladolst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtlSolicitudTraslado As New DalOtlSolicitudTraslado(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtlSolicitudTraslado.ObtenerDatosPaginacionVOtlSolicitudTrasladolst(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene un registro de la tabla OTL_SOLICITUD_TRASLADO según el criterio indicado
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <returns>Entidad que representa la información obtenida al ejecutar la consulta</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>09/08/2016 09:09:43 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTL_SOLICITUD_TRASLADO_ObtenerRegistro(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String) As EntOtlSolicitudTraslado
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtlSolicitudTraslado As New DalOtlSolicitudTraslado(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtlSolicitudTraslado.ObtenerRegistro(pvc_Condicion)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

#End Region

#Region "OTL_TRAZABIL_SOL_TRASLADO"
    ''' <summary>
    ''' Permite agregar un registro en la tabla OTL_TRAZABIL_SOL_TRASLADO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>09/08/2016 09:12:03 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTL_TRAZABIL_SOL_TRASLADO_InsertarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtlTrazabilSolTraslado) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtlTrazabilSolTraslado As New BllOtlTrazabilSolTraslado(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_INSERTAR)

            Return vlo_BllOtlTrazabilSolTraslado.InsertarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTL_TRAZABIL_SOL_TRASLADO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>09/08/2016 09:12:03 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTL_TRAZABIL_SOL_TRASLADO_BorrarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtlTrazabilSolTraslado) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtlTrazabilSolTraslado As New DalOtlTrazabilSolTraslado(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_BORRAR)

            Return vlo_DalOtlTrazabilSolTraslado.BorrarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTL_TRAZABIL_SOL_TRASLADO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>09/08/2016 09:12:03 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTL_TRAZABIL_SOL_TRASLADO_ModificarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtlTrazabilSolTraslado) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtlTrazabilSolTraslado As New DalOtlTrazabilSolTraslado(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_MODIFICAR)

            Return vlo_DalOtlTrazabilSolTraslado.ModificarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTL_TRAZABIL_SOL_TRASLADO según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>09/08/2016 09:12:03 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTL_TRAZABIL_SOL_TRASLADO_ListarRegistros(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtlTrazabilSolTraslado As New DalOtlTrazabilSolTraslado(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtlTrazabilSolTraslado.ListarRegistros(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTL_TRAZABIL_SOL_TRASLADO según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>09/08/2016 09:12:03 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTL_TRAZABIL_SOL_TRASLADO_ObtenerDatosPaginacionVOtlTrazabilSolTraslado(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtlTrazabilSolTraslado As New DalOtlTrazabilSolTraslado(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtlTrazabilSolTraslado.ObtenerDatosPaginacionVOtlTrazabilSolTraslado(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTL_TRAZABIL_SOL_TRASLADOLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>09/08/2016 09:12:03 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTL_TRAZABIL_SOL_TRASLADO_ListarRegistrosLista(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtlTrazabilSolTraslado As New DalOtlTrazabilSolTraslado(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtlTrazabilSolTraslado.ListarRegistrosLista(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTL_TRAZABIL_SOL_TRASLADOLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>09/08/2016 09:12:03 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTL_TRAZABIL_SOL_TRASLADO_ObtenerDatosPaginacionVOtlTrazabilSolTrasladolst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtlTrazabilSolTraslado As New DalOtlTrazabilSolTraslado(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtlTrazabilSolTraslado.ObtenerDatosPaginacionVOtlTrazabilSolTrasladolst(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene un registro de la tabla OTL_TRAZABIL_SOL_TRASLADO según el criterio indicado
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <returns>Entidad que representa la información obtenida al ejecutar la consulta</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>09/08/2016 09:12:03 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTL_TRAZABIL_SOL_TRASLADO_ObtenerRegistro(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String) As EntOtlTrazabilSolTraslado
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtlTrazabilSolTraslado As New DalOtlTrazabilSolTraslado(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtlTrazabilSolTraslado.ObtenerRegistro(pvc_Condicion)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

#End Region

#Region "OTT_LINEA_TRASLADO"
    ''' <summary>
    ''' Permite agregar un registro en la tabla OTT_LINEA_TRASLADO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>09/08/2016 09:16:31 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_LINEA_TRASLADO_InsertarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttLineaTraslado) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttLineaTraslado As New BllOttLineaTraslado(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_INSERTAR)

            Return vlo_BllOttLineaTraslado.InsertarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTT_LINEA_TRASLADO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>09/08/2016 09:16:31 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_LINEA_TRASLADO_BorrarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttLineaTraslado) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttLineaTraslado As New DalOttLineaTraslado(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_BORRAR)

            Return vlo_DalOttLineaTraslado.BorrarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTT_LINEA_TRASLADO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>09/08/2016 09:16:31 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_LINEA_TRASLADO_ModificarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttLineaTraslado) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttLineaTraslado As New DalOttLineaTraslado(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_MODIFICAR)

            Return vlo_DalOttLineaTraslado.ModificarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTT_LINEA_TRASLADO según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>09/08/2016 09:16:31 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_LINEA_TRASLADO_ListarRegistros(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttLineaTraslado As New DalOttLineaTraslado(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOttLineaTraslado.ListarRegistros(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTT_LINEA_TRASLADO según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>09/08/2016 09:16:31 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_LINEA_TRASLADO_ObtenerDatosPaginacionVOttLineaTraslado(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttLineaTraslado As New DalOttLineaTraslado(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOttLineaTraslado.ObtenerDatosPaginacionVOttLineaTraslado(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTT_LINEA_TRASLADOLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>09/08/2016 09:16:31 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_LINEA_TRASLADO_ListarRegistrosLista(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttLineaTraslado As New DalOttLineaTraslado(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOttLineaTraslado.ListarRegistrosLista(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTT_LINEA_TRASLADOLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>09/08/2016 09:16:31 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_LINEA_TRASLADO_ObtenerDatosPaginacionVOttLineaTrasladolst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttLineaTraslado As New DalOttLineaTraslado(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOttLineaTraslado.ObtenerDatosPaginacionVOttLineaTrasladolst(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene un registro de la tabla OTT_LINEA_TRASLADO según el criterio indicado
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <returns>Entidad que representa la información obtenida al ejecutar la consulta</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>09/08/2016 09:16:31 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_LINEA_TRASLADO_ObtenerRegistro(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String) As EntOttLineaTraslado
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttLineaTraslado As New DalOttLineaTraslado(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOttLineaTraslado.ObtenerRegistro(pvc_Condicion)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTTH_LINEA_TRASLADO según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>09/08/2016 09:16:31 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_LINEA_TRASLADO_ListarVOtthLineaTraslado(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttLineaTraslado As New DalOttLineaTraslado(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOttLineaTraslado.ListarVOtthLineaTraslado(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTTH_LINEA_TRASLADO según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>09/08/2016 09:16:31 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_LINEA_TRASLADO_ObtenerDatosPaginacionVOtthLineaTraslado(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttLineaTraslado As New DalOttLineaTraslado(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOttLineaTraslado.ObtenerDatosPaginacionVOtthLineaTraslado(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

#End Region

#Region "OTT_SOLICITUD_TRASLADO"
    ''' <summary>
    ''' Permite agregar un registro en la tabla OTT_SOLICITUD_TRASLADO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>09/08/2016 09:18:06 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_SOLICITUD_TRASLADO_InsertarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttSolicitudTraslado) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttSolicitudTraslado As New BllOttSolicitudTraslado(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_INSERTAR)

            Return vlo_BllOttSolicitudTraslado.InsertarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTT_SOLICITUD_TRASLADO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>09/08/2016 09:18:06 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_SOLICITUD_TRASLADO_BorrarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttSolicitudTraslado) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttSolicitudTraslado As New BllOttSolicitudTraslado(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_BORRAR)

            Return vlo_BllOttSolicitudTraslado.BorrarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTT_SOLICITUD_TRASLADO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>09/08/2016 09:18:06 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_SOLICITUD_TRASLADO_ModificarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttSolicitudTraslado) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttSolicitudTraslado As New DalOttSolicitudTraslado(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_MODIFICAR)

            Return vlo_DalOttSolicitudTraslado.ModificarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTT_SOLICITUD_TRASLADO según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>09/08/2016 09:18:06 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_SOLICITUD_TRASLADO_ListarRegistros(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttSolicitudTraslado As New DalOttSolicitudTraslado(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOttSolicitudTraslado.ListarRegistros(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTT_SOLICITUD_TRASLADO según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>09/08/2016 09:18:06 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_SOLICITUD_TRASLADO_ObtenerDatosPaginacionVOttSolicitudTraslado(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttSolicitudTraslado As New DalOttSolicitudTraslado(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOttSolicitudTraslado.ObtenerDatosPaginacionVOttSolicitudTraslado(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTT_SOLICITUD_TRASLADOLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>09/08/2016 09:18:06 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_SOLICITUD_TRASLADO_ListarRegistrosLista(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttSolicitudTraslado As New DalOttSolicitudTraslado(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOttSolicitudTraslado.ListarRegistrosLista(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTT_SOLICITUD_TRASLADOLst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>09/08/2016 09:18:06 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_SOLICITUD_TRASLADO_ObtenerDatosPaginacionVOttSolicitudTrasladolst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttSolicitudTraslado As New DalOttSolicitudTraslado(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOttSolicitudTraslado.ObtenerDatosPaginacionVOttSolicitudTrasladolst(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene un registro de la tabla OTT_SOLICITUD_TRASLADO según el criterio indicado
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <returns>Entidad que representa la información obtenida al ejecutar la consulta</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>09/08/2016 09:18:06 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_SOLICITUD_TRASLADO_ObtenerRegistro(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String) As EntOttSolicitudTraslado
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttSolicitudTraslado As New DalOttSolicitudTraslado(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOttSolicitudTraslado.ObtenerRegistro(pvc_Condicion)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTTH_SOLICITUD_TRASLADO según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>09/08/2016 09:18:06 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_SOLICITUD_TRASLADO_ListarVOtthSolicitudTraslado(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttSolicitudTraslado As New DalOttSolicitudTraslado(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOttSolicitudTraslado.ListarVOtthSolicitudTraslado(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTTH_SOLICITUD_TRASLADO según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>09/08/2016 09:18:06 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_SOLICITUD_TRASLADO_ObtenerDatosPaginacionVOtthSolicitudTraslado(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttSolicitudTraslado As New DalOttSolicitudTraslado(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOttSolicitudTraslado.ObtenerDatosPaginacionVOtthSolicitudTraslado(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite agregar un registro en la tabla OTM_PROVEEDOR
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>04/08/2016 03:35:36 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_SOLICITUD_TRASLADO_InsertarModificarRegistroConAsociados(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttSolicitudTraslado, ByVal pvo_DsLineaSolicitud As DataSet, ByVal pvb_EsAgregar As Boolean) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttSolicitudTraslado As New BllOttSolicitudTraslado(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_INSERTAR)

            Return vlo_BllOttSolicitudTraslado.InsertarModificarRegistroConAsociados(pvo_Registro, pvo_DsLineaSolicitud, pvb_EsAgregar)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene un registro de la tabla OTT_SOLICITUD_TRASLADO según el criterio indicado
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <returns>Entidad que representa la información obtenida al ejecutar la consulta</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>09/08/2016 09:18:06 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_SOLICITUD_TRASLADO_ObtenerRegistroLista(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String) As EntOttSolicitudTraslado
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOttSolicitudTraslado As New DalOttSolicitudTraslado(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOttSolicitudTraslado.ObtenerRegistroLista(pvc_Condicion)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTT_LINEA_TRASLADO
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>09/08/2016 09:16:31 a.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_SOLICITUD_TRASLADO_BorrarRegistrosConjunto(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttSolicitudTraslado) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BLLOttSolicitudTraslado As New BllOttSolicitudTraslado(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_BORRAR)

            Return vlo_BLLOttSolicitudTraslado.BorrarRegistrosConjunto(pvo_Registro)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite agregar un registro en la tabla OTM_PROVEEDOR
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>04/08/2016 03:35:36 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTT_SOLICITUD_TRASLADO_ModificarRegistroConDesicion(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOttSolicitudTraslado, ByVal pvo_RegistroTrazabilidad As EntOtlTrazabilSolTraslado, ByVal pvo_DsLineaSolicitud As DataSet, ByVal pvb_EsAprobar As Boolean) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOttSolicitudTraslado As New BllOttSolicitudTraslado(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_INSERTAR)

            Return vlo_BllOttSolicitudTraslado.ModificarRegistroConDesicion(pvo_Registro, pvo_RegistroTrazabilidad, pvo_DsLineaSolicitud, pvb_EsAprobar)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

#End Region

#Region "OTC_ESTADO_AJUSTE"
    ''' <summary>
    ''' Permite agregar un registro en la tabla OTC_ESTADO_AJUSTE
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso; el valor puede corresponder a la llave autogenerada. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>24/01/2017 01:44:49 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTC_ESTADO_AJUSTE_InsertarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtcEstadoAjuste) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtcEstadoAjuste As New BllOtcEstadoAjuste(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_INSERTAR)

            Return vlo_BllOtcEstadoAjuste.InsertarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTC_ESTADO_AJUSTE
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>24/01/2017 01:44:49 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTC_ESTADO_AJUSTE_BorrarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtcEstadoAjuste) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_BllOtcEstadoAjuste As New BllOtcEstadoAjuste(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_BORRAR)

            Return vlo_BllOtcEstadoAjuste.BorrarRegistro(pvo_Registro)
        Catch vlo_OT_Excepcion As OrdenesDeTrabajoException
            Throw New System.Web.Services.Protocols.SoapException(
                vlo_OT_Excepcion.Message,
                System.Web.Services.Protocols.SoapException.ServerFaultCode,
                OrdenesDeTrabajoException.NOMBRE_CLASE,
                vlo_OT_Excepcion.GetSoapExceptionDetail)

        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Permite borrar un registro en la tabla OTC_ESTADO_AJUSTE
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvo_Registro">Entidad a procesar</param>
    ''' <returns>Mayor a cero: El proceso ha sido exitoso. Menor a cero: El proceso ha fallado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>24/01/2017 01:44:49 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTC_ESTADO_AJUSTE_ModificarRegistro(pvc_Usuario As String, pvc_Clave As String, ByVal pvo_Registro As EntOtcEstadoAjuste) As Integer
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtcEstadoAjuste As New DalOtcEstadoAjuste(pvo_Registro, vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_MODIFICAR)

            Return vlo_DalOtcEstadoAjuste.ModificarRegistro()
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTC_ESTADO_AJUSTE según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>24/01/2017 01:44:49 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTC_ESTADO_AJUSTE_ListarRegistros(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtcEstadoAjuste As New DalOtcEstadoAjuste(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtcEstadoAjuste.ListarRegistros(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTC_ESTADO_AJUSTE según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>24/01/2017 01:44:49 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTC_ESTADO_AJUSTE_ObtenerDatosPaginacionVOtcEstadoAjuste(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtcEstadoAjuste As New DalOtcEstadoAjuste(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtcEstadoAjuste.ObtenerDatosPaginacionVOtcEstadoAjuste(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene los registros de la vista V_OTC_ESTADO_AJUSTELst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvb_Paginar">Indica si debe paginarse el resultado de la consulta</param>
    ''' <param name="pvn_NumeroPagina">Indica el número de página a retornar</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>DataSet con la información obtenida según el criterio de búsqueda indicado</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>24/01/2017 01:44:49 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTC_ESTADO_AJUSTE_ListarRegistrosLista(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvb_Paginar As Boolean, pvn_NumeroPagina As Integer, pvn_TamanoPagina As Integer) As DataSet
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtcEstadoAjuste As New DalOtcEstadoAjuste(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtcEstadoAjuste.ListarRegistrosLista(pvc_Condicion, pvc_Orden, pvb_Paginar, pvn_NumeroPagina, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene la cantidad de registros y páginas que retornará la consulta a la vista V_OTC_ESTADO_AJUSTELst según el criterio y orden indicados
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <param name="pvc_Orden">Corresponde al detalle de la cláusula ORDER BY</param>
    ''' <param name="pvn_TamanoPagina">Indica la cantidad máxima de registro a retornar por página</param>
    ''' <returns>Entidad que contiene el total de registros de la consulta, el tamaño de la página y la cantidad de páginas requeridas para desplegar la información</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>24/01/2017 01:44:49 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTC_ESTADO_AJUSTE_ObtenerDatosPaginacionVOtcEstadoAjustelst(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String, pvc_Orden As String, pvn_TamanoPagina As Integer) As EntDatosPaginacion
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtcEstadoAjuste As New DalOtcEstadoAjuste(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtcEstadoAjuste.ObtenerDatosPaginacionVOtcEstadoAjustelst(pvc_Condicion, pvc_Orden, pvn_TamanoPagina)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

    ''' <summary>
    ''' Obtiene un registro de la tabla OTC_ESTADO_AJUSTE según el criterio indicado
    ''' </summary>
    ''' <param name="pvc_Usuario">Nombre de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Clave">Clave de usuario para acceso a servicio web</param>
    ''' <param name="pvc_Condicion">Corresponde al detalle de la cláusula WHERE</param>
    ''' <returns>Entidad que representa la información obtenida al ejecutar la consulta</returns>
    ''' <author>Generador de Código basado en objetos Oracle</author>
    ''' <creationDate>24/01/2017 01:44:49 p.m.</creationDate>
    ''' <changeLog></changeLog>
    <WebMethod()> _
    Public Function OTC_ESTADO_AJUSTE_ObtenerRegistro(pvc_Usuario As String, pvc_Clave As String, pvc_Condicion As String) As EntOtcEstadoAjuste
        Dim vlo_Conexion As String = System.Configuration.ConfigurationManager.ConnectionStrings(Constantes.CONEXION_ORDENES_DE_TRABAJO).ConnectionString
        Dim vlo_DalOtcEstadoAjuste As New DalOtcEstadoAjuste(vlo_Conexion)
        Dim vlo_Seguridad As WsrWsSeguridad.WsSeguridad

        Try
            vlo_Seguridad = New WsrWsSeguridad.WsSeguridad
            vlo_Seguridad.Credentials = System.Net.CredentialCache.DefaultCredentials
            vlo_Seguridad.Timeout = -1
            vlo_Seguridad.EjecucionAutorizada(pvc_Usuario, pvc_Clave, Utilerias.WsSeguridad.Constantes.OT_CATALOGOS_CONSULTAR)

            Return vlo_DalOtcEstadoAjuste.ObtenerRegistro(pvc_Condicion)
        Catch vlo_Excepcion As Exception
            Dim vlo_Rethrow As Boolean = ExceptionPolicy.HandleException(vlo_Excepcion, Constantes.EHP_ORDENES_DE_TRABAJO)
            If (vlo_Rethrow) Then
                Throw ControlDeErrores.DetallarExcepcion(vlo_Excepcion)
            End If
        End Try
    End Function

#End Region
End Class

